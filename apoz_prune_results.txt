17
tensor([2, 2, 0, 3, 2, 3, 0, 2, 2, 2, 2, 2, 1, 2, 3, 2, 0, 0, 2, 2, 4, 2, 2, 2,
        2, 3, 4, 2, 2, 2, 2, 4])
tensor([4, 2, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2, 2, 2, 0, 2, 2, 3, 1, 3, 2, 2, 4, 4,
        2, 2, 0, 2, 4, 3, 3, 2])
tensor([4, 2, 0, 2, 2, 2, 2, 3, 2, 3, 3, 1, 1, 1, 2, 1, 4, 1, 2, 4, 2, 2, 2, 2,
        2, 3, 4, 2, 1, 2, 4, 2])
tensor([1, 2, 4, 2, 2, 2, 2, 2, 2, 3, 1, 0, 2, 4, 2, 2, 4, 4, 4, 4, 0, 0, 2, 2,
        4, 2, 2, 2, 2, 2, 2, 0])
tensor([2, 2, 4, 2, 2, 2, 2, 1, 0, 1, 4, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 0, 4, 2,
        2, 2, 2, 2, 2, 3, 0, 2])
tensor([4, 1, 3, 2, 2, 4, 3, 2, 0, 2, 2, 4, 2, 3, 0, 4, 3, 3, 3, 2, 2, 3, 3, 3,
        4, 2, 1, 4, 2, 2, 0, 2])
tensor([4, 2, 2, 3, 2, 2, 2, 3, 2, 2, 4, 3, 2, 0, 3, 2, 2, 2, 4, 1, 2, 2, 1, 2,
        2, 2, 2, 2, 0, 2, 2, 2])
tensor([2, 2, 1, 4, 1, 2, 3, 1, 4, 2, 3, 2, 2, 2, 4, 4, 2, 0, 2, 2, 1, 0, 4, 2,
        3, 4, 4, 1, 3, 2, 3, 2])
tensor([4, 2, 3, 2, 3, 2, 2, 3, 0, 2, 3, 2, 1, 2, 0, 1, 4, 0, 2, 2, 1, 4, 2, 4,
        4, 4, 1, 4, 0, 2, 2, 2])
tensor([2, 2, 4, 2, 3, 2, 4, 2, 2, 2, 0, 0, 2, 2, 2, 1, 1, 4, 4, 4, 4, 2, 2, 2,
        2, 1, 1, 1, 4, 2, 2, 4])
tensor([2, 2, 2, 4, 0, 1, 2, 3, 4, 2, 4, 2, 0, 2, 2, 2, 3, 2, 4, 3, 2, 2, 2, 2,
        2, 2, 0, 2, 2, 2, 3, 3])
tensor([3, 2, 3, 2, 2, 4, 1, 0, 2, 4, 0, 1, 0, 0, 1, 1, 2, 2, 2, 1, 2, 4, 2, 0,
        0, 2, 2, 2, 4, 2, 0, 2])
tensor([2, 3, 2, 3, 2, 1, 2, 2, 1, 1, 3, 3, 2, 2, 0, 2, 4, 2, 4, 2, 2, 4, 0, 4,
        2, 2, 4, 2, 2, 3, 4, 2])
tensor([2, 2, 2, 2, 2, 2, 2, 4, 2, 4, 2, 0, 2, 2, 1, 2, 3, 3, 3, 2, 2, 3, 4, 2,
        0, 2, 2, 0, 2, 3, 3, 3])
tensor([2, 0, 2, 4, 4, 1, 2, 3, 2, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 4, 2, 2, 0,
        2, 2, 3, 2, 4, 4, 2, 2])
tensor([2, 2, 4, 2, 0, 4, 2, 2, 2, 1, 2, 1, 1, 2, 3, 1, 2, 4, 3, 3, 2, 1, 3, 4,
        2, 0, 2, 1, 2, 3, 0, 2])
tensor([1, 1, 0, 4, 3, 4, 2, 4, 4, 2, 2, 1, 2, 4, 4, 2, 0, 2, 2, 3, 2, 4, 2])
backbone.stem.0
8

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.stem.0 (Conv2d(3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)) => prune_out_channels on backbone.stem.0 (Conv2d(3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)), #idxs=8
[1] prune_out_channels on backbone.stem.0 (Conv2d(3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)) => prune_out_channels on backbone.stem.1 (BatchNorm2d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[2] prune_out_channels on backbone.stem.1 (BatchNorm2d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_40(HardtanhBackward0), #idxs=8
[3] prune_out_channels on _ElementWiseOp_40(HardtanhBackward0) => prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)), #idxs=8
[4] prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=24, bias=False)) => prune_out_channels on backbone.blocks.0.0._bn1 (BatchNorm2d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[5] prune_out_channels on backbone.blocks.0.0._bn1 (BatchNorm2d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_39(HardtanhBackward0), #idxs=8
[6] prune_out_channels on _ElementWiseOp_39(HardtanhBackward0) => prune_in_channels on backbone.blocks.0.0._project_conv (Conv2d(24, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.stem.0
90
tensor([ True,  True,  True,  True,  True,  True,  True, False, False, False,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True, False])
torch.Size([32])
torch.Size([24])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.0.0._depthwise_conv
89
tensor([ True,  True,  True,  True,  True,  True,  True, False, False, False,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True, False])
torch.Size([32])
torch.Size([24])
backbone.blocks.0.0._depthwise_conv
2
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(22, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=22, bias=False)) => prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(22, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=22, bias=False)), #idxs=2
[1] prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(22, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=22, bias=False)) => prune_out_channels on _ElementWiseOp_40(HardtanhBackward0), #idxs=2
[2] prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(22, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=22, bias=False)) => prune_out_channels on backbone.blocks.0.0._bn1 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=2
[3] prune_out_channels on backbone.blocks.0.0._bn1 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_39(HardtanhBackward0), #idxs=2
[4] prune_out_channels on _ElementWiseOp_39(HardtanhBackward0) => prune_in_channels on backbone.blocks.0.0._project_conv (Conv2d(22, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=2
[5] prune_out_channels on _ElementWiseOp_40(HardtanhBackward0) => prune_out_channels on backbone.stem.1 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=2
[6] prune_out_channels on backbone.stem.1 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.stem.0 (Conv2d(3, 22, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)), #idxs=2
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.0.0._depthwise_conv
89
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True])
torch.Size([24])
torch.Size([22])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.stem.0
90
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True])
torch.Size([24])
torch.Size([22])
backbone.blocks.0.0._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.0.0._project_conv (Conv2d(22, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.0.0._project_conv (Conv2d(22, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.0.0._project_conv
88
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True])
torch.Size([24])
torch.Size([24])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 144, 75, 75]           3,456           3,456
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 144, 75, 75]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 144, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 144, 38, 38]           1,296           1,296
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 144, 38, 38]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,608           4,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 192, 19, 19]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 192, 19, 19]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,752          10,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,731,333
Trainable params: 11,731,333
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.239686, Validation Loss: 0.267680, Training Accuracy: 0.955618, Validation Accuracy: 0.927731
Validation loss decreased (inf --> 0.267680).  Saving model ...
Epoch: 2, Training Loss: 0.243808, Validation Loss: 0.265291, Training Accuracy: 0.957423, Validation Accuracy: 0.929412
Validation loss decreased (0.267680 --> 0.265291).  Saving model ...
Epoch: 3, Training Loss: 0.236595, Validation Loss: 0.265148, Training Accuracy: 0.959913, Validation Accuracy: 0.930719
Validation loss decreased (0.265291 --> 0.265148).  Saving model ...
Epoch: 4, Training Loss: 0.230692, Validation Loss: 0.269331, Training Accuracy: 0.961158, Validation Accuracy: 0.928665
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.236726, Validation Loss: 0.267493, Training Accuracy: 0.958108, Validation Accuracy: 0.928478
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.235258, Validation Loss: 0.262722, Training Accuracy: 0.959602, Validation Accuracy: 0.930532
Validation loss decreased (0.265148 --> 0.262722).  Saving model ...
Epoch: 7, Training Loss: 0.232311, Validation Loss: 0.263704, Training Accuracy: 0.960100, Validation Accuracy: 0.930345
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.231654, Validation Loss: 0.264780, Training Accuracy: 0.960784, Validation Accuracy: 0.930532
EarlyStopping counter: 2 out of 10
Epoch: 9, Training Loss: 0.232011, Validation Loss: 0.263278, Training Accuracy: 0.958045, Validation Accuracy: 0.929972
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 3 out of 10
Epoch: 10, Training Loss: 0.235086, Validation Loss: 0.263060, Training Accuracy: 0.961282, Validation Accuracy: 0.930532
EarlyStopping counter: 4 out of 10
Epoch: 11, Training Loss: 0.229558, Validation Loss: 0.263887, Training Accuracy: 0.961905, Validation Accuracy: 0.931466
EarlyStopping counter: 5 out of 10
Epoch: 12, Training Loss: 0.229968, Validation Loss: 0.263386, Training Accuracy: 0.961905, Validation Accuracy: 0.929972
EarlyStopping counter: 6 out of 10
Epoch: 13, Training Loss: 0.226910, Validation Loss: 0.264445, Training Accuracy: 0.962963, Validation Accuracy: 0.929972
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 7 out of 10
Epoch: 14, Training Loss: 0.231626, Validation Loss: 0.264113, Training Accuracy: 0.959975, Validation Accuracy: 0.930906
EarlyStopping counter: 8 out of 10
Epoch: 15, Training Loss: 0.232795, Validation Loss: 0.263760, Training Accuracy: 0.960286, Validation Accuracy: 0.930159
EarlyStopping counter: 9 out of 10
Epoch: 16, Training Loss: 0.234976, Validation Loss: 0.265720, Training Accuracy: 0.959477, Validation Accuracy: 0.930906
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 16
Ended Training Cycle
backbone.blocks.1.0._expand_conv
8

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.0._expand_conv (Conv2d(24, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.0._expand_conv (Conv2d(24, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[1] prune_out_channels on backbone.blocks.1.0._expand_conv (Conv2d(24, 136, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.0._bn0 (BatchNorm2d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[2] prune_out_channels on backbone.blocks.1.0._bn0 (BatchNorm2d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_38(HardtanhBackward0), #idxs=8
[3] prune_out_channels on _ElementWiseOp_38(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(136, 136, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=136, bias=False)), #idxs=8
[4] prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(136, 136, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=136, bias=False)) => prune_out_channels on backbone.blocks.1.0._bn1 (BatchNorm2d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[5] prune_out_channels on backbone.blocks.1.0._bn1 (BatchNorm2d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_37(HardtanhBackward0), #idxs=8
[6] prune_out_channels on _ElementWiseOp_37(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.0._project_conv (Conv2d(136, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.0._expand_conv
87
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True, False,  True,  True])
torch.Size([144])
torch.Size([136])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.1.0._depthwise_conv
86
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True, False,  True,  True])
torch.Size([144])
torch.Size([136])
backbone.blocks.1.0._depthwise_conv
1
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(135, 135, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=135, bias=False)) => prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(135, 135, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=135, bias=False)), #idxs=1
[1] prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(135, 135, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=135, bias=False)) => prune_out_channels on _ElementWiseOp_38(HardtanhBackward0), #idxs=1
[2] prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(135, 135, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=135, bias=False)) => prune_out_channels on backbone.blocks.1.0._bn1 (BatchNorm2d(135, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1
[3] prune_out_channels on backbone.blocks.1.0._bn1 (BatchNorm2d(135, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_37(HardtanhBackward0), #idxs=1
[4] prune_out_channels on _ElementWiseOp_37(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.0._project_conv (Conv2d(135, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1
[5] prune_out_channels on _ElementWiseOp_38(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.0._bn0 (BatchNorm2d(135, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1
[6] prune_out_channels on backbone.blocks.1.0._bn0 (BatchNorm2d(135, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.0._expand_conv (Conv2d(24, 135, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.1.0._depthwise_conv
86
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([136])
torch.Size([135])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.0._expand_conv
87
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([136])
torch.Size([135])
backbone.blocks.1.0._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.0._project_conv (Conv2d(135, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.0._project_conv (Conv2d(135, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.0._project_conv
85
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([32])
torch.Size([32])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 192, 19, 19]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 192, 19, 19]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,752          10,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,730,712
Trainable params: 11,730,712
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.241372, Validation Loss: 0.269242, Training Accuracy: 0.956676, Validation Accuracy: 0.930159
Validation loss decreased (inf --> 0.269242).  Saving model ...
Epoch: 2, Training Loss: 0.231486, Validation Loss: 0.265308, Training Accuracy: 0.960037, Validation Accuracy: 0.930159
Validation loss decreased (0.269242 --> 0.265308).  Saving model ...
Epoch: 3, Training Loss: 0.239544, Validation Loss: 0.264686, Training Accuracy: 0.960224, Validation Accuracy: 0.930159
Validation loss decreased (0.265308 --> 0.264686).  Saving model ...
Epoch: 4, Training Loss: 0.237549, Validation Loss: 0.265509, Training Accuracy: 0.960037, Validation Accuracy: 0.931279
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.237551, Validation Loss: 0.271418, Training Accuracy: 0.960971, Validation Accuracy: 0.926611
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.225137, Validation Loss: 0.264764, Training Accuracy: 0.964830, Validation Accuracy: 0.931279
EarlyStopping counter: 3 out of 10
Epoch: 7, Training Loss: 0.227359, Validation Loss: 0.265114, Training Accuracy: 0.963461, Validation Accuracy: 0.929972
EarlyStopping counter: 4 out of 10
Epoch: 8, Training Loss: 0.220408, Validation Loss: 0.265933, Training Accuracy: 0.966138, Validation Accuracy: 0.930345
EarlyStopping counter: 5 out of 10
Epoch: 9, Training Loss: 0.233400, Validation Loss: 0.265891, Training Accuracy: 0.963772, Validation Accuracy: 0.930906
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 6 out of 10
Epoch: 10, Training Loss: 0.231952, Validation Loss: 0.264462, Training Accuracy: 0.961407, Validation Accuracy: 0.930906
Validation loss decreased (0.264686 --> 0.264462).  Saving model ...
Epoch: 11, Training Loss: 0.233353, Validation Loss: 0.263445, Training Accuracy: 0.960535, Validation Accuracy: 0.930532
Validation loss decreased (0.264462 --> 0.263445).  Saving model ...
Epoch: 12, Training Loss: 0.226933, Validation Loss: 0.266199, Training Accuracy: 0.963087, Validation Accuracy: 0.929785
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.227284, Validation Loss: 0.265429, Training Accuracy: 0.962465, Validation Accuracy: 0.932213
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 14, Training Loss: 0.226954, Validation Loss: 0.264195, Training Accuracy: 0.964332, Validation Accuracy: 0.931092
EarlyStopping counter: 3 out of 10
Epoch: 15, Training Loss: 0.228699, Validation Loss: 0.264834, Training Accuracy: 0.962963, Validation Accuracy: 0.930159
EarlyStopping counter: 4 out of 10
Epoch: 16, Training Loss: 0.226484, Validation Loss: 0.265779, Training Accuracy: 0.962465, Validation Accuracy: 0.930906
EarlyStopping counter: 5 out of 10
Epoch: 17, Training Loss: 0.225840, Validation Loss: 0.265641, Training Accuracy: 0.964644, Validation Accuracy: 0.931092
EarlyStopping counter: 6 out of 10
Epoch: 18, Training Loss: 0.230798, Validation Loss: 0.264182, Training Accuracy: 0.963087, Validation Accuracy: 0.930906
EarlyStopping counter: 7 out of 10
Epoch: 19, Training Loss: 0.231243, Validation Loss: 0.265464, Training Accuracy: 0.962901, Validation Accuracy: 0.929785
EarlyStopping counter: 8 out of 10
Epoch: 20, Training Loss: 0.231920, Validation Loss: 0.264287, Training Accuracy: 0.961345, Validation Accuracy: 0.930906
EarlyStopping counter: 9 out of 10
Epoch: 21, Training Loss: 0.223972, Validation Loss: 0.263994, Training Accuracy: 0.961656, Validation Accuracy: 0.930345
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 21
Ended Training Cycle
backbone.blocks.1.1._expand_conv
8

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.1._expand_conv (Conv2d(32, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.1._expand_conv (Conv2d(32, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[1] prune_out_channels on backbone.blocks.1.1._expand_conv (Conv2d(32, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.1._bn0 (BatchNorm2d(184, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[2] prune_out_channels on backbone.blocks.1.1._bn0 (BatchNorm2d(184, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_42(HardtanhBackward0), #idxs=8
[3] prune_out_channels on _ElementWiseOp_42(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(184, 184, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=184, bias=False)), #idxs=8
[4] prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(184, 184, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=184, bias=False)) => prune_out_channels on backbone.blocks.1.1._bn1 (BatchNorm2d(184, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[5] prune_out_channels on backbone.blocks.1.1._bn1 (BatchNorm2d(184, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_41(HardtanhBackward0), #idxs=8
[6] prune_out_channels on _ElementWiseOp_41(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.1._project_conv (Conv2d(184, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.1._expand_conv
84
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([184])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.1.1._depthwise_conv
83
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([184])
backbone.blocks.1.1._depthwise_conv
49
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(135, 135, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=135, bias=False)) => prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(135, 135, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=135, bias=False)), #idxs=49
[1] prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(135, 135, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=135, bias=False)) => prune_out_channels on _ElementWiseOp_42(HardtanhBackward0), #idxs=49
[2] prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(135, 135, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=135, bias=False)) => prune_out_channels on backbone.blocks.1.1._bn1 (BatchNorm2d(135, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=49
[3] prune_out_channels on backbone.blocks.1.1._bn1 (BatchNorm2d(135, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_41(HardtanhBackward0), #idxs=49
[4] prune_out_channels on _ElementWiseOp_41(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.1._project_conv (Conv2d(135, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=49
[5] prune_out_channels on _ElementWiseOp_42(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.1._bn0 (BatchNorm2d(135, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=49
[6] prune_out_channels on backbone.blocks.1.1._bn0 (BatchNorm2d(135, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.1._expand_conv (Conv2d(32, 135, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=49
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.1.1._depthwise_conv
83
tensor([ True, False,  True, False,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True, False,  True, False,  True, False,
         True,  True, False, False, False,  True, False,  True, False,  True,
         True, False, False,  True,  True,  True, False,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True, False,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
        False, False,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True, False,  True,
        False,  True,  True,  True])
torch.Size([184])
torch.Size([135])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.1._expand_conv
84
tensor([ True, False,  True, False,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True, False,  True, False,  True, False,
         True,  True, False, False, False,  True, False,  True, False,  True,
         True, False, False,  True,  True,  True, False,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True, False,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
        False, False,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True, False,  True,
        False,  True,  True,  True])
torch.Size([184])
torch.Size([135])
backbone.blocks.1.1._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.1._project_conv (Conv2d(135, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.1._project_conv (Conv2d(135, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.1._project_conv
82
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([32])
torch.Size([32])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 192, 19, 19]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 192, 19, 19]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,752          10,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,726,323
Trainable params: 11,726,323
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.235379, Validation Loss: 0.265394, Training Accuracy: 0.960473, Validation Accuracy: 0.928852
Validation loss decreased (inf --> 0.265394).  Saving model ...
Epoch: 2, Training Loss: 0.234030, Validation Loss: 0.268902, Training Accuracy: 0.962963, Validation Accuracy: 0.930345
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.231968, Validation Loss: 0.274514, Training Accuracy: 0.961967, Validation Accuracy: 0.928291
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.232374, Validation Loss: 0.271125, Training Accuracy: 0.960598, Validation Accuracy: 0.927918
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.227713, Validation Loss: 0.270229, Training Accuracy: 0.962714, Validation Accuracy: 0.927731
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.228452, Validation Loss: 0.267941, Training Accuracy: 0.965328, Validation Accuracy: 0.930532
EarlyStopping counter: 5 out of 10
Epoch: 7, Training Loss: 0.226111, Validation Loss: 0.268724, Training Accuracy: 0.964457, Validation Accuracy: 0.929599
EarlyStopping counter: 6 out of 10
Epoch: 8, Training Loss: 0.225947, Validation Loss: 0.266169, Training Accuracy: 0.966947, Validation Accuracy: 0.930345
EarlyStopping counter: 7 out of 10
Epoch: 9, Training Loss: 0.223329, Validation Loss: 0.267573, Training Accuracy: 0.964830, Validation Accuracy: 0.931279
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 8 out of 10
Epoch: 10, Training Loss: 0.225611, Validation Loss: 0.266150, Training Accuracy: 0.964581, Validation Accuracy: 0.929785
EarlyStopping counter: 9 out of 10
Epoch: 11, Training Loss: 0.227009, Validation Loss: 0.267984, Training Accuracy: 0.965266, Validation Accuracy: 0.930532
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 11
Ended Training Cycle
backbone.blocks.1.2._expand_conv
8

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.2._expand_conv (Conv2d(32, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.2._expand_conv (Conv2d(32, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[1] prune_out_channels on backbone.blocks.1.2._expand_conv (Conv2d(32, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.2._bn0 (BatchNorm2d(184, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[2] prune_out_channels on backbone.blocks.1.2._bn0 (BatchNorm2d(184, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_44(HardtanhBackward0), #idxs=8
[3] prune_out_channels on _ElementWiseOp_44(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(184, 184, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=184, bias=False)), #idxs=8
[4] prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(184, 184, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=184, bias=False)) => prune_out_channels on backbone.blocks.1.2._bn1 (BatchNorm2d(184, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[5] prune_out_channels on backbone.blocks.1.2._bn1 (BatchNorm2d(184, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_43(HardtanhBackward0), #idxs=8
[6] prune_out_channels on _ElementWiseOp_43(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.2._project_conv (Conv2d(184, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.2._expand_conv
81
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([184])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.1.2._depthwise_conv
80
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([184])
backbone.blocks.1.2._depthwise_conv
73
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(111, 111, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=111, bias=False)) => prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(111, 111, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=111, bias=False)), #idxs=73
[1] prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(111, 111, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=111, bias=False)) => prune_out_channels on _ElementWiseOp_44(HardtanhBackward0), #idxs=73
[2] prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(111, 111, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=111, bias=False)) => prune_out_channels on backbone.blocks.1.2._bn1 (BatchNorm2d(111, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=73
[3] prune_out_channels on backbone.blocks.1.2._bn1 (BatchNorm2d(111, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_43(HardtanhBackward0), #idxs=73
[4] prune_out_channels on _ElementWiseOp_43(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.2._project_conv (Conv2d(111, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=73
[5] prune_out_channels on _ElementWiseOp_44(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.2._bn0 (BatchNorm2d(111, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=73
[6] prune_out_channels on backbone.blocks.1.2._bn0 (BatchNorm2d(111, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.2._expand_conv (Conv2d(32, 111, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=73
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.1.2._depthwise_conv
80
tensor([False, False,  True,  True, False,  True, False,  True,  True,  True,
        False, False,  True, False, False, False,  True,  True,  True,  True,
         True, False,  True,  True, False, False, False,  True,  True,  True,
        False, False,  True, False, False,  True,  True,  True, False,  True,
         True,  True, False,  True, False, False,  True,  True, False, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False, False, False, False,  True, False,  True,
        False, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True, False,  True, False,  True, False,  True,
        False,  True, False,  True,  True,  True, False,  True, False,  True,
        False, False,  True,  True, False, False,  True,  True,  True, False,
         True,  True,  True,  True,  True, False, False, False,  True, False,
        False, False, False, False,  True,  True,  True,  True, False,  True,
         True,  True, False, False,  True,  True, False,  True,  True, False,
         True, False,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True, False, False, False, False,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
        False,  True, False, False])
torch.Size([184])
torch.Size([111])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.2._expand_conv
81
tensor([False, False,  True,  True, False,  True, False,  True,  True,  True,
        False, False,  True, False, False, False,  True,  True,  True,  True,
         True, False,  True,  True, False, False, False,  True,  True,  True,
        False, False,  True, False, False,  True,  True,  True, False,  True,
         True,  True, False,  True, False, False,  True,  True, False, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False, False, False, False,  True, False,  True,
        False, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True, False,  True, False,  True, False,  True,
        False,  True, False,  True,  True,  True, False,  True, False,  True,
        False, False,  True,  True, False, False,  True,  True,  True, False,
         True,  True,  True,  True,  True, False, False, False,  True, False,
        False, False, False, False,  True,  True,  True,  True, False,  True,
         True,  True, False, False,  True,  True, False,  True,  True, False,
         True, False,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True, False, False, False, False,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
        False,  True, False, False])
torch.Size([184])
torch.Size([111])
backbone.blocks.1.2._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.2._project_conv (Conv2d(111, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.2._project_conv (Conv2d(111, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.2._project_conv
79
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([32])
torch.Size([32])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 192, 19, 19]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 192, 19, 19]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,752          10,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,720,086
Trainable params: 11,720,086
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.237562, Validation Loss: 0.267756, Training Accuracy: 0.961407, Validation Accuracy: 0.928852
Validation loss decreased (inf --> 0.267756).  Saving model ...
Epoch: 2, Training Loss: 0.235853, Validation Loss: 0.267759, Training Accuracy: 0.960286, Validation Accuracy: 0.927731
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.233494, Validation Loss: 0.271837, Training Accuracy: 0.960847, Validation Accuracy: 0.929599
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.228702, Validation Loss: 0.274203, Training Accuracy: 0.963772, Validation Accuracy: 0.927918
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.222257, Validation Loss: 0.271600, Training Accuracy: 0.964270, Validation Accuracy: 0.928665
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.230453, Validation Loss: 0.266672, Training Accuracy: 0.962340, Validation Accuracy: 0.930159
Validation loss decreased (0.267756 --> 0.266672).  Saving model ...
Epoch: 7, Training Loss: 0.228342, Validation Loss: 0.265761, Training Accuracy: 0.964457, Validation Accuracy: 0.930719
Validation loss decreased (0.266672 --> 0.265761).  Saving model ...
Epoch: 8, Training Loss: 0.222470, Validation Loss: 0.266673, Training Accuracy: 0.965079, Validation Accuracy: 0.928478
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.218181, Validation Loss: 0.267145, Training Accuracy: 0.967071, Validation Accuracy: 0.929412
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.227715, Validation Loss: 0.265402, Training Accuracy: 0.964519, Validation Accuracy: 0.930906
Validation loss decreased (0.265761 --> 0.265402).  Saving model ...
Epoch: 11, Training Loss: 0.227021, Validation Loss: 0.266809, Training Accuracy: 0.964457, Validation Accuracy: 0.930159
EarlyStopping counter: 1 out of 10
Epoch: 12, Training Loss: 0.229214, Validation Loss: 0.267153, Training Accuracy: 0.964955, Validation Accuracy: 0.930159
EarlyStopping counter: 2 out of 10
Epoch: 13, Training Loss: 0.229564, Validation Loss: 0.266192, Training Accuracy: 0.963274, Validation Accuracy: 0.930719
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 3 out of 10
Epoch: 14, Training Loss: 0.221450, Validation Loss: 0.267710, Training Accuracy: 0.965204, Validation Accuracy: 0.930906
EarlyStopping counter: 4 out of 10
Epoch: 15, Training Loss: 0.227094, Validation Loss: 0.266212, Training Accuracy: 0.965328, Validation Accuracy: 0.929972
EarlyStopping counter: 5 out of 10
Epoch: 16, Training Loss: 0.226998, Validation Loss: 0.266751, Training Accuracy: 0.964893, Validation Accuracy: 0.930345
EarlyStopping counter: 6 out of 10
Epoch: 17, Training Loss: 0.224516, Validation Loss: 0.266741, Training Accuracy: 0.963834, Validation Accuracy: 0.930159
EarlyStopping counter: 7 out of 10
Epoch: 18, Training Loss: 0.236875, Validation Loss: 0.265846, Training Accuracy: 0.961905, Validation Accuracy: 0.929972
EarlyStopping counter: 8 out of 10
Epoch: 19, Training Loss: 0.221490, Validation Loss: 0.266208, Training Accuracy: 0.964083, Validation Accuracy: 0.929972
EarlyStopping counter: 9 out of 10
Epoch: 20, Training Loss: 0.221614, Validation Loss: 0.267594, Training Accuracy: 0.966200, Validation Accuracy: 0.929972
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 20
Ended Training Cycle
backbone.blocks.1.3._expand_conv
4

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.3._expand_conv (Conv2d(32, 188, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.3._expand_conv (Conv2d(32, 188, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[1] prune_out_channels on backbone.blocks.1.3._expand_conv (Conv2d(32, 188, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.3._bn0 (BatchNorm2d(188, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[2] prune_out_channels on backbone.blocks.1.3._bn0 (BatchNorm2d(188, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_46(HardtanhBackward0), #idxs=4
[3] prune_out_channels on _ElementWiseOp_46(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(188, 188, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=188, bias=False)), #idxs=4
[4] prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(188, 188, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=188, bias=False)) => prune_out_channels on backbone.blocks.1.3._bn1 (BatchNorm2d(188, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[5] prune_out_channels on backbone.blocks.1.3._bn1 (BatchNorm2d(188, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_45(HardtanhBackward0), #idxs=4
[6] prune_out_channels on _ElementWiseOp_45(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.3._project_conv (Conv2d(188, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.3._expand_conv
78
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([188])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.1.3._depthwise_conv
77
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([188])
backbone.blocks.1.3._depthwise_conv
105
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(83, 83, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=83, bias=False)) => prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(83, 83, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=83, bias=False)), #idxs=105
[1] prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(83, 83, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=83, bias=False)) => prune_out_channels on _ElementWiseOp_46(HardtanhBackward0), #idxs=105
[2] prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(83, 83, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=83, bias=False)) => prune_out_channels on backbone.blocks.1.3._bn1 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=105
[3] prune_out_channels on backbone.blocks.1.3._bn1 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_45(HardtanhBackward0), #idxs=105
[4] prune_out_channels on _ElementWiseOp_45(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.3._project_conv (Conv2d(83, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=105
[5] prune_out_channels on _ElementWiseOp_46(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.3._bn0 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=105
[6] prune_out_channels on backbone.blocks.1.3._bn0 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.3._expand_conv (Conv2d(32, 83, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=105
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.1.3._depthwise_conv
77
tensor([False,  True, False,  True,  True,  True,  True, False, False, False,
        False,  True, False,  True, False, False,  True,  True, False,  True,
         True,  True, False,  True, False,  True,  True, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True, False,  True,  True, False, False, False,  True,  True,
        False,  True, False, False,  True,  True, False,  True,  True,  True,
        False,  True,  True, False, False, False,  True, False, False, False,
        False, False,  True, False,  True,  True, False, False,  True,  True,
         True, False, False, False, False,  True,  True, False, False,  True,
        False, False,  True, False,  True,  True, False, False,  True,  True,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False,  True,  True,  True, False, False, False, False, False,
         True, False, False, False,  True,  True,  True, False,  True,  True,
         True,  True, False, False, False,  True, False, False,  True, False,
         True, False, False,  True,  True,  True, False, False, False,  True,
         True, False,  True, False,  True,  True, False,  True,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False,  True,  True,  True,
        False,  True, False, False, False,  True,  True, False])
torch.Size([188])
torch.Size([83])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.3._expand_conv
78
tensor([False,  True, False,  True,  True,  True,  True, False, False, False,
        False,  True, False,  True, False, False,  True,  True, False,  True,
         True,  True, False,  True, False,  True,  True, False, False,  True,
        False, False,  True, False, False, False,  True, False, False, False,
        False,  True, False,  True,  True, False, False, False,  True,  True,
        False,  True, False, False,  True,  True, False,  True,  True,  True,
        False,  True,  True, False, False, False,  True, False, False, False,
        False, False,  True, False,  True,  True, False, False,  True,  True,
         True, False, False, False, False,  True,  True, False, False,  True,
        False, False,  True, False,  True,  True, False, False,  True,  True,
        False, False, False, False, False,  True, False,  True,  True, False,
        False, False,  True,  True,  True, False, False, False, False, False,
         True, False, False, False,  True,  True,  True, False,  True,  True,
         True,  True, False, False, False,  True, False, False,  True, False,
         True, False, False,  True,  True,  True, False, False, False,  True,
         True, False,  True, False,  True,  True, False,  True,  True, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False,  True,  True,  True,
        False,  True, False, False, False,  True,  True, False])
torch.Size([188])
torch.Size([83])
backbone.blocks.1.3._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.3._project_conv (Conv2d(83, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.3._project_conv (Conv2d(83, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.1.3._project_conv
76
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([32])
torch.Size([32])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 192, 19, 19]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 192, 19, 19]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,752          10,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,711,693
Trainable params: 11,711,693
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.227201, Validation Loss: 0.267585, Training Accuracy: 0.964830, Validation Accuracy: 0.929225
Validation loss decreased (inf --> 0.267585).  Saving model ...
Epoch: 2, Training Loss: 0.224942, Validation Loss: 0.270405, Training Accuracy: 0.964519, Validation Accuracy: 0.926424
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.225285, Validation Loss: 0.267992, Training Accuracy: 0.963648, Validation Accuracy: 0.929038
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.224347, Validation Loss: 0.272278, Training Accuracy: 0.964706, Validation Accuracy: 0.929225
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.224380, Validation Loss: 0.266690, Training Accuracy: 0.964083, Validation Accuracy: 0.930159
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
Validation loss decreased (0.267585 --> 0.266690).  Saving model ...
Epoch: 6, Training Loss: 0.223833, Validation Loss: 0.267314, Training Accuracy: 0.965391, Validation Accuracy: 0.929225
EarlyStopping counter: 1 out of 10
Epoch: 7, Training Loss: 0.218501, Validation Loss: 0.268120, Training Accuracy: 0.966573, Validation Accuracy: 0.929412
EarlyStopping counter: 2 out of 10
Epoch: 8, Training Loss: 0.223734, Validation Loss: 0.268916, Training Accuracy: 0.965017, Validation Accuracy: 0.929972
EarlyStopping counter: 3 out of 10
Epoch: 9, Training Loss: 0.221592, Validation Loss: 0.269198, Training Accuracy: 0.966138, Validation Accuracy: 0.929972
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 4 out of 10
Epoch: 10, Training Loss: 0.222399, Validation Loss: 0.266616, Training Accuracy: 0.967071, Validation Accuracy: 0.930906
Validation loss decreased (0.266690 --> 0.266616).  Saving model ...
Epoch: 11, Training Loss: 0.220470, Validation Loss: 0.269466, Training Accuracy: 0.966822, Validation Accuracy: 0.929785
EarlyStopping counter: 1 out of 10
Epoch: 12, Training Loss: 0.226574, Validation Loss: 0.266797, Training Accuracy: 0.964332, Validation Accuracy: 0.928105
EarlyStopping counter: 2 out of 10
Epoch: 13, Training Loss: 0.220034, Validation Loss: 0.268883, Training Accuracy: 0.967756, Validation Accuracy: 0.930159
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 3 out of 10
Epoch: 14, Training Loss: 0.222076, Validation Loss: 0.267684, Training Accuracy: 0.966324, Validation Accuracy: 0.929785
EarlyStopping counter: 4 out of 10
Epoch: 15, Training Loss: 0.216797, Validation Loss: 0.269241, Training Accuracy: 0.967880, Validation Accuracy: 0.929599
EarlyStopping counter: 5 out of 10
Epoch: 16, Training Loss: 0.224597, Validation Loss: 0.268723, Training Accuracy: 0.965764, Validation Accuracy: 0.929785
EarlyStopping counter: 6 out of 10
Epoch: 17, Training Loss: 0.221083, Validation Loss: 0.268782, Training Accuracy: 0.966822, Validation Accuracy: 0.929785
EarlyStopping counter: 7 out of 10
Epoch: 18, Training Loss: 0.221500, Validation Loss: 0.267668, Training Accuracy: 0.967009, Validation Accuracy: 0.930159
EarlyStopping counter: 8 out of 10
Epoch: 19, Training Loss: 0.226432, Validation Loss: 0.269219, Training Accuracy: 0.965577, Validation Accuracy: 0.929038
EarlyStopping counter: 9 out of 10
Epoch: 20, Training Loss: 0.219779, Validation Loss: 0.267584, Training Accuracy: 0.965640, Validation Accuracy: 0.929785
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 20
Ended Training Cycle
backbone.blocks.2.0._expand_conv
7

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.0._expand_conv (Conv2d(32, 185, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.0._expand_conv (Conv2d(32, 185, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[1] prune_out_channels on backbone.blocks.2.0._expand_conv (Conv2d(32, 185, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.0._bn0 (BatchNorm2d(185, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=7
[2] prune_out_channels on backbone.blocks.2.0._bn0 (BatchNorm2d(185, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_33(HardtanhBackward0), #idxs=7
[3] prune_out_channels on _ElementWiseOp_33(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(185, 185, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=185, bias=False)), #idxs=7
[4] prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(185, 185, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=185, bias=False)) => prune_out_channels on backbone.blocks.2.0._bn1 (BatchNorm2d(185, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=7
[5] prune_out_channels on backbone.blocks.2.0._bn1 (BatchNorm2d(185, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_32(HardtanhBackward0), #idxs=7
[6] prune_out_channels on _ElementWiseOp_32(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.0._project_conv (Conv2d(185, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.0._expand_conv
75
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([185])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.2.0._depthwise_conv
74
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([185])
backbone.blocks.2.0._depthwise_conv
3
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(182, 182, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=182, bias=False)) => prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(182, 182, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=182, bias=False)), #idxs=3
[1] prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(182, 182, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=182, bias=False)) => prune_out_channels on _ElementWiseOp_33(HardtanhBackward0), #idxs=3
[2] prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(182, 182, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=182, bias=False)) => prune_out_channels on backbone.blocks.2.0._bn1 (BatchNorm2d(182, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[3] prune_out_channels on backbone.blocks.2.0._bn1 (BatchNorm2d(182, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_32(HardtanhBackward0), #idxs=3
[4] prune_out_channels on _ElementWiseOp_32(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.0._project_conv (Conv2d(182, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[5] prune_out_channels on _ElementWiseOp_33(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.0._bn0 (BatchNorm2d(182, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[6] prune_out_channels on backbone.blocks.2.0._bn0 (BatchNorm2d(182, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.0._expand_conv (Conv2d(32, 182, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.2.0._depthwise_conv
74
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True])
torch.Size([185])
torch.Size([182])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.0._expand_conv
75
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True])
torch.Size([185])
torch.Size([182])
backbone.blocks.2.0._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.0._project_conv (Conv2d(182, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.0._project_conv (Conv2d(182, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.0._project_conv
73
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([56])
torch.Size([56])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,710,523
Trainable params: 11,710,523
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.228277, Validation Loss: 0.281977, Training Accuracy: 0.962527, Validation Accuracy: 0.926237
Validation loss decreased (inf --> 0.281977).  Saving model ...
Epoch: 2, Training Loss: 0.224073, Validation Loss: 0.272598, Training Accuracy: 0.965017, Validation Accuracy: 0.925117
Validation loss decreased (0.281977 --> 0.272598).  Saving model ...
Epoch: 3, Training Loss: 0.230116, Validation Loss: 0.273896, Training Accuracy: 0.965328, Validation Accuracy: 0.929972
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.220763, Validation Loss: 0.273966, Training Accuracy: 0.966698, Validation Accuracy: 0.927358
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.223740, Validation Loss: 0.278555, Training Accuracy: 0.967880, Validation Accuracy: 0.927171
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 3 out of 10
Epoch: 6, Training Loss: 0.221051, Validation Loss: 0.270428, Training Accuracy: 0.967258, Validation Accuracy: 0.929785
Validation loss decreased (0.272598 --> 0.270428).  Saving model ...
Epoch: 7, Training Loss: 0.222506, Validation Loss: 0.268303, Training Accuracy: 0.966885, Validation Accuracy: 0.929412
Validation loss decreased (0.270428 --> 0.268303).  Saving model ...
Epoch: 8, Training Loss: 0.215886, Validation Loss: 0.271286, Training Accuracy: 0.967818, Validation Accuracy: 0.929038
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.222485, Validation Loss: 0.268365, Training Accuracy: 0.967694, Validation Accuracy: 0.929972
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.220282, Validation Loss: 0.269810, Training Accuracy: 0.968005, Validation Accuracy: 0.929038
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 3 out of 10
Epoch: 11, Training Loss: 0.219846, Validation Loss: 0.270050, Training Accuracy: 0.967009, Validation Accuracy: 0.930159
EarlyStopping counter: 4 out of 10
Epoch: 12, Training Loss: 0.219583, Validation Loss: 0.270171, Training Accuracy: 0.967445, Validation Accuracy: 0.929412
EarlyStopping counter: 5 out of 10
Epoch: 13, Training Loss: 0.222863, Validation Loss: 0.270309, Training Accuracy: 0.968814, Validation Accuracy: 0.929038
EarlyStopping counter: 6 out of 10
Epoch: 14, Training Loss: 0.216413, Validation Loss: 0.269980, Training Accuracy: 0.969188, Validation Accuracy: 0.929785
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 7 out of 10
Epoch: 15, Training Loss: 0.220373, Validation Loss: 0.269464, Training Accuracy: 0.966075, Validation Accuracy: 0.928665
EarlyStopping counter: 8 out of 10
Epoch: 16, Training Loss: 0.225128, Validation Loss: 0.270343, Training Accuracy: 0.966013, Validation Accuracy: 0.929972
EarlyStopping counter: 9 out of 10
Epoch: 17, Training Loss: 0.224995, Validation Loss: 0.268470, Training Accuracy: 0.965266, Validation Accuracy: 0.929785
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 17
Ended Training Cycle
backbone.blocks.2.1._expand_conv
13

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.1._expand_conv (Conv2d(56, 323, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.1._expand_conv (Conv2d(56, 323, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[1] prune_out_channels on backbone.blocks.2.1._expand_conv (Conv2d(56, 323, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.1._bn0 (BatchNorm2d(323, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[2] prune_out_channels on backbone.blocks.2.1._bn0 (BatchNorm2d(323, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_48(HardtanhBackward0), #idxs=13
[3] prune_out_channels on _ElementWiseOp_48(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(323, 323, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=323, bias=False)), #idxs=13
[4] prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(323, 323, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=323, bias=False)) => prune_out_channels on backbone.blocks.2.1._bn1 (BatchNorm2d(323, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[5] prune_out_channels on backbone.blocks.2.1._bn1 (BatchNorm2d(323, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_47(HardtanhBackward0), #idxs=13
[6] prune_out_channels on _ElementWiseOp_47(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.1._project_conv (Conv2d(323, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.1._expand_conv
72
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([323])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.2.1._depthwise_conv
71
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([323])
backbone.blocks.2.1._depthwise_conv
149
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(174, 174, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=174, bias=False)) => prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(174, 174, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=174, bias=False)), #idxs=149
[1] prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(174, 174, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=174, bias=False)) => prune_out_channels on _ElementWiseOp_48(HardtanhBackward0), #idxs=149
[2] prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(174, 174, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=174, bias=False)) => prune_out_channels on backbone.blocks.2.1._bn1 (BatchNorm2d(174, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=149
[3] prune_out_channels on backbone.blocks.2.1._bn1 (BatchNorm2d(174, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_47(HardtanhBackward0), #idxs=149
[4] prune_out_channels on _ElementWiseOp_47(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.1._project_conv (Conv2d(174, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=149
[5] prune_out_channels on _ElementWiseOp_48(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.1._bn0 (BatchNorm2d(174, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=149
[6] prune_out_channels on backbone.blocks.2.1._bn0 (BatchNorm2d(174, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.1._expand_conv (Conv2d(56, 174, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=149
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.2.1._depthwise_conv
71
tensor([False, False,  True,  True,  True,  True, False,  True, False, False,
         True,  True,  True,  True, False,  True, False, False,  True, False,
        False, False,  True,  True, False, False,  True, False,  True,  True,
        False, False,  True,  True, False,  True,  True, False,  True, False,
        False, False, False,  True, False, False,  True,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
        False, False,  True,  True,  True, False,  True, False,  True, False,
         True,  True, False,  True, False,  True, False, False,  True, False,
         True,  True, False,  True,  True, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True,  True,  True,  True,  True, False, False, False, False,  True,
         True,  True, False,  True,  True,  True, False,  True,  True, False,
         True,  True, False, False,  True,  True, False,  True,  True, False,
         True,  True,  True,  True, False, False, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False, False,  True,
         True,  True,  True, False,  True, False, False, False, False,  True,
         True, False,  True,  True, False,  True,  True, False, False, False,
        False, False, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True, False, False, False, False,
        False, False,  True,  True, False,  True,  True, False,  True,  True,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False,  True, False,  True,
        False,  True, False, False, False,  True, False,  True, False,  True,
         True,  True,  True, False, False, False,  True,  True, False,  True,
        False, False,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True, False,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True, False, False, False, False,
        False,  True,  True,  True,  True,  True,  True,  True, False, False,
        False, False, False, False, False,  True, False,  True,  True,  True,
         True, False,  True])
torch.Size([323])
torch.Size([174])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.1._expand_conv
72
tensor([False, False,  True,  True,  True,  True, False,  True, False, False,
         True,  True,  True,  True, False,  True, False, False,  True, False,
        False, False,  True,  True, False, False,  True, False,  True,  True,
        False, False,  True,  True, False,  True,  True, False,  True, False,
        False, False, False,  True, False, False,  True,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
        False, False,  True,  True,  True, False,  True, False,  True, False,
         True,  True, False,  True, False,  True, False, False,  True, False,
         True,  True, False,  True,  True, False, False, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
         True,  True,  True,  True,  True, False, False, False, False,  True,
         True,  True, False,  True,  True,  True, False,  True,  True, False,
         True,  True, False, False,  True,  True, False,  True,  True, False,
         True,  True,  True,  True, False, False, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False, False,  True,
         True,  True,  True, False,  True, False, False, False, False,  True,
         True, False,  True,  True, False,  True,  True, False, False, False,
        False, False, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True, False, False, False, False,
        False, False,  True,  True, False,  True,  True, False,  True,  True,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False,  True, False,  True,
        False,  True, False, False, False,  True, False,  True, False,  True,
         True,  True,  True, False, False, False,  True,  True, False,  True,
        False, False,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True, False,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True, False, False, False, False,
        False,  True,  True,  True,  True,  True,  True,  True, False, False,
        False, False, False, False, False,  True, False,  True,  True,  True,
         True, False,  True])
torch.Size([323])
torch.Size([174])
backbone.blocks.2.1._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.1._project_conv (Conv2d(174, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.1._project_conv (Conv2d(174, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.1._project_conv
70
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([56])
torch.Size([56])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,687,681
Trainable params: 11,687,681
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.227114, Validation Loss: 0.272692, Training Accuracy: 0.965764, Validation Accuracy: 0.928105
Validation loss decreased (inf --> 0.272692).  Saving model ...
Epoch: 2, Training Loss: 0.221769, Validation Loss: 0.272303, Training Accuracy: 0.966324, Validation Accuracy: 0.927918
Validation loss decreased (0.272692 --> 0.272303).  Saving model ...
Epoch: 3, Training Loss: 0.223995, Validation Loss: 0.276677, Training Accuracy: 0.966449, Validation Accuracy: 0.927731
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.227426, Validation Loss: 0.277225, Training Accuracy: 0.965391, Validation Accuracy: 0.926050
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.220417, Validation Loss: 0.270707, Training Accuracy: 0.967071, Validation Accuracy: 0.927171
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
Validation loss decreased (0.272303 --> 0.270707).  Saving model ...
Epoch: 6, Training Loss: 0.219545, Validation Loss: 0.273037, Training Accuracy: 0.967009, Validation Accuracy: 0.928665
EarlyStopping counter: 1 out of 10
Epoch: 7, Training Loss: 0.221839, Validation Loss: 0.270674, Training Accuracy: 0.969063, Validation Accuracy: 0.928105
Validation loss decreased (0.270707 --> 0.270674).  Saving model ...
Epoch: 8, Training Loss: 0.217395, Validation Loss: 0.272058, Training Accuracy: 0.967756, Validation Accuracy: 0.928105
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.223480, Validation Loss: 0.270628, Training Accuracy: 0.967071, Validation Accuracy: 0.928105
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.270674 --> 0.270628).  Saving model ...
Epoch: 10, Training Loss: 0.219887, Validation Loss: 0.270262, Training Accuracy: 0.967009, Validation Accuracy: 0.929599
Validation loss decreased (0.270628 --> 0.270262).  Saving model ...
Epoch: 11, Training Loss: 0.220667, Validation Loss: 0.270668, Training Accuracy: 0.969686, Validation Accuracy: 0.929599
EarlyStopping counter: 1 out of 10
Epoch: 12, Training Loss: 0.214529, Validation Loss: 0.271145, Training Accuracy: 0.968627, Validation Accuracy: 0.929412
EarlyStopping counter: 2 out of 10
Epoch: 13, Training Loss: 0.214973, Validation Loss: 0.271358, Training Accuracy: 0.969001, Validation Accuracy: 0.929412
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 3 out of 10
Epoch: 14, Training Loss: 0.218207, Validation Loss: 0.271643, Training Accuracy: 0.969001, Validation Accuracy: 0.929599
EarlyStopping counter: 4 out of 10
Epoch: 15, Training Loss: 0.221342, Validation Loss: 0.269593, Training Accuracy: 0.968752, Validation Accuracy: 0.929225
Validation loss decreased (0.270262 --> 0.269593).  Saving model ...
Epoch: 16, Training Loss: 0.221942, Validation Loss: 0.269698, Training Accuracy: 0.968752, Validation Accuracy: 0.929038
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.221441, Validation Loss: 0.271018, Training Accuracy: 0.966822, Validation Accuracy: 0.928478
EarlyStopping counter: 2 out of 10
Epoch: 18, Training Loss: 0.217947, Validation Loss: 0.270641, Training Accuracy: 0.967694, Validation Accuracy: 0.929785
EarlyStopping counter: 3 out of 10
Epoch: 19, Training Loss: 0.218826, Validation Loss: 0.271627, Training Accuracy: 0.969561, Validation Accuracy: 0.928478
EarlyStopping counter: 4 out of 10
Epoch: 20, Training Loss: 0.222472, Validation Loss: 0.270370, Training Accuracy: 0.966324, Validation Accuracy: 0.929412
EarlyStopping counter: 5 out of 10
Epoch: 21, Training Loss: 0.221024, Validation Loss: 0.272396, Training Accuracy: 0.969748, Validation Accuracy: 0.928478
EarlyStopping counter: 6 out of 10
Epoch: 22, Training Loss: 0.217907, Validation Loss: 0.270120, Training Accuracy: 0.967134, Validation Accuracy: 0.929785
EarlyStopping counter: 7 out of 10
Epoch: 23, Training Loss: 0.218075, Validation Loss: 0.269917, Training Accuracy: 0.967383, Validation Accuracy: 0.928852
EarlyStopping counter: 8 out of 10
Epoch: 24, Training Loss: 0.214841, Validation Loss: 0.271569, Training Accuracy: 0.970121, Validation Accuracy: 0.929038
EarlyStopping counter: 9 out of 10
Epoch: 25, Training Loss: 0.217214, Validation Loss: 0.270449, Training Accuracy: 0.969125, Validation Accuracy: 0.929412
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 25
Ended Training Cycle
backbone.blocks.2.2._expand_conv
18

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.2._expand_conv (Conv2d(56, 318, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.2._expand_conv (Conv2d(56, 318, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[1] prune_out_channels on backbone.blocks.2.2._expand_conv (Conv2d(56, 318, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.2._bn0 (BatchNorm2d(318, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[2] prune_out_channels on backbone.blocks.2.2._bn0 (BatchNorm2d(318, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_50(HardtanhBackward0), #idxs=18
[3] prune_out_channels on _ElementWiseOp_50(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(318, 318, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=318, bias=False)), #idxs=18
[4] prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(318, 318, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=318, bias=False)) => prune_out_channels on backbone.blocks.2.2._bn1 (BatchNorm2d(318, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[5] prune_out_channels on backbone.blocks.2.2._bn1 (BatchNorm2d(318, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_49(HardtanhBackward0), #idxs=18
[6] prune_out_channels on _ElementWiseOp_49(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.2._project_conv (Conv2d(318, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.2._expand_conv
69
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([318])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.2.2._depthwise_conv
68
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([318])
backbone.blocks.2.2._depthwise_conv
203
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(115, 115, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=115, bias=False)) => prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(115, 115, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=115, bias=False)), #idxs=203
[1] prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(115, 115, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=115, bias=False)) => prune_out_channels on _ElementWiseOp_50(HardtanhBackward0), #idxs=203
[2] prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(115, 115, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=115, bias=False)) => prune_out_channels on backbone.blocks.2.2._bn1 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=203
[3] prune_out_channels on backbone.blocks.2.2._bn1 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_49(HardtanhBackward0), #idxs=203
[4] prune_out_channels on _ElementWiseOp_49(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.2._project_conv (Conv2d(115, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=203
[5] prune_out_channels on _ElementWiseOp_50(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.2._bn0 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=203
[6] prune_out_channels on backbone.blocks.2.2._bn0 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.2._expand_conv (Conv2d(56, 115, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=203
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.2.2._depthwise_conv
68
tensor([ True, False,  True, False, False,  True,  True,  True,  True, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False,  True,  True,  True, False,  True,  True, False, False, False,
        False,  True, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True,  True,  True,  True,
        False,  True, False, False,  True, False,  True, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True,  True, False,  True, False,  True,
        False, False, False,  True, False,  True,  True, False,  True,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False,  True, False, False, False, False,  True, False,  True,
         True, False,  True, False,  True, False,  True, False,  True,  True,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False,  True,  True,  True,  True, False, False,  True, False,
        False, False, False, False,  True,  True, False, False,  True,  True,
        False, False,  True, False,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True,  True, False,  True, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False,  True, False, False,  True,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False,  True,  True,  True,  True, False,
         True, False,  True,  True, False,  True,  True, False, False,  True,
         True, False, False,  True, False,  True,  True, False, False, False,
         True, False,  True, False,  True,  True,  True, False])
torch.Size([318])
torch.Size([115])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.2._expand_conv
69
tensor([ True, False,  True, False, False,  True,  True,  True,  True, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False,  True,  True,  True, False,  True,  True, False, False, False,
        False,  True, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True,  True,  True,  True,
        False,  True, False, False,  True, False,  True, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
         True, False, False, False,  True,  True, False,  True, False,  True,
        False, False, False,  True, False,  True,  True, False,  True,  True,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False,  True, False, False, False, False,  True, False,  True,
         True, False,  True, False,  True, False,  True, False,  True,  True,
        False, False,  True,  True, False, False, False, False, False, False,
         True, False,  True,  True,  True,  True, False, False,  True, False,
        False, False, False, False,  True,  True, False, False,  True,  True,
        False, False,  True, False,  True,  True,  True,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False, False,
         True,  True, False,  True, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False,  True, False,
        False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False,  True, False, False,
         True, False, False, False, False,  True, False, False,  True,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False, False,  True,  True,  True,  True, False,
         True, False,  True,  True, False,  True,  True, False, False,  True,
         True, False, False,  True, False,  True,  True, False, False, False,
         True, False,  True, False,  True,  True,  True, False])
torch.Size([318])
torch.Size([115])
backbone.blocks.2.2._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.2._project_conv (Conv2d(115, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.2._project_conv (Conv2d(115, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.2._project_conv
67
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([56])
torch.Size([56])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,656,520
Trainable params: 11,656,520
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.219787, Validation Loss: 0.282568, Training Accuracy: 0.967071, Validation Accuracy: 0.925864
Validation loss decreased (inf --> 0.282568).  Saving model ...
Epoch: 2, Training Loss: 0.227596, Validation Loss: 0.284765, Training Accuracy: 0.964208, Validation Accuracy: 0.926424
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.219399, Validation Loss: 0.279657, Training Accuracy: 0.967507, Validation Accuracy: 0.925677
Validation loss decreased (0.282568 --> 0.279657).  Saving model ...
Epoch: 4, Training Loss: 0.223166, Validation Loss: 0.282007, Training Accuracy: 0.967445, Validation Accuracy: 0.928665
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.221954, Validation Loss: 0.270088, Training Accuracy: 0.966449, Validation Accuracy: 0.928665
Validation loss decreased (0.279657 --> 0.270088).  Saving model ...
Epoch: 6, Training Loss: 0.217676, Validation Loss: 0.281230, Training Accuracy: 0.968254, Validation Accuracy: 0.926797
EarlyStopping counter: 1 out of 10
Epoch: 7, Training Loss: 0.219748, Validation Loss: 0.281420, Training Accuracy: 0.969063, Validation Accuracy: 0.926424
EarlyStopping counter: 2 out of 10
Epoch: 8, Training Loss: 0.222315, Validation Loss: 0.272226, Training Accuracy: 0.967943, Validation Accuracy: 0.927731
EarlyStopping counter: 3 out of 10
Epoch: 9, Training Loss: 0.217796, Validation Loss: 0.282301, Training Accuracy: 0.969686, Validation Accuracy: 0.923810
Epoch 00009: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 10, Training Loss: 0.218680, Validation Loss: 0.275769, Training Accuracy: 0.969686, Validation Accuracy: 0.926611
EarlyStopping counter: 5 out of 10
Epoch: 11, Training Loss: 0.220482, Validation Loss: 0.274102, Training Accuracy: 0.970495, Validation Accuracy: 0.926984
EarlyStopping counter: 6 out of 10
Epoch: 12, Training Loss: 0.217198, Validation Loss: 0.274428, Training Accuracy: 0.970868, Validation Accuracy: 0.927171
EarlyStopping counter: 7 out of 10
Epoch: 13, Training Loss: 0.218543, Validation Loss: 0.273913, Training Accuracy: 0.971304, Validation Accuracy: 0.928105
Epoch 00013: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 8 out of 10
Epoch: 14, Training Loss: 0.211765, Validation Loss: 0.274347, Training Accuracy: 0.971429, Validation Accuracy: 0.927544
EarlyStopping counter: 9 out of 10
Epoch: 15, Training Loss: 0.217160, Validation Loss: 0.273985, Training Accuracy: 0.971802, Validation Accuracy: 0.927731
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 15
Ended Training Cycle
backbone.blocks.2.3._expand_conv
15

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.3._expand_conv (Conv2d(56, 321, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.3._expand_conv (Conv2d(56, 321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[1] prune_out_channels on backbone.blocks.2.3._expand_conv (Conv2d(56, 321, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.3._bn0 (BatchNorm2d(321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[2] prune_out_channels on backbone.blocks.2.3._bn0 (BatchNorm2d(321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_52(HardtanhBackward0), #idxs=15
[3] prune_out_channels on _ElementWiseOp_52(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(321, 321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=321, bias=False)), #idxs=15
[4] prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(321, 321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=321, bias=False)) => prune_out_channels on backbone.blocks.2.3._bn1 (BatchNorm2d(321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[5] prune_out_channels on backbone.blocks.2.3._bn1 (BatchNorm2d(321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_51(HardtanhBackward0), #idxs=15
[6] prune_out_channels on _ElementWiseOp_51(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.3._project_conv (Conv2d(321, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.3._expand_conv
66
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([321])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.2.3._depthwise_conv
65
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([321])
backbone.blocks.2.3._depthwise_conv
229
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(92, 92, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=92, bias=False)) => prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(92, 92, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=92, bias=False)), #idxs=229
[1] prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(92, 92, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=92, bias=False)) => prune_out_channels on _ElementWiseOp_52(HardtanhBackward0), #idxs=229
[2] prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(92, 92, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=92, bias=False)) => prune_out_channels on backbone.blocks.2.3._bn1 (BatchNorm2d(92, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=229
[3] prune_out_channels on backbone.blocks.2.3._bn1 (BatchNorm2d(92, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_51(HardtanhBackward0), #idxs=229
[4] prune_out_channels on _ElementWiseOp_51(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.3._project_conv (Conv2d(92, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=229
[5] prune_out_channels on _ElementWiseOp_52(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.3._bn0 (BatchNorm2d(92, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=229
[6] prune_out_channels on backbone.blocks.2.3._bn0 (BatchNorm2d(92, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.3._expand_conv (Conv2d(56, 92, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=229
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.2.3._depthwise_conv
65
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
         True,  True, False,  True,  True, False, False,  True,  True, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False,  True, False,  True,
        False, False,  True,  True, False,  True, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
         True,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False,  True,  True,  True, False, False,
         True,  True, False,  True,  True, False, False, False, False,  True,
         True, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True,  True, False, False,
        False,  True,  True, False, False, False,  True, False, False, False,
         True,  True, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False,  True,  True, False,  True,  True,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False])
torch.Size([321])
torch.Size([92])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.3._expand_conv
66
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
         True,  True, False,  True,  True, False, False,  True,  True, False,
         True, False,  True, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False,  True, False,  True,
        False, False,  True,  True, False,  True, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
         True,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False,  True,  True,  True, False, False,
         True,  True, False,  True,  True, False, False, False, False,  True,
         True, False,  True, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False,  True, False, False,
         True, False,  True, False, False, False, False,  True, False, False,
        False,  True,  True, False,  True, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True,  True, False, False,
        False,  True,  True, False, False, False,  True, False, False, False,
         True,  True, False,  True, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False,  True, False, False, False,  True, False,
        False, False,  True,  True, False,  True,  True,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False])
torch.Size([321])
torch.Size([92])
backbone.blocks.2.3._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.3._project_conv (Conv2d(92, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.3._project_conv (Conv2d(92, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.2.3._project_conv
64
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([56])
torch.Size([56])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,622,116
Trainable params: 11,622,116
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.218871, Validation Loss: 0.281264, Training Accuracy: 0.968192, Validation Accuracy: 0.925677
Validation loss decreased (inf --> 0.281264).  Saving model ...
Epoch: 2, Training Loss: 0.215427, Validation Loss: 0.270949, Training Accuracy: 0.969810, Validation Accuracy: 0.927544
Validation loss decreased (0.281264 --> 0.270949).  Saving model ...
Epoch: 3, Training Loss: 0.224997, Validation Loss: 0.281413, Training Accuracy: 0.966511, Validation Accuracy: 0.923436
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.226544, Validation Loss: 0.277310, Training Accuracy: 0.968316, Validation Accuracy: 0.925117
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.216496, Validation Loss: 0.282602, Training Accuracy: 0.969374, Validation Accuracy: 0.926237
EarlyStopping counter: 3 out of 10
Epoch: 6, Training Loss: 0.217703, Validation Loss: 0.281410, Training Accuracy: 0.970682, Validation Accuracy: 0.926424
Epoch 00006: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 7, Training Loss: 0.216509, Validation Loss: 0.275116, Training Accuracy: 0.971927, Validation Accuracy: 0.926237
EarlyStopping counter: 5 out of 10
Epoch: 8, Training Loss: 0.209345, Validation Loss: 0.274040, Training Accuracy: 0.972736, Validation Accuracy: 0.927171
EarlyStopping counter: 6 out of 10
Epoch: 9, Training Loss: 0.214714, Validation Loss: 0.275913, Training Accuracy: 0.971429, Validation Accuracy: 0.926611
EarlyStopping counter: 7 out of 10
Epoch: 10, Training Loss: 0.219908, Validation Loss: 0.274248, Training Accuracy: 0.970059, Validation Accuracy: 0.927731
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 8 out of 10
Epoch: 11, Training Loss: 0.211202, Validation Loss: 0.275806, Training Accuracy: 0.971927, Validation Accuracy: 0.927731
EarlyStopping counter: 9 out of 10
Epoch: 12, Training Loss: 0.213014, Validation Loss: 0.274261, Training Accuracy: 0.970619, Validation Accuracy: 0.926797
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 12
Ended Training Cycle
backbone.blocks.3.0._expand_conv
9

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.0._expand_conv (Conv2d(56, 327, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.0._expand_conv (Conv2d(56, 327, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[1] prune_out_channels on backbone.blocks.3.0._expand_conv (Conv2d(56, 327, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.0._bn0 (BatchNorm2d(327, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[2] prune_out_channels on backbone.blocks.3.0._bn0 (BatchNorm2d(327, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_28(HardtanhBackward0), #idxs=9
[3] prune_out_channels on _ElementWiseOp_28(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(327, 327, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=327, bias=False)), #idxs=9
[4] prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(327, 327, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=327, bias=False)) => prune_out_channels on backbone.blocks.3.0._bn1 (BatchNorm2d(327, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[5] prune_out_channels on backbone.blocks.3.0._bn1 (BatchNorm2d(327, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_27(HardtanhBackward0), #idxs=9
[6] prune_out_channels on _ElementWiseOp_27(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.0._project_conv (Conv2d(327, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.0._expand_conv
63
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([327])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.0._depthwise_conv
62
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([327])
backbone.blocks.3.0._depthwise_conv
18
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(309, 309, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=309, bias=False)) => prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(309, 309, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=309, bias=False)), #idxs=18
[1] prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(309, 309, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=309, bias=False)) => prune_out_channels on _ElementWiseOp_28(HardtanhBackward0), #idxs=18
[2] prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(309, 309, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=309, bias=False)) => prune_out_channels on backbone.blocks.3.0._bn1 (BatchNorm2d(309, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[3] prune_out_channels on backbone.blocks.3.0._bn1 (BatchNorm2d(309, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_27(HardtanhBackward0), #idxs=18
[4] prune_out_channels on _ElementWiseOp_27(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.0._project_conv (Conv2d(309, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[5] prune_out_channels on _ElementWiseOp_28(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.0._bn0 (BatchNorm2d(309, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[6] prune_out_channels on backbone.blocks.3.0._bn0 (BatchNorm2d(309, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.0._expand_conv (Conv2d(56, 309, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.0._depthwise_conv
62
tensor([ True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True])
torch.Size([327])
torch.Size([309])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.0._expand_conv
63
tensor([ True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True])
torch.Size([327])
torch.Size([309])
backbone.blocks.3.0._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.0._project_conv (Conv2d(309, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.0._project_conv (Conv2d(309, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.0._project_conv
61
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([112])
torch.Size([112])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,617,229
Trainable params: 11,617,229
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.221514, Validation Loss: 0.278703, Training Accuracy: 0.967694, Validation Accuracy: 0.923249
Validation loss decreased (inf --> 0.278703).  Saving model ...
Epoch: 2, Training Loss: 0.219244, Validation Loss: 0.279620, Training Accuracy: 0.968254, Validation Accuracy: 0.925490
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.225099, Validation Loss: 0.279498, Training Accuracy: 0.968316, Validation Accuracy: 0.927171
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.218485, Validation Loss: 0.277654, Training Accuracy: 0.967569, Validation Accuracy: 0.927731
Validation loss decreased (0.278703 --> 0.277654).  Saving model ...
Epoch: 5, Training Loss: 0.216780, Validation Loss: 0.282074, Training Accuracy: 0.968814, Validation Accuracy: 0.926050
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 1 out of 10
Epoch: 6, Training Loss: 0.214906, Validation Loss: 0.278250, Training Accuracy: 0.968876, Validation Accuracy: 0.926984
EarlyStopping counter: 2 out of 10
Epoch: 7, Training Loss: 0.211775, Validation Loss: 0.275981, Training Accuracy: 0.973918, Validation Accuracy: 0.929412
Validation loss decreased (0.277654 --> 0.275981).  Saving model ...
Epoch: 8, Training Loss: 0.210971, Validation Loss: 0.278145, Training Accuracy: 0.972300, Validation Accuracy: 0.928105
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.213164, Validation Loss: 0.275475, Training Accuracy: 0.971740, Validation Accuracy: 0.928105
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.275981 --> 0.275475).  Saving model ...
Epoch: 10, Training Loss: 0.215387, Validation Loss: 0.277037, Training Accuracy: 0.969437, Validation Accuracy: 0.928665
EarlyStopping counter: 1 out of 10
Epoch: 11, Training Loss: 0.213108, Validation Loss: 0.276740, Training Accuracy: 0.970495, Validation Accuracy: 0.928852
EarlyStopping counter: 2 out of 10
Epoch: 12, Training Loss: 0.216446, Validation Loss: 0.276833, Training Accuracy: 0.972113, Validation Accuracy: 0.927918
EarlyStopping counter: 3 out of 10
Epoch: 13, Training Loss: 0.217643, Validation Loss: 0.276528, Training Accuracy: 0.972923, Validation Accuracy: 0.928291
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 4 out of 10
Epoch: 14, Training Loss: 0.213029, Validation Loss: 0.277352, Training Accuracy: 0.971989, Validation Accuracy: 0.928105
EarlyStopping counter: 5 out of 10
Epoch: 15, Training Loss: 0.210630, Validation Loss: 0.277526, Training Accuracy: 0.973109, Validation Accuracy: 0.928105
EarlyStopping counter: 6 out of 10
Epoch: 16, Training Loss: 0.213142, Validation Loss: 0.275196, Training Accuracy: 0.972985, Validation Accuracy: 0.928665
Validation loss decreased (0.275475 --> 0.275196).  Saving model ...
Epoch: 17, Training Loss: 0.209561, Validation Loss: 0.276381, Training Accuracy: 0.971864, Validation Accuracy: 0.928105
EarlyStopping counter: 1 out of 10
Epoch: 18, Training Loss: 0.215141, Validation Loss: 0.276133, Training Accuracy: 0.971927, Validation Accuracy: 0.928852
EarlyStopping counter: 2 out of 10
Epoch: 19, Training Loss: 0.209959, Validation Loss: 0.275390, Training Accuracy: 0.974541, Validation Accuracy: 0.927918
EarlyStopping counter: 3 out of 10
Epoch: 20, Training Loss: 0.212520, Validation Loss: 0.276359, Training Accuracy: 0.974230, Validation Accuracy: 0.928291
EarlyStopping counter: 4 out of 10
Epoch: 21, Training Loss: 0.211210, Validation Loss: 0.275411, Training Accuracy: 0.973545, Validation Accuracy: 0.928665
EarlyStopping counter: 5 out of 10
Epoch: 22, Training Loss: 0.215071, Validation Loss: 0.274815, Training Accuracy: 0.971864, Validation Accuracy: 0.927731
Validation loss decreased (0.275196 --> 0.274815).  Saving model ...
Epoch: 23, Training Loss: 0.219849, Validation Loss: 0.275864, Training Accuracy: 0.971117, Validation Accuracy: 0.928478
EarlyStopping counter: 1 out of 10
Epoch: 24, Training Loss: 0.216636, Validation Loss: 0.277234, Training Accuracy: 0.969997, Validation Accuracy: 0.928665
EarlyStopping counter: 2 out of 10
Epoch: 25, Training Loss: 0.223608, Validation Loss: 0.277018, Training Accuracy: 0.968565, Validation Accuracy: 0.926984
EarlyStopping counter: 3 out of 10
Epoch: 26, Training Loss: 0.214369, Validation Loss: 0.277878, Training Accuracy: 0.971740, Validation Accuracy: 0.927918
EarlyStopping counter: 4 out of 10
Epoch: 27, Training Loss: 0.216702, Validation Loss: 0.274983, Training Accuracy: 0.971802, Validation Accuracy: 0.928852
EarlyStopping counter: 5 out of 10
Epoch: 28, Training Loss: 0.214428, Validation Loss: 0.276283, Training Accuracy: 0.971180, Validation Accuracy: 0.927918
EarlyStopping counter: 6 out of 10
Epoch: 29, Training Loss: 0.219807, Validation Loss: 0.274918, Training Accuracy: 0.970433, Validation Accuracy: 0.928291
EarlyStopping counter: 7 out of 10
Epoch: 30, Training Loss: 0.216441, Validation Loss: 0.276520, Training Accuracy: 0.970744, Validation Accuracy: 0.927918
EarlyStopping counter: 8 out of 10
Epoch: 31, Training Loss: 0.210398, Validation Loss: 0.275363, Training Accuracy: 0.971553, Validation Accuracy: 0.928291
EarlyStopping counter: 9 out of 10
Epoch: 32, Training Loss: 0.210515, Validation Loss: 0.276197, Training Accuracy: 0.972487, Validation Accuracy: 0.927918
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 32
Ended Training Cycle
backbone.blocks.3.1._expand_conv
24

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.1._expand_conv (Conv2d(112, 648, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.1._expand_conv (Conv2d(112, 648, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=24
[1] prune_out_channels on backbone.blocks.3.1._expand_conv (Conv2d(112, 648, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.1._bn0 (BatchNorm2d(648, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=24
[2] prune_out_channels on backbone.blocks.3.1._bn0 (BatchNorm2d(648, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_54(HardtanhBackward0), #idxs=24
[3] prune_out_channels on _ElementWiseOp_54(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(648, 648, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=648, bias=False)), #idxs=24
[4] prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(648, 648, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=648, bias=False)) => prune_out_channels on backbone.blocks.3.1._bn1 (BatchNorm2d(648, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=24
[5] prune_out_channels on backbone.blocks.3.1._bn1 (BatchNorm2d(648, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_53(HardtanhBackward0), #idxs=24
[6] prune_out_channels on _ElementWiseOp_53(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.1._project_conv (Conv2d(648, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=24
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.1._expand_conv
60
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True])
torch.Size([672])
torch.Size([648])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.1._depthwise_conv
59
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True])
torch.Size([672])
torch.Size([648])
backbone.blocks.3.1._depthwise_conv
592
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, bias=False)) => prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, bias=False)), #idxs=592
[1] prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, bias=False)) => prune_out_channels on _ElementWiseOp_54(HardtanhBackward0), #idxs=592
[2] prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56, bias=False)) => prune_out_channels on backbone.blocks.3.1._bn1 (BatchNorm2d(56, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=592
[3] prune_out_channels on backbone.blocks.3.1._bn1 (BatchNorm2d(56, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_53(HardtanhBackward0), #idxs=592
[4] prune_out_channels on _ElementWiseOp_53(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.1._project_conv (Conv2d(56, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=592
[5] prune_out_channels on _ElementWiseOp_54(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.1._bn0 (BatchNorm2d(56, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=592
[6] prune_out_channels on backbone.blocks.3.1._bn0 (BatchNorm2d(56, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.1._expand_conv (Conv2d(112, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=592
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.1._depthwise_conv
59
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False,  True,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False])
torch.Size([648])
torch.Size([56])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.1._expand_conv
60
tensor([False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False,  True,  True, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False])
torch.Size([648])
torch.Size([56])
backbone.blocks.3.1._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.1._project_conv (Conv2d(56, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.1._project_conv (Conv2d(56, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.1._project_conv
58
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([112])
torch.Size([112])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,471,237
Trainable params: 11,471,237
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.216743, Validation Loss: 0.278402, Training Accuracy: 0.970993, Validation Accuracy: 0.926050
Validation loss decreased (inf --> 0.278402).  Saving model ...
Epoch: 2, Training Loss: 0.215673, Validation Loss: 0.273563, Training Accuracy: 0.969561, Validation Accuracy: 0.927731
Validation loss decreased (0.278402 --> 0.273563).  Saving model ...
Epoch: 3, Training Loss: 0.225770, Validation Loss: 0.279693, Training Accuracy: 0.968254, Validation Accuracy: 0.927171
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.216313, Validation Loss: 0.283628, Training Accuracy: 0.969935, Validation Accuracy: 0.923810
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.212930, Validation Loss: 0.281504, Training Accuracy: 0.972798, Validation Accuracy: 0.927544
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 3 out of 10
Epoch: 6, Training Loss: 0.217255, Validation Loss: 0.276787, Training Accuracy: 0.972113, Validation Accuracy: 0.927171
EarlyStopping counter: 4 out of 10
Epoch: 7, Training Loss: 0.210727, Validation Loss: 0.276611, Training Accuracy: 0.974292, Validation Accuracy: 0.929599
EarlyStopping counter: 5 out of 10
Epoch: 8, Training Loss: 0.210150, Validation Loss: 0.276281, Training Accuracy: 0.973981, Validation Accuracy: 0.928852
EarlyStopping counter: 6 out of 10
Epoch: 9, Training Loss: 0.210786, Validation Loss: 0.276022, Training Accuracy: 0.971989, Validation Accuracy: 0.928852
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 7 out of 10
Epoch: 10, Training Loss: 0.211773, Validation Loss: 0.276160, Training Accuracy: 0.971740, Validation Accuracy: 0.929225
EarlyStopping counter: 8 out of 10
Epoch: 11, Training Loss: 0.216407, Validation Loss: 0.274964, Training Accuracy: 0.971615, Validation Accuracy: 0.928291
EarlyStopping counter: 9 out of 10
Epoch: 12, Training Loss: 0.214762, Validation Loss: 0.275448, Training Accuracy: 0.972362, Validation Accuracy: 0.930159
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 12
Ended Training Cycle
backbone.blocks.3.2._expand_conv
27

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.2._expand_conv (Conv2d(112, 645, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.2._expand_conv (Conv2d(112, 645, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=27
[1] prune_out_channels on backbone.blocks.3.2._expand_conv (Conv2d(112, 645, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.2._bn0 (BatchNorm2d(645, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=27
[2] prune_out_channels on backbone.blocks.3.2._bn0 (BatchNorm2d(645, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_56(HardtanhBackward0), #idxs=27
[3] prune_out_channels on _ElementWiseOp_56(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(645, 645, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=645, bias=False)), #idxs=27
[4] prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(645, 645, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=645, bias=False)) => prune_out_channels on backbone.blocks.3.2._bn1 (BatchNorm2d(645, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=27
[5] prune_out_channels on backbone.blocks.3.2._bn1 (BatchNorm2d(645, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_55(HardtanhBackward0), #idxs=27
[6] prune_out_channels on _ElementWiseOp_55(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.2._project_conv (Conv2d(645, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=27
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.2._expand_conv
57
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([645])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.2._depthwise_conv
56
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([645])
backbone.blocks.3.2._depthwise_conv
611
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(34, 34, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=34, bias=False)) => prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(34, 34, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=34, bias=False)), #idxs=611
[1] prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(34, 34, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=34, bias=False)) => prune_out_channels on _ElementWiseOp_56(HardtanhBackward0), #idxs=611
[2] prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(34, 34, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=34, bias=False)) => prune_out_channels on backbone.blocks.3.2._bn1 (BatchNorm2d(34, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=611
[3] prune_out_channels on backbone.blocks.3.2._bn1 (BatchNorm2d(34, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_55(HardtanhBackward0), #idxs=611
[4] prune_out_channels on _ElementWiseOp_55(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.2._project_conv (Conv2d(34, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=611
[5] prune_out_channels on _ElementWiseOp_56(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.2._bn0 (BatchNorm2d(34, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=611
[6] prune_out_channels on backbone.blocks.3.2._bn0 (BatchNorm2d(34, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.2._expand_conv (Conv2d(112, 34, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=611
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.2._depthwise_conv
56
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False])
torch.Size([645])
torch.Size([34])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.2._expand_conv
57
tensor([False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False])
torch.Size([645])
torch.Size([34])
backbone.blocks.3.2._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.2._project_conv (Conv2d(34, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.2._project_conv (Conv2d(34, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.2._project_conv
55
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([112])
torch.Size([112])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,320,031
Trainable params: 11,320,031
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.216571, Validation Loss: 0.277056, Training Accuracy: 0.968503, Validation Accuracy: 0.924743
Validation loss decreased (inf --> 0.277056).  Saving model ...
Epoch: 2, Training Loss: 0.217891, Validation Loss: 0.280710, Training Accuracy: 0.969623, Validation Accuracy: 0.926424
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.214659, Validation Loss: 0.290100, Training Accuracy: 0.972736, Validation Accuracy: 0.921755
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.219114, Validation Loss: 0.280453, Training Accuracy: 0.970682, Validation Accuracy: 0.927171
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.214014, Validation Loss: 0.279320, Training Accuracy: 0.971553, Validation Accuracy: 0.925864
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.217405, Validation Loss: 0.275494, Training Accuracy: 0.970370, Validation Accuracy: 0.926237
Validation loss decreased (0.277056 --> 0.275494).  Saving model ...
Epoch: 7, Training Loss: 0.214686, Validation Loss: 0.277468, Training Accuracy: 0.974043, Validation Accuracy: 0.927544
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.211397, Validation Loss: 0.276351, Training Accuracy: 0.973483, Validation Accuracy: 0.927544
EarlyStopping counter: 2 out of 10
Epoch: 9, Training Loss: 0.214575, Validation Loss: 0.276019, Training Accuracy: 0.972238, Validation Accuracy: 0.929038
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 3 out of 10
Epoch: 10, Training Loss: 0.208038, Validation Loss: 0.276265, Training Accuracy: 0.974416, Validation Accuracy: 0.928478
EarlyStopping counter: 4 out of 10
Epoch: 11, Training Loss: 0.212020, Validation Loss: 0.277204, Training Accuracy: 0.972860, Validation Accuracy: 0.928105
EarlyStopping counter: 5 out of 10
Epoch: 12, Training Loss: 0.207187, Validation Loss: 0.277309, Training Accuracy: 0.975412, Validation Accuracy: 0.928291
EarlyStopping counter: 6 out of 10
Epoch: 13, Training Loss: 0.212027, Validation Loss: 0.276105, Training Accuracy: 0.975786, Validation Accuracy: 0.927358
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 7 out of 10
Epoch: 14, Training Loss: 0.208698, Validation Loss: 0.276521, Training Accuracy: 0.973607, Validation Accuracy: 0.929225
EarlyStopping counter: 8 out of 10
Epoch: 15, Training Loss: 0.211038, Validation Loss: 0.277980, Training Accuracy: 0.974479, Validation Accuracy: 0.927358
EarlyStopping counter: 9 out of 10
Epoch: 16, Training Loss: 0.212139, Validation Loss: 0.277167, Training Accuracy: 0.974167, Validation Accuracy: 0.926611
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 16
Ended Training Cycle
backbone.blocks.3.3._expand_conv
19

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.3._expand_conv (Conv2d(112, 653, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.3._expand_conv (Conv2d(112, 653, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=19
[1] prune_out_channels on backbone.blocks.3.3._expand_conv (Conv2d(112, 653, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.3._bn0 (BatchNorm2d(653, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=19
[2] prune_out_channels on backbone.blocks.3.3._bn0 (BatchNorm2d(653, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_58(HardtanhBackward0), #idxs=19
[3] prune_out_channels on _ElementWiseOp_58(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(653, 653, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=653, bias=False)), #idxs=19
[4] prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(653, 653, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=653, bias=False)) => prune_out_channels on backbone.blocks.3.3._bn1 (BatchNorm2d(653, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=19
[5] prune_out_channels on backbone.blocks.3.3._bn1 (BatchNorm2d(653, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_57(HardtanhBackward0), #idxs=19
[6] prune_out_channels on _ElementWiseOp_57(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.3._project_conv (Conv2d(653, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=19
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.3._expand_conv
54
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([653])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.3._depthwise_conv
53
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([653])
backbone.blocks.3.3._depthwise_conv
621
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)) => prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)), #idxs=621
[1] prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)) => prune_out_channels on _ElementWiseOp_58(HardtanhBackward0), #idxs=621
[2] prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)) => prune_out_channels on backbone.blocks.3.3._bn1 (BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=621
[3] prune_out_channels on backbone.blocks.3.3._bn1 (BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_57(HardtanhBackward0), #idxs=621
[4] prune_out_channels on _ElementWiseOp_57(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.3._project_conv (Conv2d(32, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=621
[5] prune_out_channels on _ElementWiseOp_58(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.3._bn0 (BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=621
[6] prune_out_channels on backbone.blocks.3.3._bn0 (BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.3._expand_conv (Conv2d(112, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=621
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.3._depthwise_conv
53
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False])
torch.Size([653])
torch.Size([32])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.3._expand_conv
54
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False])
torch.Size([653])
torch.Size([32])
backbone.blocks.3.3._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.3._project_conv (Conv2d(32, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.3._project_conv (Conv2d(32, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.3._project_conv
52
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([112])
torch.Size([112])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,168,351
Trainable params: 11,168,351
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.217721, Validation Loss: 0.278703, Training Accuracy: 0.971180, Validation Accuracy: 0.925864
Validation loss decreased (inf --> 0.278703).  Saving model ...
Epoch: 2, Training Loss: 0.215763, Validation Loss: 0.278315, Training Accuracy: 0.970868, Validation Accuracy: 0.927544
Validation loss decreased (0.278703 --> 0.278315).  Saving model ...
Epoch: 3, Training Loss: 0.214270, Validation Loss: 0.283580, Training Accuracy: 0.972487, Validation Accuracy: 0.924370
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.213861, Validation Loss: 0.280318, Training Accuracy: 0.972176, Validation Accuracy: 0.926797
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.214895, Validation Loss: 0.282471, Training Accuracy: 0.973296, Validation Accuracy: 0.927171
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 3 out of 10
Epoch: 6, Training Loss: 0.213724, Validation Loss: 0.276197, Training Accuracy: 0.973420, Validation Accuracy: 0.928105
Validation loss decreased (0.278315 --> 0.276197).  Saving model ...
Epoch: 7, Training Loss: 0.208508, Validation Loss: 0.276769, Training Accuracy: 0.975039, Validation Accuracy: 0.928665
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.207152, Validation Loss: 0.278756, Training Accuracy: 0.975039, Validation Accuracy: 0.928852
EarlyStopping counter: 2 out of 10
Epoch: 9, Training Loss: 0.212530, Validation Loss: 0.278419, Training Accuracy: 0.972674, Validation Accuracy: 0.927358
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 3 out of 10
Epoch: 10, Training Loss: 0.212190, Validation Loss: 0.277995, Training Accuracy: 0.974603, Validation Accuracy: 0.927544
EarlyStopping counter: 4 out of 10
Epoch: 11, Training Loss: 0.211023, Validation Loss: 0.278833, Training Accuracy: 0.972238, Validation Accuracy: 0.926237
EarlyStopping counter: 5 out of 10
Epoch: 12, Training Loss: 0.209314, Validation Loss: 0.278150, Training Accuracy: 0.975537, Validation Accuracy: 0.927171
EarlyStopping counter: 6 out of 10
Epoch: 13, Training Loss: 0.208587, Validation Loss: 0.277879, Training Accuracy: 0.973234, Validation Accuracy: 0.927918
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 7 out of 10
Epoch: 14, Training Loss: 0.204943, Validation Loss: 0.279460, Training Accuracy: 0.976284, Validation Accuracy: 0.927731
EarlyStopping counter: 8 out of 10
Epoch: 15, Training Loss: 0.204697, Validation Loss: 0.278524, Training Accuracy: 0.975475, Validation Accuracy: 0.926797
EarlyStopping counter: 9 out of 10
Epoch: 16, Training Loss: 0.210617, Validation Loss: 0.276502, Training Accuracy: 0.973607, Validation Accuracy: 0.927918
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 16
Ended Training Cycle
backbone.blocks.3.4._expand_conv
27

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.4._expand_conv (Conv2d(112, 645, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.4._expand_conv (Conv2d(112, 645, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=27
[1] prune_out_channels on backbone.blocks.3.4._expand_conv (Conv2d(112, 645, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.4._bn0 (BatchNorm2d(645, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=27
[2] prune_out_channels on backbone.blocks.3.4._bn0 (BatchNorm2d(645, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_60(HardtanhBackward0), #idxs=27
[3] prune_out_channels on _ElementWiseOp_60(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(645, 645, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=645, bias=False)), #idxs=27
[4] prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(645, 645, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=645, bias=False)) => prune_out_channels on backbone.blocks.3.4._bn1 (BatchNorm2d(645, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=27
[5] prune_out_channels on backbone.blocks.3.4._bn1 (BatchNorm2d(645, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_59(HardtanhBackward0), #idxs=27
[6] prune_out_channels on _ElementWiseOp_59(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.4._project_conv (Conv2d(645, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=27
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.4._expand_conv
51
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([645])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.4._depthwise_conv
50
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([645])
backbone.blocks.3.4._depthwise_conv
625
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)) => prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)), #idxs=625
[1] prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)) => prune_out_channels on _ElementWiseOp_60(HardtanhBackward0), #idxs=625
[2] prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)) => prune_out_channels on backbone.blocks.3.4._bn1 (BatchNorm2d(20, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=625
[3] prune_out_channels on backbone.blocks.3.4._bn1 (BatchNorm2d(20, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_59(HardtanhBackward0), #idxs=625
[4] prune_out_channels on _ElementWiseOp_59(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.4._project_conv (Conv2d(20, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=625
[5] prune_out_channels on _ElementWiseOp_60(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.4._bn0 (BatchNorm2d(20, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=625
[6] prune_out_channels on backbone.blocks.3.4._bn0 (BatchNorm2d(20, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.4._expand_conv (Conv2d(112, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=625
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.4._depthwise_conv
50
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False])
torch.Size([645])
torch.Size([20])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.4._expand_conv
51
tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False])
torch.Size([645])
torch.Size([20])
backbone.blocks.3.4._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.4._project_conv (Conv2d(20, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.4._project_conv (Conv2d(20, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.4._project_conv
49
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([112])
torch.Size([112])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,013,827
Trainable params: 11,013,827
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.219820, Validation Loss: 0.282051, Training Accuracy: 0.971678, Validation Accuracy: 0.925864
Validation loss decreased (inf --> 0.282051).  Saving model ...
Epoch: 2, Training Loss: 0.214371, Validation Loss: 0.279652, Training Accuracy: 0.972736, Validation Accuracy: 0.926050
Validation loss decreased (0.282051 --> 0.279652).  Saving model ...
Epoch: 3, Training Loss: 0.207658, Validation Loss: 0.287873, Training Accuracy: 0.975412, Validation Accuracy: 0.924930
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.211299, Validation Loss: 0.282577, Training Accuracy: 0.971678, Validation Accuracy: 0.926237
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.212380, Validation Loss: 0.285744, Training Accuracy: 0.974292, Validation Accuracy: 0.924370
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 3 out of 10
Epoch: 6, Training Loss: 0.210297, Validation Loss: 0.278710, Training Accuracy: 0.975848, Validation Accuracy: 0.925864
Validation loss decreased (0.279652 --> 0.278710).  Saving model ...
Epoch: 7, Training Loss: 0.204855, Validation Loss: 0.280714, Training Accuracy: 0.976284, Validation Accuracy: 0.926984
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.211905, Validation Loss: 0.279849, Training Accuracy: 0.974043, Validation Accuracy: 0.925677
EarlyStopping counter: 2 out of 10
Epoch: 9, Training Loss: 0.208653, Validation Loss: 0.279978, Training Accuracy: 0.974105, Validation Accuracy: 0.926237
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 3 out of 10
Epoch: 10, Training Loss: 0.210313, Validation Loss: 0.279337, Training Accuracy: 0.975101, Validation Accuracy: 0.927171
EarlyStopping counter: 4 out of 10
Epoch: 11, Training Loss: 0.212971, Validation Loss: 0.278292, Training Accuracy: 0.974914, Validation Accuracy: 0.926984
Validation loss decreased (0.278710 --> 0.278292).  Saving model ...
Epoch: 12, Training Loss: 0.204545, Validation Loss: 0.280511, Training Accuracy: 0.976346, Validation Accuracy: 0.926797
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.205278, Validation Loss: 0.279723, Training Accuracy: 0.975786, Validation Accuracy: 0.926611
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 14, Training Loss: 0.210199, Validation Loss: 0.277550, Training Accuracy: 0.974292, Validation Accuracy: 0.927358
Validation loss decreased (0.278292 --> 0.277550).  Saving model ...
Epoch: 15, Training Loss: 0.210751, Validation Loss: 0.278769, Training Accuracy: 0.975786, Validation Accuracy: 0.925864
EarlyStopping counter: 1 out of 10
Epoch: 16, Training Loss: 0.205788, Validation Loss: 0.280061, Training Accuracy: 0.976284, Validation Accuracy: 0.927171
EarlyStopping counter: 2 out of 10
Epoch: 17, Training Loss: 0.209638, Validation Loss: 0.279181, Training Accuracy: 0.974479, Validation Accuracy: 0.927171
EarlyStopping counter: 3 out of 10
Epoch: 18, Training Loss: 0.206729, Validation Loss: 0.278514, Training Accuracy: 0.975226, Validation Accuracy: 0.926797
EarlyStopping counter: 4 out of 10
Epoch: 19, Training Loss: 0.206437, Validation Loss: 0.281507, Training Accuracy: 0.974728, Validation Accuracy: 0.927544
EarlyStopping counter: 5 out of 10
Epoch: 20, Training Loss: 0.214742, Validation Loss: 0.279061, Training Accuracy: 0.974728, Validation Accuracy: 0.926797
EarlyStopping counter: 6 out of 10
Epoch: 21, Training Loss: 0.207287, Validation Loss: 0.279071, Training Accuracy: 0.976159, Validation Accuracy: 0.927358
EarlyStopping counter: 7 out of 10
Epoch: 22, Training Loss: 0.209530, Validation Loss: 0.278606, Training Accuracy: 0.974416, Validation Accuracy: 0.926611
EarlyStopping counter: 8 out of 10
Epoch: 23, Training Loss: 0.206449, Validation Loss: 0.279000, Training Accuracy: 0.975163, Validation Accuracy: 0.927918
EarlyStopping counter: 9 out of 10
Epoch: 24, Training Loss: 0.206984, Validation Loss: 0.279024, Training Accuracy: 0.975848, Validation Accuracy: 0.927171
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 24
Ended Training Cycle
backbone.blocks.3.5._expand_conv
47

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.5._expand_conv (Conv2d(112, 625, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.5._expand_conv (Conv2d(112, 625, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=47
[1] prune_out_channels on backbone.blocks.3.5._expand_conv (Conv2d(112, 625, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.5._bn0 (BatchNorm2d(625, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=47
[2] prune_out_channels on backbone.blocks.3.5._bn0 (BatchNorm2d(625, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_62(HardtanhBackward0), #idxs=47
[3] prune_out_channels on _ElementWiseOp_62(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(625, 625, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=625, bias=False)), #idxs=47
[4] prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(625, 625, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=625, bias=False)) => prune_out_channels on backbone.blocks.3.5._bn1 (BatchNorm2d(625, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=47
[5] prune_out_channels on backbone.blocks.3.5._bn1 (BatchNorm2d(625, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_61(HardtanhBackward0), #idxs=47
[6] prune_out_channels on _ElementWiseOp_61(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.5._project_conv (Conv2d(625, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=47
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.5._expand_conv
48
tensor([ True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([625])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.5._depthwise_conv
47
tensor([ True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([625])
backbone.blocks.3.5._depthwise_conv
610
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(15, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=15, bias=False)) => prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(15, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=15, bias=False)), #idxs=610
[1] prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(15, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=15, bias=False)) => prune_out_channels on _ElementWiseOp_62(HardtanhBackward0), #idxs=610
[2] prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(15, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=15, bias=False)) => prune_out_channels on backbone.blocks.3.5._bn1 (BatchNorm2d(15, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=610
[3] prune_out_channels on backbone.blocks.3.5._bn1 (BatchNorm2d(15, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_61(HardtanhBackward0), #idxs=610
[4] prune_out_channels on _ElementWiseOp_61(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.5._project_conv (Conv2d(15, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=610
[5] prune_out_channels on _ElementWiseOp_62(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.5._bn0 (BatchNorm2d(15, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=610
[6] prune_out_channels on backbone.blocks.3.5._bn0 (BatchNorm2d(15, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.5._expand_conv (Conv2d(112, 15, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=610
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.3.5._depthwise_conv
47
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False])
torch.Size([625])
torch.Size([15])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.5._expand_conv
48
tensor([False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False])
torch.Size([625])
torch.Size([15])
backbone.blocks.3.5._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.5._project_conv (Conv2d(15, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.5._project_conv (Conv2d(15, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.3.5._project_conv
46
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([112])
torch.Size([112])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 10,858,118
Trainable params: 10,858,118
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.210675, Validation Loss: 0.289014, Training Accuracy: 0.974914, Validation Accuracy: 0.923810
Validation loss decreased (inf --> 0.289014).  Saving model ...
Epoch: 2, Training Loss: 0.211962, Validation Loss: 0.297142, Training Accuracy: 0.972923, Validation Accuracy: 0.923436
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.211259, Validation Loss: 0.289599, Training Accuracy: 0.974977, Validation Accuracy: 0.923436
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.208743, Validation Loss: 0.293012, Training Accuracy: 0.975163, Validation Accuracy: 0.922502
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.210064, Validation Loss: 0.285261, Training Accuracy: 0.974354, Validation Accuracy: 0.923996
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
Validation loss decreased (0.289014 --> 0.285261).  Saving model ...
Epoch: 6, Training Loss: 0.206354, Validation Loss: 0.283112, Training Accuracy: 0.975537, Validation Accuracy: 0.925677
Validation loss decreased (0.285261 --> 0.283112).  Saving model ...
Epoch: 7, Training Loss: 0.215517, Validation Loss: 0.280605, Training Accuracy: 0.975226, Validation Accuracy: 0.925864
Validation loss decreased (0.283112 --> 0.280605).  Saving model ...
Epoch: 8, Training Loss: 0.204674, Validation Loss: 0.282081, Training Accuracy: 0.976222, Validation Accuracy: 0.926237
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.205496, Validation Loss: 0.280418, Training Accuracy: 0.976471, Validation Accuracy: 0.926797
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.280605 --> 0.280418).  Saving model ...
Epoch: 10, Training Loss: 0.211053, Validation Loss: 0.279957, Training Accuracy: 0.975599, Validation Accuracy: 0.926050
Validation loss decreased (0.280418 --> 0.279957).  Saving model ...
Epoch: 11, Training Loss: 0.208534, Validation Loss: 0.280967, Training Accuracy: 0.976346, Validation Accuracy: 0.925864
EarlyStopping counter: 1 out of 10
Epoch: 12, Training Loss: 0.205931, Validation Loss: 0.280601, Training Accuracy: 0.975786, Validation Accuracy: 0.926611
EarlyStopping counter: 2 out of 10
Epoch: 13, Training Loss: 0.207972, Validation Loss: 0.281305, Training Accuracy: 0.977716, Validation Accuracy: 0.926611
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 3 out of 10
Epoch: 14, Training Loss: 0.207371, Validation Loss: 0.279557, Training Accuracy: 0.976222, Validation Accuracy: 0.926797
Validation loss decreased (0.279957 --> 0.279557).  Saving model ...
Epoch: 15, Training Loss: 0.201856, Validation Loss: 0.279177, Training Accuracy: 0.977529, Validation Accuracy: 0.927171
Validation loss decreased (0.279557 --> 0.279177).  Saving model ...
Epoch: 16, Training Loss: 0.208068, Validation Loss: 0.279367, Training Accuracy: 0.975163, Validation Accuracy: 0.926237
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.209715, Validation Loss: 0.281025, Training Accuracy: 0.977778, Validation Accuracy: 0.926611
EarlyStopping counter: 2 out of 10
Epoch: 18, Training Loss: 0.210083, Validation Loss: 0.280235, Training Accuracy: 0.976284, Validation Accuracy: 0.925490
EarlyStopping counter: 3 out of 10
Epoch: 19, Training Loss: 0.205503, Validation Loss: 0.281028, Training Accuracy: 0.977965, Validation Accuracy: 0.926424
EarlyStopping counter: 4 out of 10
Epoch: 20, Training Loss: 0.208559, Validation Loss: 0.278984, Training Accuracy: 0.975910, Validation Accuracy: 0.927171
Validation loss decreased (0.279177 --> 0.278984).  Saving model ...
Epoch: 21, Training Loss: 0.202319, Validation Loss: 0.280802, Training Accuracy: 0.978462, Validation Accuracy: 0.925677
EarlyStopping counter: 1 out of 10
Epoch: 22, Training Loss: 0.204762, Validation Loss: 0.280517, Training Accuracy: 0.977218, Validation Accuracy: 0.926984
EarlyStopping counter: 2 out of 10
Epoch: 23, Training Loss: 0.205971, Validation Loss: 0.280593, Training Accuracy: 0.977591, Validation Accuracy: 0.926611
EarlyStopping counter: 3 out of 10
Epoch: 24, Training Loss: 0.204304, Validation Loss: 0.281341, Training Accuracy: 0.977404, Validation Accuracy: 0.926050
EarlyStopping counter: 4 out of 10
Epoch: 25, Training Loss: 0.209480, Validation Loss: 0.280920, Training Accuracy: 0.975226, Validation Accuracy: 0.926797
EarlyStopping counter: 5 out of 10
Epoch: 26, Training Loss: 0.210357, Validation Loss: 0.280025, Training Accuracy: 0.976035, Validation Accuracy: 0.926424
EarlyStopping counter: 6 out of 10
Epoch: 27, Training Loss: 0.213762, Validation Loss: 0.281561, Training Accuracy: 0.975226, Validation Accuracy: 0.926237
EarlyStopping counter: 7 out of 10
Epoch: 28, Training Loss: 0.208117, Validation Loss: 0.280546, Training Accuracy: 0.976471, Validation Accuracy: 0.925864
EarlyStopping counter: 8 out of 10
Epoch: 29, Training Loss: 0.203591, Validation Loss: 0.280286, Training Accuracy: 0.976657, Validation Accuracy: 0.926797
EarlyStopping counter: 9 out of 10
Epoch: 30, Training Loss: 0.206756, Validation Loss: 0.280174, Training Accuracy: 0.976782, Validation Accuracy: 0.925864
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 30
Ended Training Cycle
backbone.blocks.4.0._expand_conv
8

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.0._expand_conv (Conv2d(112, 664, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.0._expand_conv (Conv2d(112, 664, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[1] prune_out_channels on backbone.blocks.4.0._expand_conv (Conv2d(112, 664, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.0._bn0 (BatchNorm2d(664, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[2] prune_out_channels on backbone.blocks.4.0._bn0 (BatchNorm2d(664, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_21(HardtanhBackward0), #idxs=8
[3] prune_out_channels on _ElementWiseOp_21(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(664, 664, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=664, bias=False)), #idxs=8
[4] prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(664, 664, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=664, bias=False)) => prune_out_channels on backbone.blocks.4.0._bn1 (BatchNorm2d(664, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[5] prune_out_channels on backbone.blocks.4.0._bn1 (BatchNorm2d(664, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_20(HardtanhBackward0), #idxs=8
[6] prune_out_channels on _ElementWiseOp_20(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.0._project_conv (Conv2d(664, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.0._expand_conv
45
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([664])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.0._depthwise_conv
44
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([664])
backbone.blocks.4.0._depthwise_conv
52
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(612, 612, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=612, bias=False)) => prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(612, 612, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=612, bias=False)), #idxs=52
[1] prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(612, 612, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=612, bias=False)) => prune_out_channels on _ElementWiseOp_21(HardtanhBackward0), #idxs=52
[2] prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(612, 612, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=612, bias=False)) => prune_out_channels on backbone.blocks.4.0._bn1 (BatchNorm2d(612, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=52
[3] prune_out_channels on backbone.blocks.4.0._bn1 (BatchNorm2d(612, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_20(HardtanhBackward0), #idxs=52
[4] prune_out_channels on _ElementWiseOp_20(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.0._project_conv (Conv2d(612, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=52
[5] prune_out_channels on _ElementWiseOp_21(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.0._bn0 (BatchNorm2d(612, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=52
[6] prune_out_channels on backbone.blocks.4.0._bn0 (BatchNorm2d(612, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.0._expand_conv (Conv2d(112, 612, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=52
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.0._depthwise_conv
44
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([664])
torch.Size([612])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.0._expand_conv
45
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([664])
torch.Size([612])
backbone.blocks.4.0._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.0._project_conv (Conv2d(612, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.0._project_conv (Conv2d(612, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.0._project_conv
43
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([160])
torch.Size([160])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 10,840,058
Trainable params: 10,840,058
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.203638, Validation Loss: 0.278911, Training Accuracy: 0.975786, Validation Accuracy: 0.925303
Validation loss decreased (inf --> 0.278911).  Saving model ...
Epoch: 2, Training Loss: 0.210829, Validation Loss: 0.286880, Training Accuracy: 0.973669, Validation Accuracy: 0.922502
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.213054, Validation Loss: 0.285693, Training Accuracy: 0.974914, Validation Accuracy: 0.925117
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.209260, Validation Loss: 0.293294, Training Accuracy: 0.976097, Validation Accuracy: 0.919328
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.210870, Validation Loss: 0.282846, Training Accuracy: 0.976284, Validation Accuracy: 0.920635
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.206732, Validation Loss: 0.282459, Training Accuracy: 0.976657, Validation Accuracy: 0.925303
EarlyStopping counter: 5 out of 10
Epoch: 7, Training Loss: 0.209957, Validation Loss: 0.280922, Training Accuracy: 0.976284, Validation Accuracy: 0.926050
EarlyStopping counter: 6 out of 10
Epoch: 8, Training Loss: 0.206602, Validation Loss: 0.280339, Training Accuracy: 0.978151, Validation Accuracy: 0.926424
EarlyStopping counter: 7 out of 10
Epoch: 9, Training Loss: 0.207852, Validation Loss: 0.283856, Training Accuracy: 0.978400, Validation Accuracy: 0.925677
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 8 out of 10
Epoch: 10, Training Loss: 0.205963, Validation Loss: 0.282380, Training Accuracy: 0.977965, Validation Accuracy: 0.926611
EarlyStopping counter: 9 out of 10
Epoch: 11, Training Loss: 0.206909, Validation Loss: 0.281421, Training Accuracy: 0.978089, Validation Accuracy: 0.926984
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 11
Ended Training Cycle
backbone.blocks.4.1._expand_conv
50

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.1._expand_conv (Conv2d(160, 910, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.1._expand_conv (Conv2d(160, 910, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=50
[1] prune_out_channels on backbone.blocks.4.1._expand_conv (Conv2d(160, 910, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.1._bn0 (BatchNorm2d(910, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=50
[2] prune_out_channels on backbone.blocks.4.1._bn0 (BatchNorm2d(910, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_64(HardtanhBackward0), #idxs=50
[3] prune_out_channels on _ElementWiseOp_64(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(910, 910, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=910, bias=False)), #idxs=50
[4] prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(910, 910, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=910, bias=False)) => prune_out_channels on backbone.blocks.4.1._bn1 (BatchNorm2d(910, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=50
[5] prune_out_channels on backbone.blocks.4.1._bn1 (BatchNorm2d(910, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_63(HardtanhBackward0), #idxs=50
[6] prune_out_channels on _ElementWiseOp_63(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.1._project_conv (Conv2d(910, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=50
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.1._expand_conv
42
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([910])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.1._depthwise_conv
41
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([910])
backbone.blocks.4.1._depthwise_conv
766
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(144, 144, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=144, bias=False)) => prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(144, 144, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=144, bias=False)), #idxs=766
[1] prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(144, 144, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=144, bias=False)) => prune_out_channels on _ElementWiseOp_64(HardtanhBackward0), #idxs=766
[2] prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(144, 144, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=144, bias=False)) => prune_out_channels on backbone.blocks.4.1._bn1 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=766
[3] prune_out_channels on backbone.blocks.4.1._bn1 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_63(HardtanhBackward0), #idxs=766
[4] prune_out_channels on _ElementWiseOp_63(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.1._project_conv (Conv2d(144, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=766
[5] prune_out_channels on _ElementWiseOp_64(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.1._bn0 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=766
[6] prune_out_channels on backbone.blocks.4.1._bn0 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.1._expand_conv (Conv2d(160, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=766
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.1._depthwise_conv
41
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True,  True,  True, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
         True, False,  True, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False, False,  True, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False])
torch.Size([910])
torch.Size([144])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.1._expand_conv
42
tensor([False,  True, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True,  True,  True, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False,  True,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
         True, False,  True, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True,  True, False,  True, False, False, False, False,  True,
        False, False, False, False,  True, False,  True, False, False, False,
         True, False, False,  True, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False,  True,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False,  True, False, False, False,
        False,  True, False, False, False,  True, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False])
torch.Size([910])
torch.Size([144])
backbone.blocks.4.1._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.1._project_conv (Conv2d(144, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.1._project_conv (Conv2d(144, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.1._project_conv
40
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([160])
torch.Size([160])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 10,555,274
Trainable params: 10,555,274
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.211756, Validation Loss: 0.290923, Training Accuracy: 0.974167, Validation Accuracy: 0.922129
Validation loss decreased (inf --> 0.290923).  Saving model ...
Epoch: 2, Training Loss: 0.216563, Validation Loss: 0.280273, Training Accuracy: 0.974541, Validation Accuracy: 0.925490
Validation loss decreased (0.290923 --> 0.280273).  Saving model ...
Epoch: 3, Training Loss: 0.214755, Validation Loss: 0.284734, Training Accuracy: 0.972611, Validation Accuracy: 0.924370
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.212261, Validation Loss: 0.298201, Training Accuracy: 0.974541, Validation Accuracy: 0.928478
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.213469, Validation Loss: 0.279325, Training Accuracy: 0.975973, Validation Accuracy: 0.924930
Validation loss decreased (0.280273 --> 0.279325).  Saving model ...
Epoch: 6, Training Loss: 0.214667, Validation Loss: 0.286440, Training Accuracy: 0.976408, Validation Accuracy: 0.927731
Epoch 00006: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 1 out of 10
Epoch: 7, Training Loss: 0.212071, Validation Loss: 0.282667, Training Accuracy: 0.976844, Validation Accuracy: 0.926424
EarlyStopping counter: 2 out of 10
Epoch: 8, Training Loss: 0.208270, Validation Loss: 0.283103, Training Accuracy: 0.977778, Validation Accuracy: 0.925677
EarlyStopping counter: 3 out of 10
Epoch: 9, Training Loss: 0.209426, Validation Loss: 0.284351, Training Accuracy: 0.976159, Validation Accuracy: 0.925677
EarlyStopping counter: 4 out of 10
Epoch: 10, Training Loss: 0.211319, Validation Loss: 0.286314, Training Accuracy: 0.976782, Validation Accuracy: 0.925117
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 5 out of 10
Epoch: 11, Training Loss: 0.209655, Validation Loss: 0.282462, Training Accuracy: 0.976657, Validation Accuracy: 0.925864
EarlyStopping counter: 6 out of 10
Epoch: 12, Training Loss: 0.207120, Validation Loss: 0.282663, Training Accuracy: 0.977342, Validation Accuracy: 0.925677
EarlyStopping counter: 7 out of 10
Epoch: 13, Training Loss: 0.206634, Validation Loss: 0.283084, Training Accuracy: 0.977342, Validation Accuracy: 0.925864
EarlyStopping counter: 8 out of 10
Epoch: 14, Training Loss: 0.205272, Validation Loss: 0.283954, Training Accuracy: 0.979023, Validation Accuracy: 0.926237
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 9 out of 10
Epoch: 15, Training Loss: 0.203736, Validation Loss: 0.284183, Training Accuracy: 0.978338, Validation Accuracy: 0.924743
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 15
Ended Training Cycle
backbone.blocks.4.2._expand_conv
89

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.2._expand_conv (Conv2d(160, 871, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.2._expand_conv (Conv2d(160, 871, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=89
[1] prune_out_channels on backbone.blocks.4.2._expand_conv (Conv2d(160, 871, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.2._bn0 (BatchNorm2d(871, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=89
[2] prune_out_channels on backbone.blocks.4.2._bn0 (BatchNorm2d(871, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_66(HardtanhBackward0), #idxs=89
[3] prune_out_channels on _ElementWiseOp_66(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(871, 871, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=871, bias=False)), #idxs=89
[4] prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(871, 871, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=871, bias=False)) => prune_out_channels on backbone.blocks.4.2._bn1 (BatchNorm2d(871, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=89
[5] prune_out_channels on backbone.blocks.4.2._bn1 (BatchNorm2d(871, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_65(HardtanhBackward0), #idxs=89
[6] prune_out_channels on _ElementWiseOp_65(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.2._project_conv (Conv2d(871, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=89
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.2._expand_conv
39
tensor([False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True])
torch.Size([960])
torch.Size([871])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.2._depthwise_conv
38
tensor([False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True])
torch.Size([960])
torch.Size([871])
backbone.blocks.4.2._depthwise_conv
745
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(126, 126, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=126, bias=False)) => prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(126, 126, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=126, bias=False)), #idxs=745
[1] prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(126, 126, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=126, bias=False)) => prune_out_channels on _ElementWiseOp_66(HardtanhBackward0), #idxs=745
[2] prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(126, 126, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=126, bias=False)) => prune_out_channels on backbone.blocks.4.2._bn1 (BatchNorm2d(126, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=745
[3] prune_out_channels on backbone.blocks.4.2._bn1 (BatchNorm2d(126, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_65(HardtanhBackward0), #idxs=745
[4] prune_out_channels on _ElementWiseOp_65(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.2._project_conv (Conv2d(126, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=745
[5] prune_out_channels on _ElementWiseOp_66(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.2._bn0 (BatchNorm2d(126, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=745
[6] prune_out_channels on backbone.blocks.4.2._bn0 (BatchNorm2d(126, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.2._expand_conv (Conv2d(160, 126, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=745
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.2._depthwise_conv
38
tensor([False, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False,  True,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False, False,  True, False, False, False, False,
         True,  True, False, False, False,  True, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False,  True, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False])
torch.Size([871])
torch.Size([126])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.2._expand_conv
39
tensor([False, False,  True,  True, False,  True, False, False, False, False,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False,  True,  True, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True,  True, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True,  True, False, False, False,  True, False, False, False, False,
         True,  True, False, False, False,  True, False, False, False,  True,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False,  True, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False, False, False,  True, False,  True,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
         True, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False,  True,  True, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False])
torch.Size([871])
torch.Size([126])
backbone.blocks.4.2._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.2._project_conv (Conv2d(126, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.2._project_conv (Conv2d(126, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.2._project_conv
37
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([160])
torch.Size([160])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 10,264,208
Trainable params: 10,264,208
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.213707, Validation Loss: 0.300302, Training Accuracy: 0.974230, Validation Accuracy: 0.922502
Validation loss decreased (inf --> 0.300302).  Saving model ...
Epoch: 2, Training Loss: 0.210156, Validation Loss: 0.286936, Training Accuracy: 0.975724, Validation Accuracy: 0.927171
Validation loss decreased (0.300302 --> 0.286936).  Saving model ...
Epoch: 3, Training Loss: 0.211367, Validation Loss: 0.305986, Training Accuracy: 0.974728, Validation Accuracy: 0.919888
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.209942, Validation Loss: 0.289111, Training Accuracy: 0.976471, Validation Accuracy: 0.924183
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.214237, Validation Loss: 0.296032, Training Accuracy: 0.976284, Validation Accuracy: 0.923623
EarlyStopping counter: 3 out of 10
Epoch: 6, Training Loss: 0.212064, Validation Loss: 0.296153, Training Accuracy: 0.974479, Validation Accuracy: 0.926050
Epoch 00006: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 7, Training Loss: 0.208797, Validation Loss: 0.284212, Training Accuracy: 0.976906, Validation Accuracy: 0.925117
Validation loss decreased (0.286936 --> 0.284212).  Saving model ...
Epoch: 8, Training Loss: 0.207254, Validation Loss: 0.283261, Training Accuracy: 0.978462, Validation Accuracy: 0.926424
Validation loss decreased (0.284212 --> 0.283261).  Saving model ...
Epoch: 9, Training Loss: 0.208047, Validation Loss: 0.281875, Training Accuracy: 0.978587, Validation Accuracy: 0.926237
Validation loss decreased (0.283261 --> 0.281875).  Saving model ...
Epoch: 10, Training Loss: 0.210502, Validation Loss: 0.282663, Training Accuracy: 0.977591, Validation Accuracy: 0.925303
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 1 out of 10
Epoch: 11, Training Loss: 0.206567, Validation Loss: 0.286459, Training Accuracy: 0.978400, Validation Accuracy: 0.924556
EarlyStopping counter: 2 out of 10
Epoch: 12, Training Loss: 0.208255, Validation Loss: 0.285741, Training Accuracy: 0.978462, Validation Accuracy: 0.925677
EarlyStopping counter: 3 out of 10
Epoch: 13, Training Loss: 0.202907, Validation Loss: 0.285155, Training Accuracy: 0.980019, Validation Accuracy: 0.925303
EarlyStopping counter: 4 out of 10
Epoch: 14, Training Loss: 0.199755, Validation Loss: 0.284947, Training Accuracy: 0.979334, Validation Accuracy: 0.925677
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 5 out of 10
Epoch: 15, Training Loss: 0.204228, Validation Loss: 0.284572, Training Accuracy: 0.979770, Validation Accuracy: 0.925117
EarlyStopping counter: 6 out of 10
Epoch: 16, Training Loss: 0.207447, Validation Loss: 0.285914, Training Accuracy: 0.979583, Validation Accuracy: 0.926797
EarlyStopping counter: 7 out of 10
Epoch: 17, Training Loss: 0.204376, Validation Loss: 0.284740, Training Accuracy: 0.978214, Validation Accuracy: 0.924743
EarlyStopping counter: 8 out of 10
Epoch: 18, Training Loss: 0.201621, Validation Loss: 0.285839, Training Accuracy: 0.980579, Validation Accuracy: 0.925303
EarlyStopping counter: 9 out of 10
Epoch: 19, Training Loss: 0.207309, Validation Loss: 0.284289, Training Accuracy: 0.978151, Validation Accuracy: 0.925490
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 19
Ended Training Cycle
backbone.blocks.4.3._expand_conv
114

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.3._expand_conv (Conv2d(160, 846, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.3._expand_conv (Conv2d(160, 846, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=114
[1] prune_out_channels on backbone.blocks.4.3._expand_conv (Conv2d(160, 846, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.3._bn0 (BatchNorm2d(846, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=114
[2] prune_out_channels on backbone.blocks.4.3._bn0 (BatchNorm2d(846, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_68(HardtanhBackward0), #idxs=114
[3] prune_out_channels on _ElementWiseOp_68(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(846, 846, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=846, bias=False)), #idxs=114
[4] prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(846, 846, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=846, bias=False)) => prune_out_channels on backbone.blocks.4.3._bn1 (BatchNorm2d(846, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=114
[5] prune_out_channels on backbone.blocks.4.3._bn1 (BatchNorm2d(846, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_67(HardtanhBackward0), #idxs=114
[6] prune_out_channels on _ElementWiseOp_67(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.3._project_conv (Conv2d(846, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=114
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.3._expand_conv
36
tensor([ True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True, False, False,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True, False,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False, False,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False, False,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False, False, False,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True])
torch.Size([960])
torch.Size([846])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.3._depthwise_conv
35
tensor([ True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True, False, False,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True, False,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False, False,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False, False,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False, False, False,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True])
torch.Size([960])
torch.Size([846])
backbone.blocks.4.3._depthwise_conv
735
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(111, 111, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=111, bias=False)) => prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(111, 111, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=111, bias=False)), #idxs=735
[1] prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(111, 111, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=111, bias=False)) => prune_out_channels on _ElementWiseOp_68(HardtanhBackward0), #idxs=735
[2] prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(111, 111, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=111, bias=False)) => prune_out_channels on backbone.blocks.4.3._bn1 (BatchNorm2d(111, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=735
[3] prune_out_channels on backbone.blocks.4.3._bn1 (BatchNorm2d(111, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_67(HardtanhBackward0), #idxs=735
[4] prune_out_channels on _ElementWiseOp_67(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.3._project_conv (Conv2d(111, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=735
[5] prune_out_channels on _ElementWiseOp_68(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.3._bn0 (BatchNorm2d(111, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=735
[6] prune_out_channels on backbone.blocks.4.3._bn0 (BatchNorm2d(111, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.3._expand_conv (Conv2d(160, 111, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=735
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.3._depthwise_conv
35
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
         True, False, False, False,  True, False,  True,  True,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True,  True,
         True,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False,  True, False, False, False, False])
torch.Size([846])
torch.Size([111])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.3._expand_conv
36
tensor([ True,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
         True, False, False, False,  True, False,  True,  True,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
         True,  True, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True,  True,
         True,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False,  True, False, False, False,  True, False, False,
         True, False, False, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False,  True, False, False, False, False])
torch.Size([846])
torch.Size([111])
backbone.blocks.4.3._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.3._project_conv (Conv2d(111, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.3._project_conv (Conv2d(111, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.3._project_conv
34
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([160])
torch.Size([160])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 9,967,907
Trainable params: 9,967,907
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.212790, Validation Loss: 0.280194, Training Accuracy: 0.975475, Validation Accuracy: 0.925864
Validation loss decreased (inf --> 0.280194).  Saving model ...
Epoch: 2, Training Loss: 0.208807, Validation Loss: 0.292475, Training Accuracy: 0.976906, Validation Accuracy: 0.922876
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.212293, Validation Loss: 0.294320, Training Accuracy: 0.975910, Validation Accuracy: 0.921195
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.211209, Validation Loss: 0.290499, Training Accuracy: 0.978027, Validation Accuracy: 0.924370
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.211657, Validation Loss: 0.285093, Training Accuracy: 0.975412, Validation Accuracy: 0.923810
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.210716, Validation Loss: 0.283849, Training Accuracy: 0.978898, Validation Accuracy: 0.926797
EarlyStopping counter: 5 out of 10
Epoch: 7, Training Loss: 0.204427, Validation Loss: 0.287696, Training Accuracy: 0.978462, Validation Accuracy: 0.925677
EarlyStopping counter: 6 out of 10
Epoch: 8, Training Loss: 0.206354, Validation Loss: 0.286805, Training Accuracy: 0.976720, Validation Accuracy: 0.924370
EarlyStopping counter: 7 out of 10
Epoch: 9, Training Loss: 0.209576, Validation Loss: 0.287430, Training Accuracy: 0.978151, Validation Accuracy: 0.925864
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 8 out of 10
Epoch: 10, Training Loss: 0.207722, Validation Loss: 0.285450, Training Accuracy: 0.978214, Validation Accuracy: 0.924930
EarlyStopping counter: 9 out of 10
Epoch: 11, Training Loss: 0.200664, Validation Loss: 0.286413, Training Accuracy: 0.978836, Validation Accuracy: 0.925303
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 11
Ended Training Cycle
backbone.blocks.4.4._expand_conv
158

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.4._expand_conv (Conv2d(160, 802, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.4._expand_conv (Conv2d(160, 802, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=158
[1] prune_out_channels on backbone.blocks.4.4._expand_conv (Conv2d(160, 802, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.4._bn0 (BatchNorm2d(802, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=158
[2] prune_out_channels on backbone.blocks.4.4._bn0 (BatchNorm2d(802, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_70(HardtanhBackward0), #idxs=158
[3] prune_out_channels on _ElementWiseOp_70(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(802, 802, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=802, bias=False)), #idxs=158
[4] prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(802, 802, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=802, bias=False)) => prune_out_channels on backbone.blocks.4.4._bn1 (BatchNorm2d(802, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=158
[5] prune_out_channels on backbone.blocks.4.4._bn1 (BatchNorm2d(802, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_69(HardtanhBackward0), #idxs=158
[6] prune_out_channels on _ElementWiseOp_69(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.4._project_conv (Conv2d(802, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=158
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.4._expand_conv
33
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True, False, False,  True,  True,
        False, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False, False,  True, False,  True, False,
         True,  True,  True,  True, False,  True, False,  True, False, False,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True, False,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True,  True,
        False, False, False,  True, False, False,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False, False,
         True, False,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True, False, False,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True, False, False,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True, False,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True, False, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([802])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.4._depthwise_conv
32
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True, False, False,  True,  True,
        False, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False, False,  True, False,  True, False,
         True,  True,  True,  True, False,  True, False,  True, False, False,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True, False,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True,  True,
        False, False, False,  True, False, False,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False, False,
         True, False,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True, False, False,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True, False, False,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True, False,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True, False, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([802])
backbone.blocks.4.4._depthwise_conv
703
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(99, 99, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=99, bias=False)) => prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(99, 99, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=99, bias=False)), #idxs=703
[1] prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(99, 99, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=99, bias=False)) => prune_out_channels on _ElementWiseOp_70(HardtanhBackward0), #idxs=703
[2] prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(99, 99, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=99, bias=False)) => prune_out_channels on backbone.blocks.4.4._bn1 (BatchNorm2d(99, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=703
[3] prune_out_channels on backbone.blocks.4.4._bn1 (BatchNorm2d(99, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_69(HardtanhBackward0), #idxs=703
[4] prune_out_channels on _ElementWiseOp_69(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.4._project_conv (Conv2d(99, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=703
[5] prune_out_channels on _ElementWiseOp_70(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.4._bn0 (BatchNorm2d(99, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=703
[6] prune_out_channels on backbone.blocks.4.4._bn0 (BatchNorm2d(99, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.4._expand_conv (Conv2d(160, 99, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=703
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.4._depthwise_conv
32
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
torch.Size([802])
torch.Size([99])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.4._expand_conv
33
tensor([False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True,  True, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False,  True, False, False, False,
         True, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False,  True,  True, False,  True, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False])
torch.Size([802])
torch.Size([99])
backbone.blocks.4.4._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.4._project_conv (Conv2d(99, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.4._project_conv (Conv2d(99, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.4._project_conv
31
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([160])
torch.Size([160])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 9,667,418
Trainable params: 9,667,418
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.209461, Validation Loss: 0.291108, Training Accuracy: 0.977529, Validation Accuracy: 0.926237
Validation loss decreased (inf --> 0.291108).  Saving model ...
Epoch: 2, Training Loss: 0.211633, Validation Loss: 0.292927, Training Accuracy: 0.975910, Validation Accuracy: 0.919888
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.217821, Validation Loss: 0.290975, Training Accuracy: 0.973856, Validation Accuracy: 0.925864
Validation loss decreased (0.291108 --> 0.290975).  Saving model ...
Epoch: 4, Training Loss: 0.210464, Validation Loss: 0.283649, Training Accuracy: 0.975226, Validation Accuracy: 0.925117
Validation loss decreased (0.290975 --> 0.283649).  Saving model ...
Epoch: 5, Training Loss: 0.206599, Validation Loss: 0.309108, Training Accuracy: 0.977529, Validation Accuracy: 0.918207
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 1 out of 10
Epoch: 6, Training Loss: 0.208413, Validation Loss: 0.286493, Training Accuracy: 0.977591, Validation Accuracy: 0.926050
EarlyStopping counter: 2 out of 10
Epoch: 7, Training Loss: 0.206358, Validation Loss: 0.286918, Training Accuracy: 0.978774, Validation Accuracy: 0.924743
EarlyStopping counter: 3 out of 10
Epoch: 8, Training Loss: 0.202042, Validation Loss: 0.284862, Training Accuracy: 0.979209, Validation Accuracy: 0.924930
EarlyStopping counter: 4 out of 10
Epoch: 9, Training Loss: 0.209671, Validation Loss: 0.287616, Training Accuracy: 0.978960, Validation Accuracy: 0.924930
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 5 out of 10
Epoch: 10, Training Loss: 0.207375, Validation Loss: 0.285550, Training Accuracy: 0.980392, Validation Accuracy: 0.924930
EarlyStopping counter: 6 out of 10
Epoch: 11, Training Loss: 0.206913, Validation Loss: 0.286873, Training Accuracy: 0.979334, Validation Accuracy: 0.924556
EarlyStopping counter: 7 out of 10
Epoch: 12, Training Loss: 0.206479, Validation Loss: 0.286821, Training Accuracy: 0.979521, Validation Accuracy: 0.924930
EarlyStopping counter: 8 out of 10
Epoch: 13, Training Loss: 0.201595, Validation Loss: 0.286080, Training Accuracy: 0.979147, Validation Accuracy: 0.925303
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 9 out of 10
Epoch: 14, Training Loss: 0.201799, Validation Loss: 0.286599, Training Accuracy: 0.979770, Validation Accuracy: 0.924556
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 14
Ended Training Cycle
backbone.blocks.4.5._expand_conv
176

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.5._expand_conv (Conv2d(160, 784, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.5._expand_conv (Conv2d(160, 784, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=176
[1] prune_out_channels on backbone.blocks.4.5._expand_conv (Conv2d(160, 784, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.5._bn0 (BatchNorm2d(784, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=176
[2] prune_out_channels on backbone.blocks.4.5._bn0 (BatchNorm2d(784, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_72(HardtanhBackward0), #idxs=176
[3] prune_out_channels on _ElementWiseOp_72(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(784, 784, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=784, bias=False)), #idxs=176
[4] prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(784, 784, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=784, bias=False)) => prune_out_channels on backbone.blocks.4.5._bn1 (BatchNorm2d(784, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=176
[5] prune_out_channels on backbone.blocks.4.5._bn1 (BatchNorm2d(784, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_71(HardtanhBackward0), #idxs=176
[6] prune_out_channels on _ElementWiseOp_71(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.5._project_conv (Conv2d(784, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=176
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.5._expand_conv
30
tensor([False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True, False, False,  True,  True, False, False,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
        False, False, False,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True, False, False, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False, False, False,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True, False,  True, False,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True, False,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False, False, False, False,
         True,  True,  True,  True,  True,  True, False, False, False, False,
         True,  True,  True, False, False,  True,  True,  True,  True, False,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True, False, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True, False,  True,
        False, False,  True, False,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
        False, False,  True,  True,  True, False,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False, False,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True, False,  True,  True,  True, False, False,  True,  True,  True])
torch.Size([960])
torch.Size([784])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.5._depthwise_conv
29
tensor([False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True, False, False,  True,  True, False, False,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
        False, False, False,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True, False, False, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False, False, False,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True, False,  True, False,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True, False,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False, False, False, False,
         True,  True,  True,  True,  True,  True, False, False, False, False,
         True,  True,  True, False, False,  True,  True,  True,  True, False,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True, False, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True, False,  True,
        False, False,  True, False,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
        False, False,  True,  True,  True, False,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False, False,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True, False,  True,  True,  True, False, False,  True,  True,  True])
torch.Size([960])
torch.Size([784])
backbone.blocks.4.5._depthwise_conv
680
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(104, 104, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=104, bias=False)) => prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(104, 104, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=104, bias=False)), #idxs=680
[1] prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(104, 104, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=104, bias=False)) => prune_out_channels on _ElementWiseOp_72(HardtanhBackward0), #idxs=680
[2] prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(104, 104, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=104, bias=False)) => prune_out_channels on backbone.blocks.4.5._bn1 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=680
[3] prune_out_channels on backbone.blocks.4.5._bn1 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_71(HardtanhBackward0), #idxs=680
[4] prune_out_channels on _ElementWiseOp_71(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.5._project_conv (Conv2d(104, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=680
[5] prune_out_channels on _ElementWiseOp_72(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.5._bn0 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=680
[6] prune_out_channels on backbone.blocks.4.5._bn0 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.5._expand_conv (Conv2d(160, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=680
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.4.5._depthwise_conv
29
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False, False, False,  True, False,  True, False, False,  True,
         True,  True, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False])
torch.Size([784])
torch.Size([104])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.5._expand_conv
30
tensor([False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False, False,  True, False, False, False,
        False,  True,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
         True, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False,  True,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True,  True, False, False,  True,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
         True,  True, False, False,  True, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True,  True, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False,  True, False, False, False,
         True, False, False, False,  True, False, False, False,  True, False,
        False, False, False,  True, False, False,  True, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False,  True, False,
         True, False, False, False,  True, False,  True, False, False,  True,
         True,  True, False, False, False,  True, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False,  True, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False])
torch.Size([784])
torch.Size([104])
backbone.blocks.4.5._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.5._project_conv (Conv2d(104, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.5._project_conv (Conv2d(104, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.4.5._project_conv
28
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([160])
torch.Size([160])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 104, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 104, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 104, 10, 10]           2,600           2,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 9,368,674
Trainable params: 9,368,674
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.207211, Validation Loss: 0.286410, Training Accuracy: 0.977093, Validation Accuracy: 0.922129
Validation loss decreased (inf --> 0.286410).  Saving model ...
Epoch: 2, Training Loss: 0.217510, Validation Loss: 0.295380, Training Accuracy: 0.974790, Validation Accuracy: 0.924556
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.207434, Validation Loss: 0.304707, Training Accuracy: 0.978027, Validation Accuracy: 0.925490
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.213492, Validation Loss: 0.295767, Training Accuracy: 0.975599, Validation Accuracy: 0.923249
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.207831, Validation Loss: 0.307867, Training Accuracy: 0.976720, Validation Accuracy: 0.920822
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.203048, Validation Loss: 0.288114, Training Accuracy: 0.980828, Validation Accuracy: 0.926050
EarlyStopping counter: 5 out of 10
Epoch: 7, Training Loss: 0.209038, Validation Loss: 0.291164, Training Accuracy: 0.978960, Validation Accuracy: 0.924930
EarlyStopping counter: 6 out of 10
Epoch: 8, Training Loss: 0.204138, Validation Loss: 0.286815, Training Accuracy: 0.979272, Validation Accuracy: 0.925117
EarlyStopping counter: 7 out of 10
Epoch: 9, Training Loss: 0.199297, Validation Loss: 0.288517, Training Accuracy: 0.980330, Validation Accuracy: 0.926984
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 8 out of 10
Epoch: 10, Training Loss: 0.205522, Validation Loss: 0.289495, Training Accuracy: 0.980454, Validation Accuracy: 0.925490
EarlyStopping counter: 9 out of 10
Epoch: 11, Training Loss: 0.202547, Validation Loss: 0.287546, Training Accuracy: 0.980766, Validation Accuracy: 0.925864
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 11
Ended Training Cycle
backbone.blocks.5.0._expand_conv
187

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.0._expand_conv (Conv2d(160, 773, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.0._expand_conv (Conv2d(160, 773, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=187
[1] prune_out_channels on backbone.blocks.5.0._expand_conv (Conv2d(160, 773, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.0._bn0 (BatchNorm2d(773, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=187
[2] prune_out_channels on backbone.blocks.5.0._bn0 (BatchNorm2d(773, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_14(HardtanhBackward0), #idxs=187
[3] prune_out_channels on _ElementWiseOp_14(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(773, 773, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=773, bias=False)), #idxs=187
[4] prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(773, 773, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=773, bias=False)) => prune_out_channels on backbone.blocks.5.0._bn1 (BatchNorm2d(773, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=187
[5] prune_out_channels on backbone.blocks.5.0._bn1 (BatchNorm2d(773, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_13(HardtanhBackward0), #idxs=187
[6] prune_out_channels on _ElementWiseOp_13(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.0._project_conv (Conv2d(773, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=187
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.0._expand_conv
27
tensor([False,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True, False,  True,  True, False,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True, False, False,  True, False,  True,  True,  True,
         True, False, False,  True, False, False,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True, False, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
         True,  True, False,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True, False, False,  True,
         True,  True, False,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True, False,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True, False,  True,
         True, False, False, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False, False,  True, False, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True, False,  True,
        False, False, False,  True,  True,  True,  True,  True,  True, False,
        False,  True, False, False, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True, False, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True, False,  True, False,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([773])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.0._depthwise_conv
26
tensor([False,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True, False,  True,  True, False,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True, False, False,  True, False,  True,  True,  True,
         True, False, False,  True, False, False,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True, False, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
         True,  True, False,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True, False, False,  True,
         True,  True, False,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True, False,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True, False,  True,
         True, False, False, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False, False,  True, False, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True, False,  True,
        False, False, False,  True,  True,  True,  True,  True,  True, False,
        False,  True, False, False, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True, False, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True, False,  True, False,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([773])
backbone.blocks.5.0._depthwise_conv
73
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(700, 700, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=700, bias=False)) => prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(700, 700, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=700, bias=False)), #idxs=73
[1] prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(700, 700, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=700, bias=False)) => prune_out_channels on _ElementWiseOp_14(HardtanhBackward0), #idxs=73
[2] prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(700, 700, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=700, bias=False)) => prune_out_channels on backbone.blocks.5.0._bn1 (BatchNorm2d(700, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=73
[3] prune_out_channels on backbone.blocks.5.0._bn1 (BatchNorm2d(700, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_13(HardtanhBackward0), #idxs=73
[4] prune_out_channels on _ElementWiseOp_13(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.0._project_conv (Conv2d(700, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=73
[5] prune_out_channels on _ElementWiseOp_14(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.0._bn0 (BatchNorm2d(700, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=73
[6] prune_out_channels on backbone.blocks.5.0._bn0 (BatchNorm2d(700, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.0._expand_conv (Conv2d(160, 700, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=73
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.0._depthwise_conv
26
tensor([ True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True])
torch.Size([773])
torch.Size([700])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.0._expand_conv
27
tensor([ True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True])
torch.Size([773])
torch.Size([700])
backbone.blocks.5.0._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(700, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(700, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.0._project_conv
25
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([272])
torch.Size([272])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 104, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 104, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 104, 10, 10]           2,600           2,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 700, 10, 10]         112,000         112,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 700, 10, 10]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 700, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 700, 5, 5]          17,500          17,500
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 700, 5, 5]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         190,400         190,400
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 9,248,814
Trainable params: 9,248,814
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.217626, Validation Loss: 0.303685, Training Accuracy: 0.973296, Validation Accuracy: 0.919888
Validation loss decreased (inf --> 0.303685).  Saving model ...
Epoch: 2, Training Loss: 0.212796, Validation Loss: 0.320094, Training Accuracy: 0.977280, Validation Accuracy: 0.912792
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.216681, Validation Loss: 0.296372, Training Accuracy: 0.975599, Validation Accuracy: 0.920822
Validation loss decreased (0.303685 --> 0.296372).  Saving model ...
Epoch: 4, Training Loss: 0.219858, Validation Loss: 0.302549, Training Accuracy: 0.974479, Validation Accuracy: 0.919888
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.218889, Validation Loss: 0.308591, Training Accuracy: 0.971989, Validation Accuracy: 0.916900
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.209545, Validation Loss: 0.295087, Training Accuracy: 0.978774, Validation Accuracy: 0.923249
Validation loss decreased (0.296372 --> 0.295087).  Saving model ...
Epoch: 7, Training Loss: 0.207590, Validation Loss: 0.292531, Training Accuracy: 0.979832, Validation Accuracy: 0.923249
Validation loss decreased (0.295087 --> 0.292531).  Saving model ...
Epoch: 8, Training Loss: 0.210788, Validation Loss: 0.294868, Training Accuracy: 0.975910, Validation Accuracy: 0.922876
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.212087, Validation Loss: 0.294434, Training Accuracy: 0.978027, Validation Accuracy: 0.921569
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.209218, Validation Loss: 0.292225, Training Accuracy: 0.978400, Validation Accuracy: 0.921755
Validation loss decreased (0.292531 --> 0.292225).  Saving model ...
Epoch: 11, Training Loss: 0.206061, Validation Loss: 0.291124, Training Accuracy: 0.979209, Validation Accuracy: 0.923623
Epoch 00011: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.292225 --> 0.291124).  Saving model ...
Epoch: 12, Training Loss: 0.208202, Validation Loss: 0.292229, Training Accuracy: 0.978711, Validation Accuracy: 0.922689
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.205947, Validation Loss: 0.292783, Training Accuracy: 0.979832, Validation Accuracy: 0.922876
EarlyStopping counter: 2 out of 10
Epoch: 14, Training Loss: 0.207902, Validation Loss: 0.292031, Training Accuracy: 0.979023, Validation Accuracy: 0.922316
EarlyStopping counter: 3 out of 10
Epoch: 15, Training Loss: 0.211837, Validation Loss: 0.293238, Training Accuracy: 0.977218, Validation Accuracy: 0.922876
Epoch 00015: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 4 out of 10
Epoch: 16, Training Loss: 0.206424, Validation Loss: 0.292490, Training Accuracy: 0.980143, Validation Accuracy: 0.922316
EarlyStopping counter: 5 out of 10
Epoch: 17, Training Loss: 0.207404, Validation Loss: 0.292335, Training Accuracy: 0.978089, Validation Accuracy: 0.922876
EarlyStopping counter: 6 out of 10
Epoch: 18, Training Loss: 0.200817, Validation Loss: 0.292620, Training Accuracy: 0.980268, Validation Accuracy: 0.923063
EarlyStopping counter: 7 out of 10
Epoch: 19, Training Loss: 0.208641, Validation Loss: 0.292443, Training Accuracy: 0.978400, Validation Accuracy: 0.922316
EarlyStopping counter: 8 out of 10
Epoch: 20, Training Loss: 0.206755, Validation Loss: 0.292190, Training Accuracy: 0.977902, Validation Accuracy: 0.923063
EarlyStopping counter: 9 out of 10
Epoch: 21, Training Loss: 0.203581, Validation Loss: 0.292986, Training Accuracy: 0.980330, Validation Accuracy: 0.922876
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 21
Ended Training Cycle
backbone.blocks.5.1._expand_conv
309

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.1._expand_conv (Conv2d(272, 1323, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.1._expand_conv (Conv2d(272, 1323, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=309
[1] prune_out_channels on backbone.blocks.5.1._expand_conv (Conv2d(272, 1323, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.1._bn0 (BatchNorm2d(1323, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=309
[2] prune_out_channels on backbone.blocks.5.1._bn0 (BatchNorm2d(1323, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_74(HardtanhBackward0), #idxs=309
[3] prune_out_channels on _ElementWiseOp_74(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(1323, 1323, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1323, bias=False)), #idxs=309
[4] prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(1323, 1323, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1323, bias=False)) => prune_out_channels on backbone.blocks.5.1._bn1 (BatchNorm2d(1323, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=309
[5] prune_out_channels on backbone.blocks.5.1._bn1 (BatchNorm2d(1323, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_73(HardtanhBackward0), #idxs=309
[6] prune_out_channels on _ElementWiseOp_73(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.1._project_conv (Conv2d(1323, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=309
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.1._expand_conv
24
tensor([ True,  True, False,  ...,  True,  True,  True])
torch.Size([1632])
torch.Size([1323])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.1._depthwise_conv
23
tensor([ True,  True, False,  ...,  True,  True,  True])
torch.Size([1632])
torch.Size([1323])
backbone.blocks.5.1._depthwise_conv
1222
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(101, 101, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=101, bias=False)) => prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(101, 101, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=101, bias=False)), #idxs=1222
[1] prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(101, 101, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=101, bias=False)) => prune_out_channels on _ElementWiseOp_74(HardtanhBackward0), #idxs=1222
[2] prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(101, 101, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=101, bias=False)) => prune_out_channels on backbone.blocks.5.1._bn1 (BatchNorm2d(101, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1222
[3] prune_out_channels on backbone.blocks.5.1._bn1 (BatchNorm2d(101, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_73(HardtanhBackward0), #idxs=1222
[4] prune_out_channels on _ElementWiseOp_73(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.1._project_conv (Conv2d(101, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1222
[5] prune_out_channels on _ElementWiseOp_74(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.1._bn0 (BatchNorm2d(101, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1222
[6] prune_out_channels on backbone.blocks.5.1._bn0 (BatchNorm2d(101, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.1._expand_conv (Conv2d(272, 101, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1222
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.1._depthwise_conv
23
tensor([False, False, False,  ..., False, False, False])
torch.Size([1323])
torch.Size([101])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.1._expand_conv
24
tensor([False, False, False,  ..., False, False, False])
torch.Size([1323])
torch.Size([101])
backbone.blocks.5.1._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(101, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(101, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.1._project_conv
22
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([272])
torch.Size([272])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 104, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 104, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 104, 10, 10]           2,600           2,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 700, 10, 10]         112,000         112,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 700, 10, 10]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 700, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 700, 5, 5]          17,500          17,500
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 700, 5, 5]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         190,400         190,400
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156       [1, 101, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158       [1, 101, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159       [1, 101, 5, 5]           2,525           2,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 8,371,551
Trainable params: 8,371,551
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.217420, Validation Loss: 0.310054, Training Accuracy: 0.974354, Validation Accuracy: 0.915219
Validation loss decreased (inf --> 0.310054).  Saving model ...
Epoch: 2, Training Loss: 0.217274, Validation Loss: 0.305524, Training Accuracy: 0.974665, Validation Accuracy: 0.919328
Validation loss decreased (0.310054 --> 0.305524).  Saving model ...
Epoch: 3, Training Loss: 0.216973, Validation Loss: 0.300047, Training Accuracy: 0.975973, Validation Accuracy: 0.919701
Validation loss decreased (0.305524 --> 0.300047).  Saving model ...
Epoch: 4, Training Loss: 0.216080, Validation Loss: 0.315114, Training Accuracy: 0.975724, Validation Accuracy: 0.915593
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.214659, Validation Loss: 0.303740, Training Accuracy: 0.977218, Validation Accuracy: 0.917834
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.210720, Validation Loss: 0.320205, Training Accuracy: 0.976159, Validation Accuracy: 0.914286
EarlyStopping counter: 3 out of 10
Epoch: 7, Training Loss: 0.216117, Validation Loss: 0.295431, Training Accuracy: 0.974541, Validation Accuracy: 0.923249
Epoch 00007: reducing learning rate of group 0 to 1.0000e-06.
Validation loss decreased (0.300047 --> 0.295431).  Saving model ...
Epoch: 8, Training Loss: 0.208610, Validation Loss: 0.297165, Training Accuracy: 0.979209, Validation Accuracy: 0.921569
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.208872, Validation Loss: 0.293210, Training Accuracy: 0.980579, Validation Accuracy: 0.922316
Validation loss decreased (0.295431 --> 0.293210).  Saving model ...
Epoch: 10, Training Loss: 0.209008, Validation Loss: 0.295286, Training Accuracy: 0.977716, Validation Accuracy: 0.924183
EarlyStopping counter: 1 out of 10
Epoch: 11, Training Loss: 0.207605, Validation Loss: 0.294343, Training Accuracy: 0.980517, Validation Accuracy: 0.923249
Epoch 00011: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 12, Training Loss: 0.203097, Validation Loss: 0.296230, Training Accuracy: 0.981264, Validation Accuracy: 0.922502
EarlyStopping counter: 3 out of 10
Epoch: 13, Training Loss: 0.207298, Validation Loss: 0.292393, Training Accuracy: 0.980703, Validation Accuracy: 0.924370
Validation loss decreased (0.293210 --> 0.292393).  Saving model ...
Epoch: 14, Training Loss: 0.206232, Validation Loss: 0.294231, Training Accuracy: 0.980952, Validation Accuracy: 0.922129
EarlyStopping counter: 1 out of 10
Epoch: 15, Training Loss: 0.211036, Validation Loss: 0.294290, Training Accuracy: 0.980392, Validation Accuracy: 0.923063
Epoch 00015: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 16, Training Loss: 0.203546, Validation Loss: 0.293868, Training Accuracy: 0.980703, Validation Accuracy: 0.922689
EarlyStopping counter: 3 out of 10
Epoch: 17, Training Loss: 0.204113, Validation Loss: 0.295206, Training Accuracy: 0.981139, Validation Accuracy: 0.922129
EarlyStopping counter: 4 out of 10
Epoch: 18, Training Loss: 0.207366, Validation Loss: 0.294723, Training Accuracy: 0.982073, Validation Accuracy: 0.923249
EarlyStopping counter: 5 out of 10
Epoch: 19, Training Loss: 0.208666, Validation Loss: 0.294873, Training Accuracy: 0.979085, Validation Accuracy: 0.922876
EarlyStopping counter: 6 out of 10
Epoch: 20, Training Loss: 0.207935, Validation Loss: 0.293559, Training Accuracy: 0.981637, Validation Accuracy: 0.922129
EarlyStopping counter: 7 out of 10
Epoch: 21, Training Loss: 0.203300, Validation Loss: 0.296013, Training Accuracy: 0.979707, Validation Accuracy: 0.922316
EarlyStopping counter: 8 out of 10
Epoch: 22, Training Loss: 0.205171, Validation Loss: 0.294503, Training Accuracy: 0.980579, Validation Accuracy: 0.923436
EarlyStopping counter: 9 out of 10
Epoch: 23, Training Loss: 0.205508, Validation Loss: 0.294023, Training Accuracy: 0.980641, Validation Accuracy: 0.923810
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 23
Ended Training Cycle
backbone.blocks.5.2._expand_conv
483

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.2._expand_conv (Conv2d(272, 1149, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.2._expand_conv (Conv2d(272, 1149, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=483
[1] prune_out_channels on backbone.blocks.5.2._expand_conv (Conv2d(272, 1149, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.2._bn0 (BatchNorm2d(1149, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=483
[2] prune_out_channels on backbone.blocks.5.2._bn0 (BatchNorm2d(1149, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_76(HardtanhBackward0), #idxs=483
[3] prune_out_channels on _ElementWiseOp_76(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(1149, 1149, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1149, bias=False)), #idxs=483
[4] prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(1149, 1149, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1149, bias=False)) => prune_out_channels on backbone.blocks.5.2._bn1 (BatchNorm2d(1149, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=483
[5] prune_out_channels on backbone.blocks.5.2._bn1 (BatchNorm2d(1149, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_75(HardtanhBackward0), #idxs=483
[6] prune_out_channels on _ElementWiseOp_75(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.2._project_conv (Conv2d(1149, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=483
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.2._expand_conv
21
tensor([False, False,  True,  ...,  True,  True, False])
torch.Size([1632])
torch.Size([1149])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.2._depthwise_conv
20
tensor([False, False,  True,  ...,  True,  True, False])
torch.Size([1632])
torch.Size([1149])
backbone.blocks.5.2._depthwise_conv
1054
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(95, 95, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=95, bias=False)) => prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(95, 95, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=95, bias=False)), #idxs=1054
[1] prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(95, 95, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=95, bias=False)) => prune_out_channels on _ElementWiseOp_76(HardtanhBackward0), #idxs=1054
[2] prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(95, 95, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=95, bias=False)) => prune_out_channels on backbone.blocks.5.2._bn1 (BatchNorm2d(95, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1054
[3] prune_out_channels on backbone.blocks.5.2._bn1 (BatchNorm2d(95, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_75(HardtanhBackward0), #idxs=1054
[4] prune_out_channels on _ElementWiseOp_75(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.2._project_conv (Conv2d(95, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1054
[5] prune_out_channels on _ElementWiseOp_76(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.2._bn0 (BatchNorm2d(95, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1054
[6] prune_out_channels on backbone.blocks.5.2._bn0 (BatchNorm2d(95, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.2._expand_conv (Conv2d(272, 95, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1054
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.2._depthwise_conv
20
tensor([False, False, False,  ..., False,  True, False])
torch.Size([1149])
torch.Size([95])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.2._expand_conv
21
tensor([False, False, False,  ..., False,  True, False])
torch.Size([1149])
torch.Size([95])
backbone.blocks.5.2._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(95, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(95, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.2._project_conv
19
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([272])
torch.Size([272])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 104, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 104, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 104, 10, 10]           2,600           2,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 700, 10, 10]         112,000         112,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 700, 10, 10]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 700, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 700, 5, 5]          17,500          17,500
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 700, 5, 5]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         190,400         190,400
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156       [1, 101, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158       [1, 101, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159       [1, 101, 5, 5]           2,525           2,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163        [1, 95, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165        [1, 95, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166        [1, 95, 5, 5]           2,375           2,375
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 7,490,850
Trainable params: 7,490,850
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.213226, Validation Loss: 0.302111, Training Accuracy: 0.977280, Validation Accuracy: 0.923436
Validation loss decreased (inf --> 0.302111).  Saving model ...
Epoch: 2, Training Loss: 0.212022, Validation Loss: 0.308679, Training Accuracy: 0.977778, Validation Accuracy: 0.916153
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.210030, Validation Loss: 0.308862, Training Accuracy: 0.978462, Validation Accuracy: 0.916713
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.216193, Validation Loss: 0.331465, Training Accuracy: 0.974977, Validation Accuracy: 0.909804
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.214056, Validation Loss: 0.311571, Training Accuracy: 0.977031, Validation Accuracy: 0.917274
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.206642, Validation Loss: 0.293760, Training Accuracy: 0.978711, Validation Accuracy: 0.925117
Validation loss decreased (0.302111 --> 0.293760).  Saving model ...
Epoch: 7, Training Loss: 0.207343, Validation Loss: 0.293405, Training Accuracy: 0.981388, Validation Accuracy: 0.922316
Validation loss decreased (0.293760 --> 0.293405).  Saving model ...
Epoch: 8, Training Loss: 0.209541, Validation Loss: 0.293456, Training Accuracy: 0.981637, Validation Accuracy: 0.923249
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.204630, Validation Loss: 0.294184, Training Accuracy: 0.982135, Validation Accuracy: 0.923436
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.204179, Validation Loss: 0.296335, Training Accuracy: 0.980454, Validation Accuracy: 0.922689
EarlyStopping counter: 3 out of 10
Epoch: 11, Training Loss: 0.207767, Validation Loss: 0.295051, Training Accuracy: 0.980517, Validation Accuracy: 0.922502
EarlyStopping counter: 4 out of 10
Epoch: 12, Training Loss: 0.204386, Validation Loss: 0.293469, Training Accuracy: 0.981139, Validation Accuracy: 0.923436
EarlyStopping counter: 5 out of 10
Epoch: 13, Training Loss: 0.206529, Validation Loss: 0.292799, Training Accuracy: 0.981201, Validation Accuracy: 0.923249
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
Validation loss decreased (0.293405 --> 0.292799).  Saving model ...
Epoch: 14, Training Loss: 0.208277, Validation Loss: 0.294489, Training Accuracy: 0.980766, Validation Accuracy: 0.922129
EarlyStopping counter: 1 out of 10
Epoch: 15, Training Loss: 0.204409, Validation Loss: 0.294357, Training Accuracy: 0.981326, Validation Accuracy: 0.921942
EarlyStopping counter: 2 out of 10
Epoch: 16, Training Loss: 0.206875, Validation Loss: 0.295018, Training Accuracy: 0.981388, Validation Accuracy: 0.921942
EarlyStopping counter: 3 out of 10
Epoch: 17, Training Loss: 0.208586, Validation Loss: 0.296147, Training Accuracy: 0.978960, Validation Accuracy: 0.922316
EarlyStopping counter: 4 out of 10
Epoch: 18, Training Loss: 0.208102, Validation Loss: 0.295551, Training Accuracy: 0.978960, Validation Accuracy: 0.922689
EarlyStopping counter: 5 out of 10
Epoch: 19, Training Loss: 0.201457, Validation Loss: 0.294530, Training Accuracy: 0.982509, Validation Accuracy: 0.921569
EarlyStopping counter: 6 out of 10
Epoch: 20, Training Loss: 0.206165, Validation Loss: 0.296229, Training Accuracy: 0.981326, Validation Accuracy: 0.923810
EarlyStopping counter: 7 out of 10
Epoch: 21, Training Loss: 0.203736, Validation Loss: 0.294809, Training Accuracy: 0.981762, Validation Accuracy: 0.922129
EarlyStopping counter: 8 out of 10
Epoch: 22, Training Loss: 0.202910, Validation Loss: 0.292944, Training Accuracy: 0.982882, Validation Accuracy: 0.923063
EarlyStopping counter: 9 out of 10
Epoch: 23, Training Loss: 0.207852, Validation Loss: 0.294462, Training Accuracy: 0.979645, Validation Accuracy: 0.922316
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 23
Ended Training Cycle
backbone.blocks.5.3._expand_conv
695

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.3._expand_conv (Conv2d(272, 937, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.3._expand_conv (Conv2d(272, 937, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=695
[1] prune_out_channels on backbone.blocks.5.3._expand_conv (Conv2d(272, 937, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.3._bn0 (BatchNorm2d(937, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=695
[2] prune_out_channels on backbone.blocks.5.3._bn0 (BatchNorm2d(937, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_78(HardtanhBackward0), #idxs=695
[3] prune_out_channels on _ElementWiseOp_78(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(937, 937, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=937, bias=False)), #idxs=695
[4] prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(937, 937, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=937, bias=False)) => prune_out_channels on backbone.blocks.5.3._bn1 (BatchNorm2d(937, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=695
[5] prune_out_channels on backbone.blocks.5.3._bn1 (BatchNorm2d(937, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_77(HardtanhBackward0), #idxs=695
[6] prune_out_channels on _ElementWiseOp_77(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.3._project_conv (Conv2d(937, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=695
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.3._expand_conv
18
tensor([ True, False,  True,  ..., False, False, False])
torch.Size([1632])
torch.Size([937])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.3._depthwise_conv
17
tensor([ True, False,  True,  ..., False, False, False])
torch.Size([1632])
torch.Size([937])
backbone.blocks.5.3._depthwise_conv
857
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(80, 80, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=80, bias=False)) => prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(80, 80, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=80, bias=False)), #idxs=857
[1] prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(80, 80, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=80, bias=False)) => prune_out_channels on _ElementWiseOp_78(HardtanhBackward0), #idxs=857
[2] prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(80, 80, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=80, bias=False)) => prune_out_channels on backbone.blocks.5.3._bn1 (BatchNorm2d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=857
[3] prune_out_channels on backbone.blocks.5.3._bn1 (BatchNorm2d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_77(HardtanhBackward0), #idxs=857
[4] prune_out_channels on _ElementWiseOp_77(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.3._project_conv (Conv2d(80, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=857
[5] prune_out_channels on _ElementWiseOp_78(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.3._bn0 (BatchNorm2d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=857
[6] prune_out_channels on backbone.blocks.5.3._bn0 (BatchNorm2d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.3._expand_conv (Conv2d(272, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=857
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.3._depthwise_conv
17
tensor([False,  True, False, False, False, False, False, False,  True,  True,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False])
torch.Size([937])
torch.Size([80])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.3._expand_conv
18
tensor([False,  True, False, False, False, False, False, False,  True,  True,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False,  True, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True,  True,  True, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False,  True, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True,  True,  True, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False,  True, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True,  True, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False])
torch.Size([937])
torch.Size([80])
backbone.blocks.5.3._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(80, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(80, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.3._project_conv
16
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([272])
torch.Size([272])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 104, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 104, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 104, 10, 10]           2,600           2,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 700, 10, 10]         112,000         112,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 700, 10, 10]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 700, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 700, 5, 5]          17,500          17,500
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 700, 5, 5]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         190,400         190,400
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156       [1, 101, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158       [1, 101, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159       [1, 101, 5, 5]           2,525           2,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163        [1, 95, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165        [1, 95, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166        [1, 95, 5, 5]           2,375           2,375
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170        [1, 80, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172        [1, 80, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173        [1, 80, 5, 5]           2,000           2,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 6,601,554
Trainable params: 6,601,554
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.210969, Validation Loss: 0.304986, Training Accuracy: 0.978089, Validation Accuracy: 0.920635
Validation loss decreased (inf --> 0.304986).  Saving model ...
Epoch: 2, Training Loss: 0.210394, Validation Loss: 0.297465, Training Accuracy: 0.977155, Validation Accuracy: 0.924183
Validation loss decreased (0.304986 --> 0.297465).  Saving model ...
Epoch: 3, Training Loss: 0.215798, Validation Loss: 0.307540, Training Accuracy: 0.976844, Validation Accuracy: 0.918954
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.216337, Validation Loss: 0.291088, Training Accuracy: 0.976159, Validation Accuracy: 0.921008
Validation loss decreased (0.297465 --> 0.291088).  Saving model ...
Epoch: 5, Training Loss: 0.215865, Validation Loss: 0.293701, Training Accuracy: 0.976408, Validation Accuracy: 0.922316
EarlyStopping counter: 1 out of 10
Epoch: 6, Training Loss: 0.215321, Validation Loss: 0.319650, Training Accuracy: 0.977778, Validation Accuracy: 0.915033
EarlyStopping counter: 2 out of 10
Epoch: 7, Training Loss: 0.212469, Validation Loss: 0.315128, Training Accuracy: 0.979583, Validation Accuracy: 0.920261
EarlyStopping counter: 3 out of 10
Epoch: 8, Training Loss: 0.211549, Validation Loss: 0.318206, Training Accuracy: 0.978338, Validation Accuracy: 0.920822
Epoch 00008: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 9, Training Loss: 0.208570, Validation Loss: 0.299588, Training Accuracy: 0.980828, Validation Accuracy: 0.921755
EarlyStopping counter: 5 out of 10
Epoch: 10, Training Loss: 0.208566, Validation Loss: 0.297802, Training Accuracy: 0.981450, Validation Accuracy: 0.921569
EarlyStopping counter: 6 out of 10
Epoch: 11, Training Loss: 0.206574, Validation Loss: 0.298721, Training Accuracy: 0.982633, Validation Accuracy: 0.923249
EarlyStopping counter: 7 out of 10
Epoch: 12, Training Loss: 0.206189, Validation Loss: 0.298178, Training Accuracy: 0.981077, Validation Accuracy: 0.923623
Epoch 00012: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 8 out of 10
Epoch: 13, Training Loss: 0.209991, Validation Loss: 0.297050, Training Accuracy: 0.981388, Validation Accuracy: 0.924556
EarlyStopping counter: 9 out of 10
Epoch: 14, Training Loss: 0.206851, Validation Loss: 0.297475, Training Accuracy: 0.980952, Validation Accuracy: 0.922689
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 14
Ended Training Cycle
backbone.blocks.5.4._expand_conv
848

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.4._expand_conv (Conv2d(272, 784, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.4._expand_conv (Conv2d(272, 784, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=848
[1] prune_out_channels on backbone.blocks.5.4._expand_conv (Conv2d(272, 784, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.4._bn0 (BatchNorm2d(784, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=848
[2] prune_out_channels on backbone.blocks.5.4._bn0 (BatchNorm2d(784, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_80(HardtanhBackward0), #idxs=848
[3] prune_out_channels on _ElementWiseOp_80(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(784, 784, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=784, bias=False)), #idxs=848
[4] prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(784, 784, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=784, bias=False)) => prune_out_channels on backbone.blocks.5.4._bn1 (BatchNorm2d(784, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=848
[5] prune_out_channels on backbone.blocks.5.4._bn1 (BatchNorm2d(784, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_79(HardtanhBackward0), #idxs=848
[6] prune_out_channels on _ElementWiseOp_79(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.4._project_conv (Conv2d(784, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=848
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.4._expand_conv
15
tensor([False,  True,  True,  ..., False,  True,  True])
torch.Size([1632])
torch.Size([784])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.4._depthwise_conv
14
tensor([False,  True,  True,  ..., False,  True,  True])
torch.Size([1632])
torch.Size([784])
backbone.blocks.5.4._depthwise_conv
712
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(72, 72, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=72, bias=False)) => prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(72, 72, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=72, bias=False)), #idxs=712
[1] prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(72, 72, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=72, bias=False)) => prune_out_channels on _ElementWiseOp_80(HardtanhBackward0), #idxs=712
[2] prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(72, 72, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=72, bias=False)) => prune_out_channels on backbone.blocks.5.4._bn1 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=712
[3] prune_out_channels on backbone.blocks.5.4._bn1 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_79(HardtanhBackward0), #idxs=712
[4] prune_out_channels on _ElementWiseOp_79(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.4._project_conv (Conv2d(72, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=712
[5] prune_out_channels on _ElementWiseOp_80(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.4._bn0 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=712
[6] prune_out_channels on backbone.blocks.5.4._bn0 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.4._expand_conv (Conv2d(272, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=712
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.4._depthwise_conv
14
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False,  True, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
         True,  True,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False])
torch.Size([784])
torch.Size([72])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.4._expand_conv
15
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False,  True, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False,  True, False, False, False, False,  True, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False, False, False, False, False,  True,
         True,  True,  True, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False, False, False,  True,
        False,  True,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False])
torch.Size([784])
torch.Size([72])
backbone.blocks.5.4._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(72, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(72, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.4._project_conv
13
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([272])
torch.Size([272])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 104, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 104, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 104, 10, 10]           2,600           2,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 700, 10, 10]         112,000         112,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 700, 10, 10]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 700, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 700, 5, 5]          17,500          17,500
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 700, 5, 5]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         190,400         190,400
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156       [1, 101, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158       [1, 101, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159       [1, 101, 5, 5]           2,525           2,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163        [1, 95, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165        [1, 95, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166        [1, 95, 5, 5]           2,375           2,375
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170        [1, 80, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172        [1, 80, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173        [1, 80, 5, 5]           2,000           2,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177        [1, 72, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179        [1, 72, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180        [1, 72, 5, 5]           1,800           1,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 5,707,674
Trainable params: 5,707,674
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.214214, Validation Loss: 0.309837, Training Accuracy: 0.977467, Validation Accuracy: 0.923249
Validation loss decreased (inf --> 0.309837).  Saving model ...
Epoch: 2, Training Loss: 0.211526, Validation Loss: 0.308331, Training Accuracy: 0.978276, Validation Accuracy: 0.920261
Validation loss decreased (0.309837 --> 0.308331).  Saving model ...
Epoch: 3, Training Loss: 0.216227, Validation Loss: 0.303357, Training Accuracy: 0.977155, Validation Accuracy: 0.921569
Validation loss decreased (0.308331 --> 0.303357).  Saving model ...
Epoch: 4, Training Loss: 0.211681, Validation Loss: 0.328805, Training Accuracy: 0.978089, Validation Accuracy: 0.913725
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.214301, Validation Loss: 0.318024, Training Accuracy: 0.977155, Validation Accuracy: 0.917274
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.207744, Validation Loss: 0.298631, Training Accuracy: 0.980952, Validation Accuracy: 0.922129
Validation loss decreased (0.303357 --> 0.298631).  Saving model ...
Epoch: 7, Training Loss: 0.206388, Validation Loss: 0.301013, Training Accuracy: 0.980952, Validation Accuracy: 0.921569
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.206706, Validation Loss: 0.298874, Training Accuracy: 0.980454, Validation Accuracy: 0.921382
EarlyStopping counter: 2 out of 10
Epoch: 9, Training Loss: 0.203050, Validation Loss: 0.297098, Training Accuracy: 0.982571, Validation Accuracy: 0.922876
Validation loss decreased (0.298631 --> 0.297098).  Saving model ...
Epoch: 10, Training Loss: 0.207491, Validation Loss: 0.302413, Training Accuracy: 0.981824, Validation Accuracy: 0.922129
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 1 out of 10
Epoch: 11, Training Loss: 0.202437, Validation Loss: 0.299649, Training Accuracy: 0.982135, Validation Accuracy: 0.922689
EarlyStopping counter: 2 out of 10
Epoch: 12, Training Loss: 0.201018, Validation Loss: 0.300827, Training Accuracy: 0.982384, Validation Accuracy: 0.922689
EarlyStopping counter: 3 out of 10
Epoch: 13, Training Loss: 0.202979, Validation Loss: 0.297853, Training Accuracy: 0.982135, Validation Accuracy: 0.923249
EarlyStopping counter: 4 out of 10
Epoch: 14, Training Loss: 0.208646, Validation Loss: 0.297748, Training Accuracy: 0.981513, Validation Accuracy: 0.922689
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 5 out of 10
Epoch: 15, Training Loss: 0.205939, Validation Loss: 0.296959, Training Accuracy: 0.983567, Validation Accuracy: 0.921942
Validation loss decreased (0.297098 --> 0.296959).  Saving model ...
Epoch: 16, Training Loss: 0.204188, Validation Loss: 0.300120, Training Accuracy: 0.982260, Validation Accuracy: 0.923063
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.206050, Validation Loss: 0.300772, Training Accuracy: 0.983069, Validation Accuracy: 0.922316
EarlyStopping counter: 2 out of 10
Epoch: 18, Training Loss: 0.209201, Validation Loss: 0.301032, Training Accuracy: 0.979832, Validation Accuracy: 0.922502
EarlyStopping counter: 3 out of 10
Epoch: 19, Training Loss: 0.200638, Validation Loss: 0.299427, Training Accuracy: 0.983940, Validation Accuracy: 0.923810
EarlyStopping counter: 4 out of 10
Epoch: 20, Training Loss: 0.210158, Validation Loss: 0.298211, Training Accuracy: 0.981264, Validation Accuracy: 0.922129
EarlyStopping counter: 5 out of 10
Epoch: 21, Training Loss: 0.203813, Validation Loss: 0.298315, Training Accuracy: 0.982509, Validation Accuracy: 0.922129
EarlyStopping counter: 6 out of 10
Epoch: 22, Training Loss: 0.206297, Validation Loss: 0.299263, Training Accuracy: 0.981388, Validation Accuracy: 0.922876
EarlyStopping counter: 7 out of 10
Epoch: 23, Training Loss: 0.204462, Validation Loss: 0.300287, Training Accuracy: 0.981450, Validation Accuracy: 0.922316
EarlyStopping counter: 8 out of 10
Epoch: 24, Training Loss: 0.201041, Validation Loss: 0.299044, Training Accuracy: 0.983318, Validation Accuracy: 0.922689
EarlyStopping counter: 9 out of 10
Epoch: 25, Training Loss: 0.205333, Validation Loss: 0.298198, Training Accuracy: 0.981824, Validation Accuracy: 0.923063
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 25
Ended Training Cycle
backbone.blocks.5.5._expand_conv
972

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.5._expand_conv (Conv2d(272, 660, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.5._expand_conv (Conv2d(272, 660, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=972
[1] prune_out_channels on backbone.blocks.5.5._expand_conv (Conv2d(272, 660, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.5._bn0 (BatchNorm2d(660, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=972
[2] prune_out_channels on backbone.blocks.5.5._bn0 (BatchNorm2d(660, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_82(HardtanhBackward0), #idxs=972
[3] prune_out_channels on _ElementWiseOp_82(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(660, 660, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=660, bias=False)), #idxs=972
[4] prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(660, 660, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=660, bias=False)) => prune_out_channels on backbone.blocks.5.5._bn1 (BatchNorm2d(660, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=972
[5] prune_out_channels on backbone.blocks.5.5._bn1 (BatchNorm2d(660, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_81(HardtanhBackward0), #idxs=972
[6] prune_out_channels on _ElementWiseOp_81(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.5._project_conv (Conv2d(660, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=972
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.5._expand_conv
12
tensor([False, False, False,  ...,  True,  True, False])
torch.Size([1632])
torch.Size([660])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.5._depthwise_conv
11
tensor([False, False, False,  ...,  True,  True, False])
torch.Size([1632])
torch.Size([660])
backbone.blocks.5.5._depthwise_conv
583
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(77, 77, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=77, bias=False)) => prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(77, 77, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=77, bias=False)), #idxs=583
[1] prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(77, 77, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=77, bias=False)) => prune_out_channels on _ElementWiseOp_82(HardtanhBackward0), #idxs=583
[2] prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(77, 77, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=77, bias=False)) => prune_out_channels on backbone.blocks.5.5._bn1 (BatchNorm2d(77, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=583
[3] prune_out_channels on backbone.blocks.5.5._bn1 (BatchNorm2d(77, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_81(HardtanhBackward0), #idxs=583
[4] prune_out_channels on _ElementWiseOp_81(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.5._project_conv (Conv2d(77, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=583
[5] prune_out_channels on _ElementWiseOp_82(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.5._bn0 (BatchNorm2d(77, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=583
[6] prune_out_channels on backbone.blocks.5.5._bn0 (BatchNorm2d(77, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.5._expand_conv (Conv2d(272, 77, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=583
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.5._depthwise_conv
11
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True,  True,  True, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False])
torch.Size([660])
torch.Size([77])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.5._expand_conv
12
tensor([ True, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False,  True, False, False,  True, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
         True, False, False, False, False, False,  True, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False,  True, False, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False,  True,
        False, False, False,  True,  True,  True, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True, False,  True, False,  True, False, False, False, False,
        False, False, False, False,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False,  True, False, False,
        False,  True, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False,  True, False, False,
         True, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False])
torch.Size([660])
torch.Size([77])
backbone.blocks.5.5._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(77, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(77, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.5._project_conv
10
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([272])
torch.Size([272])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 104, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 104, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 104, 10, 10]           2,600           2,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 700, 10, 10]         112,000         112,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 700, 10, 10]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 700, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 700, 5, 5]          17,500          17,500
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 700, 5, 5]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         190,400         190,400
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156       [1, 101, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158       [1, 101, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159       [1, 101, 5, 5]           2,525           2,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163        [1, 95, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165        [1, 95, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166        [1, 95, 5, 5]           2,375           2,375
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170        [1, 80, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172        [1, 80, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173        [1, 80, 5, 5]           2,000           2,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177        [1, 72, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179        [1, 72, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180        [1, 72, 5, 5]           1,800           1,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184        [1, 77, 5, 5]          20,944          20,944
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185        [1, 77, 5, 5]             154             154
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186        [1, 77, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187        [1, 77, 5, 5]           1,925           1,925
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188        [1, 77, 5, 5]             154             154
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]          20,944          20,944
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 4,816,659
Trainable params: 4,816,659
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.215243, Validation Loss: 0.302235, Training Accuracy: 0.978462, Validation Accuracy: 0.924183
Validation loss decreased (inf --> 0.302235).  Saving model ...
Epoch: 2, Training Loss: 0.208962, Validation Loss: 0.313180, Training Accuracy: 0.978836, Validation Accuracy: 0.915219
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.209291, Validation Loss: 0.307322, Training Accuracy: 0.979583, Validation Accuracy: 0.920635
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.217011, Validation Loss: 0.328813, Training Accuracy: 0.978089, Validation Accuracy: 0.915780
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.210962, Validation Loss: 0.307846, Training Accuracy: 0.978898, Validation Accuracy: 0.923063
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.214079, Validation Loss: 0.299517, Training Accuracy: 0.980766, Validation Accuracy: 0.923436
Validation loss decreased (0.302235 --> 0.299517).  Saving model ...
Epoch: 7, Training Loss: 0.205638, Validation Loss: 0.300683, Training Accuracy: 0.982758, Validation Accuracy: 0.921942
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.207745, Validation Loss: 0.299326, Training Accuracy: 0.982509, Validation Accuracy: 0.923063
Validation loss decreased (0.299517 --> 0.299326).  Saving model ...
Epoch: 9, Training Loss: 0.208891, Validation Loss: 0.299429, Training Accuracy: 0.981948, Validation Accuracy: 0.922502
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 1 out of 10
Epoch: 10, Training Loss: 0.207667, Validation Loss: 0.300574, Training Accuracy: 0.981388, Validation Accuracy: 0.922502
EarlyStopping counter: 2 out of 10
Epoch: 11, Training Loss: 0.206542, Validation Loss: 0.298797, Training Accuracy: 0.981264, Validation Accuracy: 0.923249
Validation loss decreased (0.299326 --> 0.298797).  Saving model ...
Epoch: 12, Training Loss: 0.206140, Validation Loss: 0.300347, Training Accuracy: 0.983131, Validation Accuracy: 0.923623
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.206847, Validation Loss: 0.300168, Training Accuracy: 0.982011, Validation Accuracy: 0.922876
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 14, Training Loss: 0.206765, Validation Loss: 0.300402, Training Accuracy: 0.981575, Validation Accuracy: 0.923063
EarlyStopping counter: 3 out of 10
Epoch: 15, Training Loss: 0.207061, Validation Loss: 0.299557, Training Accuracy: 0.981264, Validation Accuracy: 0.923810
EarlyStopping counter: 4 out of 10
Epoch: 16, Training Loss: 0.203640, Validation Loss: 0.302982, Training Accuracy: 0.983505, Validation Accuracy: 0.922876
EarlyStopping counter: 5 out of 10
Epoch: 17, Training Loss: 0.205290, Validation Loss: 0.301058, Training Accuracy: 0.982384, Validation Accuracy: 0.922316
EarlyStopping counter: 6 out of 10
Epoch: 18, Training Loss: 0.207108, Validation Loss: 0.300920, Training Accuracy: 0.980392, Validation Accuracy: 0.923063
EarlyStopping counter: 7 out of 10
Epoch: 19, Training Loss: 0.204657, Validation Loss: 0.301076, Training Accuracy: 0.983256, Validation Accuracy: 0.921942
EarlyStopping counter: 8 out of 10
Epoch: 20, Training Loss: 0.199090, Validation Loss: 0.301819, Training Accuracy: 0.983567, Validation Accuracy: 0.922129
EarlyStopping counter: 9 out of 10
Epoch: 21, Training Loss: 0.205155, Validation Loss: 0.299095, Training Accuracy: 0.983567, Validation Accuracy: 0.922876
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 21
Ended Training Cycle
backbone.blocks.5.6._expand_conv
1011

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.6._expand_conv (Conv2d(272, 621, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.6._expand_conv (Conv2d(272, 621, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1011
[1] prune_out_channels on backbone.blocks.5.6._expand_conv (Conv2d(272, 621, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.6._bn0 (BatchNorm2d(621, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1011
[2] prune_out_channels on backbone.blocks.5.6._bn0 (BatchNorm2d(621, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_84(HardtanhBackward0), #idxs=1011
[3] prune_out_channels on _ElementWiseOp_84(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(621, 621, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=621, bias=False)), #idxs=1011
[4] prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(621, 621, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=621, bias=False)) => prune_out_channels on backbone.blocks.5.6._bn1 (BatchNorm2d(621, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1011
[5] prune_out_channels on backbone.blocks.5.6._bn1 (BatchNorm2d(621, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_83(HardtanhBackward0), #idxs=1011
[6] prune_out_channels on _ElementWiseOp_83(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.6._project_conv (Conv2d(621, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1011
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.6._expand_conv
9
tensor([False, False, False,  ..., False, False,  True])
torch.Size([1632])
torch.Size([621])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.6._depthwise_conv
8
tensor([False, False, False,  ..., False, False,  True])
torch.Size([1632])
torch.Size([621])
backbone.blocks.5.6._depthwise_conv
557
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=64, bias=False)) => prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=64, bias=False)), #idxs=557
[1] prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=64, bias=False)) => prune_out_channels on _ElementWiseOp_84(HardtanhBackward0), #idxs=557
[2] prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=64, bias=False)) => prune_out_channels on backbone.blocks.5.6._bn1 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=557
[3] prune_out_channels on backbone.blocks.5.6._bn1 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_83(HardtanhBackward0), #idxs=557
[4] prune_out_channels on _ElementWiseOp_83(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.6._project_conv (Conv2d(64, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=557
[5] prune_out_channels on _ElementWiseOp_84(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.6._bn0 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=557
[6] prune_out_channels on backbone.blocks.5.6._bn0 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.6._expand_conv (Conv2d(272, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=557
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.6._depthwise_conv
8
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False])
torch.Size([621])
torch.Size([64])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.6._expand_conv
9
tensor([False, False, False,  True, False, False, False, False, False, False,
        False, False,  True,  True, False, False, False, False, False,  True,
         True, False, False, False, False, False, False,  True,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False, False, False,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True,  True, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True,  True,  True, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False,  True,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False,  True, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False,  True, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False,  True, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
        False, False,  True, False,  True, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False])
torch.Size([621])
torch.Size([64])
backbone.blocks.5.6._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(64, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(64, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.6._project_conv
7
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([272])
torch.Size([272])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 104, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 104, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 104, 10, 10]           2,600           2,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 700, 10, 10]         112,000         112,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 700, 10, 10]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 700, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 700, 5, 5]          17,500          17,500
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 700, 5, 5]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         190,400         190,400
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156       [1, 101, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158       [1, 101, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159       [1, 101, 5, 5]           2,525           2,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163        [1, 95, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165        [1, 95, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166        [1, 95, 5, 5]           2,375           2,375
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170        [1, 80, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172        [1, 80, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173        [1, 80, 5, 5]           2,000           2,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177        [1, 72, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179        [1, 72, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180        [1, 72, 5, 5]           1,800           1,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184        [1, 77, 5, 5]          20,944          20,944
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185        [1, 77, 5, 5]             154             154
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186        [1, 77, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187        [1, 77, 5, 5]           1,925           1,925
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188        [1, 77, 5, 5]             154             154
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]          20,944          20,944
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191        [1, 64, 5, 5]          17,408          17,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192        [1, 64, 5, 5]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193        [1, 64, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194        [1, 64, 5, 5]           1,600           1,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195        [1, 64, 5, 5]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]          17,408          17,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 3,918,195
Trainable params: 3,918,195
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.215196, Validation Loss: 0.307666, Training Accuracy: 0.977342, Validation Accuracy: 0.921755
Validation loss decreased (inf --> 0.307666).  Saving model ...
Epoch: 2, Training Loss: 0.213694, Validation Loss: 0.327377, Training Accuracy: 0.979832, Validation Accuracy: 0.914099
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.214882, Validation Loss: 0.305760, Training Accuracy: 0.976969, Validation Accuracy: 0.918954
Validation loss decreased (0.307666 --> 0.305760).  Saving model ...
Epoch: 4, Training Loss: 0.217860, Validation Loss: 0.307539, Training Accuracy: 0.979458, Validation Accuracy: 0.919701
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.217953, Validation Loss: 0.312939, Training Accuracy: 0.978462, Validation Accuracy: 0.918768
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.204893, Validation Loss: 0.303739, Training Accuracy: 0.982695, Validation Accuracy: 0.920635
Validation loss decreased (0.305760 --> 0.303739).  Saving model ...
Epoch: 7, Training Loss: 0.206676, Validation Loss: 0.304059, Training Accuracy: 0.983131, Validation Accuracy: 0.920635
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.205503, Validation Loss: 0.301749, Training Accuracy: 0.982509, Validation Accuracy: 0.922316
Validation loss decreased (0.303739 --> 0.301749).  Saving model ...
Epoch: 9, Training Loss: 0.209513, Validation Loss: 0.300154, Training Accuracy: 0.981264, Validation Accuracy: 0.922316
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.301749 --> 0.300154).  Saving model ...
Epoch: 10, Training Loss: 0.203174, Validation Loss: 0.302631, Training Accuracy: 0.983131, Validation Accuracy: 0.921008
EarlyStopping counter: 1 out of 10
Epoch: 11, Training Loss: 0.204187, Validation Loss: 0.301626, Training Accuracy: 0.982571, Validation Accuracy: 0.922689
EarlyStopping counter: 2 out of 10
Epoch: 12, Training Loss: 0.204495, Validation Loss: 0.302837, Training Accuracy: 0.981824, Validation Accuracy: 0.921569
EarlyStopping counter: 3 out of 10
Epoch: 13, Training Loss: 0.207925, Validation Loss: 0.302933, Training Accuracy: 0.981201, Validation Accuracy: 0.921942
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 4 out of 10
Epoch: 14, Training Loss: 0.205193, Validation Loss: 0.302025, Training Accuracy: 0.982882, Validation Accuracy: 0.922129
EarlyStopping counter: 5 out of 10
Epoch: 15, Training Loss: 0.208003, Validation Loss: 0.303404, Training Accuracy: 0.983318, Validation Accuracy: 0.921569
EarlyStopping counter: 6 out of 10
Epoch: 16, Training Loss: 0.208856, Validation Loss: 0.302358, Training Accuracy: 0.982820, Validation Accuracy: 0.922502
EarlyStopping counter: 7 out of 10
Epoch: 17, Training Loss: 0.206616, Validation Loss: 0.301230, Training Accuracy: 0.983816, Validation Accuracy: 0.921942
EarlyStopping counter: 8 out of 10
Epoch: 18, Training Loss: 0.201072, Validation Loss: 0.301680, Training Accuracy: 0.984998, Validation Accuracy: 0.922689
EarlyStopping counter: 9 out of 10
Epoch: 19, Training Loss: 0.207612, Validation Loss: 0.302271, Training Accuracy: 0.983380, Validation Accuracy: 0.922502
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 19
Ended Training Cycle
backbone.blocks.5.7._expand_conv
1029

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.7._expand_conv (Conv2d(272, 603, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.7._expand_conv (Conv2d(272, 603, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1029
[1] prune_out_channels on backbone.blocks.5.7._expand_conv (Conv2d(272, 603, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.7._bn0 (BatchNorm2d(603, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1029
[2] prune_out_channels on backbone.blocks.5.7._bn0 (BatchNorm2d(603, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_86(HardtanhBackward0), #idxs=1029
[3] prune_out_channels on _ElementWiseOp_86(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(603, 603, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=603, bias=False)), #idxs=1029
[4] prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(603, 603, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=603, bias=False)) => prune_out_channels on backbone.blocks.5.7._bn1 (BatchNorm2d(603, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1029
[5] prune_out_channels on backbone.blocks.5.7._bn1 (BatchNorm2d(603, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_85(HardtanhBackward0), #idxs=1029
[6] prune_out_channels on _ElementWiseOp_85(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.7._project_conv (Conv2d(603, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1029
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.7._expand_conv
6
tensor([False,  True, False,  ..., False,  True, False])
torch.Size([1632])
torch.Size([603])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.7._depthwise_conv
5
tensor([False,  True, False,  ..., False,  True, False])
torch.Size([1632])
torch.Size([603])
backbone.blocks.5.7._depthwise_conv
542
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(61, 61, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=61, bias=False)) => prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(61, 61, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=61, bias=False)), #idxs=542
[1] prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(61, 61, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=61, bias=False)) => prune_out_channels on _ElementWiseOp_86(HardtanhBackward0), #idxs=542
[2] prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(61, 61, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=61, bias=False)) => prune_out_channels on backbone.blocks.5.7._bn1 (BatchNorm2d(61, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=542
[3] prune_out_channels on backbone.blocks.5.7._bn1 (BatchNorm2d(61, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_85(HardtanhBackward0), #idxs=542
[4] prune_out_channels on _ElementWiseOp_85(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.7._project_conv (Conv2d(61, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=542
[5] prune_out_channels on _ElementWiseOp_86(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.7._bn0 (BatchNorm2d(61, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=542
[6] prune_out_channels on backbone.blocks.5.7._bn0 (BatchNorm2d(61, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.7._expand_conv (Conv2d(272, 61, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=542
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.5.7._depthwise_conv
5
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False])
torch.Size([603])
torch.Size([61])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.7._expand_conv
6
tensor([False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False,  True, False, False,  True,
         True, False, False, False, False, False, False, False, False, False,
         True, False,  True, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False,  True,
        False, False, False, False, False,  True, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True, False, False, False, False,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False,  True,  True,  True, False,  True, False, False, False,
        False, False, False, False, False, False, False,  True, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False,  True, False, False, False, False, False, False,  True, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
        False, False, False, False, False, False,  True, False, False, False,
         True, False, False,  True, False, False, False, False,  True, False,
        False, False, False, False, False, False, False, False, False, False,
         True, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False,  True, False, False, False, False,
         True, False, False, False, False, False, False, False,  True,  True,
        False,  True, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False,  True,
        False, False,  True, False, False,  True, False, False, False, False,
        False,  True,  True, False, False,  True,  True, False, False, False,
        False, False, False, False, False, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False,  True, False, False, False, False, False,
        False,  True, False,  True, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False])
torch.Size([603])
torch.Size([61])
backbone.blocks.5.7._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(61, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(61, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.5.7._project_conv
4
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True])
torch.Size([272])
torch.Size([272])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 104, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 104, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 104, 10, 10]           2,600           2,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 700, 10, 10]         112,000         112,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 700, 10, 10]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 700, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 700, 5, 5]          17,500          17,500
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 700, 5, 5]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         190,400         190,400
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156       [1, 101, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158       [1, 101, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159       [1, 101, 5, 5]           2,525           2,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163        [1, 95, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165        [1, 95, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166        [1, 95, 5, 5]           2,375           2,375
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170        [1, 80, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172        [1, 80, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173        [1, 80, 5, 5]           2,000           2,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177        [1, 72, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179        [1, 72, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180        [1, 72, 5, 5]           1,800           1,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184        [1, 77, 5, 5]          20,944          20,944
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185        [1, 77, 5, 5]             154             154
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186        [1, 77, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187        [1, 77, 5, 5]           1,925           1,925
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188        [1, 77, 5, 5]             154             154
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]          20,944          20,944
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191        [1, 64, 5, 5]          17,408          17,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192        [1, 64, 5, 5]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193        [1, 64, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194        [1, 64, 5, 5]           1,600           1,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195        [1, 64, 5, 5]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]          17,408          17,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198        [1, 61, 5, 5]          16,592          16,592
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199        [1, 61, 5, 5]             122             122
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200        [1, 61, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201        [1, 61, 5, 5]           1,525           1,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202        [1, 61, 5, 5]             122             122
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]          16,592          16,592
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 3,018,012
Trainable params: 3,018,012
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.212409, Validation Loss: 0.313357, Training Accuracy: 0.978898, Validation Accuracy: 0.920261
Validation loss decreased (inf --> 0.313357).  Saving model ...
Epoch: 2, Training Loss: 0.213791, Validation Loss: 0.322507, Training Accuracy: 0.977467, Validation Accuracy: 0.915780
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.218166, Validation Loss: 0.323080, Training Accuracy: 0.977591, Validation Accuracy: 0.914472
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.213920, Validation Loss: 0.336875, Training Accuracy: 0.978400, Validation Accuracy: 0.911858
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.215597, Validation Loss: 0.328280, Training Accuracy: 0.977529, Validation Accuracy: 0.912979
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.205011, Validation Loss: 0.309024, Training Accuracy: 0.981264, Validation Accuracy: 0.919888
Validation loss decreased (0.313357 --> 0.309024).  Saving model ...
Epoch: 7, Training Loss: 0.205500, Validation Loss: 0.304648, Training Accuracy: 0.980703, Validation Accuracy: 0.921755
Validation loss decreased (0.309024 --> 0.304648).  Saving model ...
Epoch: 8, Training Loss: 0.210896, Validation Loss: 0.309792, Training Accuracy: 0.981388, Validation Accuracy: 0.921195
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.209118, Validation Loss: 0.309249, Training Accuracy: 0.981699, Validation Accuracy: 0.921755
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.205588, Validation Loss: 0.305205, Training Accuracy: 0.984749, Validation Accuracy: 0.921569
EarlyStopping counter: 3 out of 10
Epoch: 11, Training Loss: 0.208667, Validation Loss: 0.304340, Training Accuracy: 0.982322, Validation Accuracy: 0.922876
Validation loss decreased (0.304648 --> 0.304340).  Saving model ...
Epoch: 12, Training Loss: 0.206131, Validation Loss: 0.305866, Training Accuracy: 0.982322, Validation Accuracy: 0.921942
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.205085, Validation Loss: 0.304753, Training Accuracy: 0.984936, Validation Accuracy: 0.922502
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 14, Training Loss: 0.209334, Validation Loss: 0.304733, Training Accuracy: 0.982509, Validation Accuracy: 0.921569
EarlyStopping counter: 3 out of 10
Epoch: 15, Training Loss: 0.210473, Validation Loss: 0.304158, Training Accuracy: 0.982260, Validation Accuracy: 0.921382
Validation loss decreased (0.304340 --> 0.304158).  Saving model ...
Epoch: 16, Training Loss: 0.205952, Validation Loss: 0.306887, Training Accuracy: 0.983380, Validation Accuracy: 0.921569
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.202075, Validation Loss: 0.304534, Training Accuracy: 0.984563, Validation Accuracy: 0.921942
EarlyStopping counter: 2 out of 10
Epoch: 18, Training Loss: 0.210127, Validation Loss: 0.305920, Training Accuracy: 0.981575, Validation Accuracy: 0.921569
EarlyStopping counter: 3 out of 10
Epoch: 19, Training Loss: 0.207780, Validation Loss: 0.304143, Training Accuracy: 0.982446, Validation Accuracy: 0.922316
Validation loss decreased (0.304158 --> 0.304143).  Saving model ...
Epoch: 20, Training Loss: 0.203222, Validation Loss: 0.306197, Training Accuracy: 0.983193, Validation Accuracy: 0.921382
EarlyStopping counter: 1 out of 10
Epoch: 21, Training Loss: 0.204602, Validation Loss: 0.306564, Training Accuracy: 0.983318, Validation Accuracy: 0.921942
EarlyStopping counter: 2 out of 10
Epoch: 22, Training Loss: 0.203691, Validation Loss: 0.305408, Training Accuracy: 0.983318, Validation Accuracy: 0.921755
EarlyStopping counter: 3 out of 10
Epoch: 23, Training Loss: 0.209038, Validation Loss: 0.304054, Training Accuracy: 0.983567, Validation Accuracy: 0.921755
Validation loss decreased (0.304143 --> 0.304054).  Saving model ...
Epoch: 24, Training Loss: 0.211268, Validation Loss: 0.305139, Training Accuracy: 0.982135, Validation Accuracy: 0.922502
EarlyStopping counter: 1 out of 10
Epoch: 25, Training Loss: 0.207189, Validation Loss: 0.305076, Training Accuracy: 0.984625, Validation Accuracy: 0.922876
EarlyStopping counter: 2 out of 10
Epoch: 26, Training Loss: 0.203283, Validation Loss: 0.304828, Training Accuracy: 0.983691, Validation Accuracy: 0.922129
EarlyStopping counter: 3 out of 10
Epoch: 27, Training Loss: 0.209472, Validation Loss: 0.306184, Training Accuracy: 0.983318, Validation Accuracy: 0.922316
EarlyStopping counter: 4 out of 10
Epoch: 28, Training Loss: 0.203403, Validation Loss: 0.305387, Training Accuracy: 0.985745, Validation Accuracy: 0.922689
EarlyStopping counter: 5 out of 10
Epoch: 29, Training Loss: 0.203762, Validation Loss: 0.305427, Training Accuracy: 0.983442, Validation Accuracy: 0.922502
EarlyStopping counter: 6 out of 10
Epoch: 30, Training Loss: 0.204888, Validation Loss: 0.306415, Training Accuracy: 0.981450, Validation Accuracy: 0.921382
EarlyStopping counter: 7 out of 10
Epoch: 31, Training Loss: 0.203399, Validation Loss: 0.306261, Training Accuracy: 0.983256, Validation Accuracy: 0.921942
EarlyStopping counter: 8 out of 10
Epoch: 32, Training Loss: 0.205874, Validation Loss: 0.306451, Training Accuracy: 0.983629, Validation Accuracy: 0.922129
EarlyStopping counter: 9 out of 10
Epoch: 33, Training Loss: 0.205265, Validation Loss: 0.304772, Training Accuracy: 0.982197, Validation Accuracy: 0.921755
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 33
Ended Training Cycle
backbone.blocks.6.0._expand_conv
1248

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.6.0._expand_conv (Conv2d(272, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.6.0._expand_conv (Conv2d(272, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1248
[1] prune_out_channels on backbone.blocks.6.0._expand_conv (Conv2d(272, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.6.0._bn0 (BatchNorm2d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1248
[2] prune_out_channels on backbone.blocks.6.0._bn0 (BatchNorm2d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_5(HardtanhBackward0), #idxs=1248
[3] prune_out_channels on _ElementWiseOp_5(HardtanhBackward0) => prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)), #idxs=1248
[4] prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)) => prune_out_channels on backbone.blocks.6.0._bn1 (BatchNorm2d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1248
[5] prune_out_channels on backbone.blocks.6.0._bn1 (BatchNorm2d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_4(HardtanhBackward0), #idxs=1248
[6] prune_out_channels on _ElementWiseOp_4(HardtanhBackward0) => prune_in_channels on backbone.blocks.6.0._project_conv (Conv2d(384, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1248
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.6.0._expand_conv
3
tensor([False, False, False,  ..., False, False, False])
torch.Size([1632])
torch.Size([384])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.6.0._depthwise_conv
2
tensor([False, False, False,  ..., False, False, False])
torch.Size([1632])
torch.Size([384])
backbone.blocks.6.0._depthwise_conv
239
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(145, 145, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=145, bias=False)) => prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(145, 145, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=145, bias=False)), #idxs=239
[1] prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(145, 145, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=145, bias=False)) => prune_out_channels on _ElementWiseOp_5(HardtanhBackward0), #idxs=239
[2] prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(145, 145, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=145, bias=False)) => prune_out_channels on backbone.blocks.6.0._bn1 (BatchNorm2d(145, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=239
[3] prune_out_channels on backbone.blocks.6.0._bn1 (BatchNorm2d(145, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_4(HardtanhBackward0), #idxs=239
[4] prune_out_channels on _ElementWiseOp_4(HardtanhBackward0) => prune_in_channels on backbone.blocks.6.0._project_conv (Conv2d(145, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=239
[5] prune_out_channels on _ElementWiseOp_5(HardtanhBackward0) => prune_out_channels on backbone.blocks.6.0._bn0 (BatchNorm2d(145, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=239
[6] prune_out_channels on backbone.blocks.6.0._bn0 (BatchNorm2d(145, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.6.0._expand_conv (Conv2d(272, 145, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=239
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fa9fca31930>>
backbone.blocks.6.0._depthwise_conv
2
tensor([False, False,  True, False,  True, False, False,  True, False, False,
        False, False, False, False, False,  True, False,  True,  True, False,
        False,  True, False,  True,  True, False,  True, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False,  True, False,  True, False, False,  True, False,  True,
         True, False, False, False,  True,  True, False, False,  True, False,
         True, False, False,  True, False,  True, False, False, False,  True,
         True, False, False,  True,  True, False,  True, False, False, False,
         True, False,  True, False,  True, False,  True, False,  True, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True,  True, False,  True, False,  True,  True,  True, False, False,
        False, False, False,  True, False, False,  True,  True, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False, False, False,  True,  True, False, False, False,  True,
        False,  True,  True,  True,  True,  True,  True, False, False, False,
        False,  True, False, False, False, False,  True, False,  True, False,
         True,  True,  True, False, False,  True, False,  True, False,  True,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False,  True,  True,  True,  True, False,  True, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
         True,  True, False,  True,  True,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True,  True,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False,  True, False,  True,  True, False,  True, False,  True,  True,
         True, False, False,  True, False,  True,  True,  True, False,  True,
         True, False, False,  True,  True, False, False,  True, False,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
        False, False, False, False,  True, False, False,  True,  True,  True,
        False, False,  True,  True, False, False, False,  True, False, False,
         True, False,  True, False,  True, False, False,  True, False,  True,
        False, False,  True, False, False, False,  True, False,  True,  True,
         True, False, False, False])
torch.Size([384])
torch.Size([145])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.6.0._expand_conv
3
tensor([False, False,  True, False,  True, False, False,  True, False, False,
        False, False, False, False, False,  True, False,  True,  True, False,
        False,  True, False,  True,  True, False,  True, False, False, False,
         True, False,  True, False,  True, False, False, False, False, False,
         True, False, False, False, False,  True, False, False, False, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False,  True, False,  True, False, False,  True, False,  True,
         True, False, False, False,  True,  True, False, False,  True, False,
         True, False, False,  True, False,  True, False, False, False,  True,
         True, False, False,  True,  True, False,  True, False, False, False,
         True, False,  True, False,  True, False,  True, False,  True, False,
         True, False, False, False, False,  True, False, False, False,  True,
        False, False,  True, False, False, False, False, False,  True, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True,  True, False,  True, False,  True,  True,  True, False, False,
        False, False, False,  True, False, False,  True,  True, False, False,
        False, False, False,  True, False,  True, False, False, False, False,
        False, False, False,  True,  True, False, False, False, False, False,
         True, False, False, False,  True,  True, False, False, False,  True,
        False,  True,  True,  True,  True,  True,  True, False, False, False,
        False,  True, False, False, False, False,  True, False,  True, False,
         True,  True,  True, False, False,  True, False,  True, False,  True,
        False, False, False,  True,  True, False, False, False,  True, False,
        False, False, False,  True, False, False, False, False, False,  True,
        False, False,  True,  True,  True,  True, False,  True, False, False,
        False, False,  True, False,  True,  True, False, False, False, False,
         True,  True, False,  True,  True,  True, False, False, False,  True,
        False, False, False, False, False, False,  True, False, False, False,
        False, False,  True,  True,  True,  True, False, False, False, False,
        False,  True, False, False,  True, False, False, False,  True, False,
        False,  True, False,  True,  True, False,  True, False,  True,  True,
         True, False, False,  True, False,  True,  True,  True, False,  True,
         True, False, False,  True,  True, False, False,  True, False,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
        False, False, False, False,  True, False, False,  True,  True,  True,
        False, False,  True,  True, False, False, False,  True, False, False,
         True, False,  True, False,  True, False, False,  True, False,  True,
        False, False,  True, False, False, False,  True, False,  True,  True,
         True, False, False, False])
torch.Size([384])
torch.Size([145])
backbone.blocks.6.0._project_conv
0

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.6.0._project_conv (Conv2d(145, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.6.0._project_conv (Conv2d(145, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=0
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.blocks.6.0._project_conv
1
tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
torch.Size([448])
torch.Size([448])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 104, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 104, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 104, 10, 10]           2,600           2,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 700, 10, 10]         112,000         112,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 700, 10, 10]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 700, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 700, 5, 5]          17,500          17,500
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 700, 5, 5]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         190,400         190,400
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156       [1, 101, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158       [1, 101, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159       [1, 101, 5, 5]           2,525           2,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163        [1, 95, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165        [1, 95, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166        [1, 95, 5, 5]           2,375           2,375
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170        [1, 80, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172        [1, 80, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173        [1, 80, 5, 5]           2,000           2,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177        [1, 72, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179        [1, 72, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180        [1, 72, 5, 5]           1,800           1,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184        [1, 77, 5, 5]          20,944          20,944
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185        [1, 77, 5, 5]             154             154
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186        [1, 77, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187        [1, 77, 5, 5]           1,925           1,925
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188        [1, 77, 5, 5]             154             154
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]          20,944          20,944
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191        [1, 64, 5, 5]          17,408          17,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192        [1, 64, 5, 5]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193        [1, 64, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194        [1, 64, 5, 5]           1,600           1,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195        [1, 64, 5, 5]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]          17,408          17,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198        [1, 61, 5, 5]          16,592          16,592
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199        [1, 61, 5, 5]             122             122
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200        [1, 61, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201        [1, 61, 5, 5]           1,525           1,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202        [1, 61, 5, 5]             122             122
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]          16,592          16,592
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205       [1, 145, 5, 5]          39,440          39,440
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206       [1, 145, 5, 5]             290             290
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207       [1, 145, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208       [1, 145, 5, 5]           1,305           1,305
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209       [1, 145, 5, 5]             290             290
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]          64,960          64,960
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 1,928,041
Trainable params: 1,928,041
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.214473, Validation Loss: 0.326560, Training Accuracy: 0.978711, Validation Accuracy: 0.916340
Validation loss decreased (inf --> 0.326560).  Saving model ...
Epoch: 2, Training Loss: 0.219599, Validation Loss: 0.322182, Training Accuracy: 0.978276, Validation Accuracy: 0.916713
Validation loss decreased (0.326560 --> 0.322182).  Saving model ...
Epoch: 3, Training Loss: 0.217523, Validation Loss: 0.318847, Training Accuracy: 0.978649, Validation Accuracy: 0.916153
Validation loss decreased (0.322182 --> 0.318847).  Saving model ...
Epoch: 4, Training Loss: 0.219428, Validation Loss: 0.336563, Training Accuracy: 0.979334, Validation Accuracy: 0.912605
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.221099, Validation Loss: 0.319452, Training Accuracy: 0.977902, Validation Accuracy: 0.914659
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.214835, Validation Loss: 0.308568, Training Accuracy: 0.981015, Validation Accuracy: 0.922876
Validation loss decreased (0.318847 --> 0.308568).  Saving model ...
Epoch: 7, Training Loss: 0.210946, Validation Loss: 0.306788, Training Accuracy: 0.982011, Validation Accuracy: 0.922876
Validation loss decreased (0.308568 --> 0.306788).  Saving model ...
Epoch: 8, Training Loss: 0.206575, Validation Loss: 0.304903, Training Accuracy: 0.983567, Validation Accuracy: 0.925303
Validation loss decreased (0.306788 --> 0.304903).  Saving model ...
Epoch: 9, Training Loss: 0.206368, Validation Loss: 0.308540, Training Accuracy: 0.981824, Validation Accuracy: 0.921569
EarlyStopping counter: 1 out of 10
Epoch: 10, Training Loss: 0.204953, Validation Loss: 0.309523, Training Accuracy: 0.982820, Validation Accuracy: 0.921008
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 11, Training Loss: 0.206492, Validation Loss: 0.304808, Training Accuracy: 0.984189, Validation Accuracy: 0.921942
Validation loss decreased (0.304903 --> 0.304808).  Saving model ...
Epoch: 12, Training Loss: 0.208587, Validation Loss: 0.306555, Training Accuracy: 0.981762, Validation Accuracy: 0.922876
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.206281, Validation Loss: 0.306253, Training Accuracy: 0.983380, Validation Accuracy: 0.921195
EarlyStopping counter: 2 out of 10
Epoch: 14, Training Loss: 0.207392, Validation Loss: 0.307000, Training Accuracy: 0.982322, Validation Accuracy: 0.921382
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 3 out of 10
Epoch: 15, Training Loss: 0.209849, Validation Loss: 0.304298, Training Accuracy: 0.983629, Validation Accuracy: 0.922876
Validation loss decreased (0.304808 --> 0.304298).  Saving model ...
Epoch: 16, Training Loss: 0.208069, Validation Loss: 0.304462, Training Accuracy: 0.983754, Validation Accuracy: 0.923249
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.203562, Validation Loss: 0.306392, Training Accuracy: 0.984438, Validation Accuracy: 0.922502
EarlyStopping counter: 2 out of 10
Epoch: 18, Training Loss: 0.205241, Validation Loss: 0.306610, Training Accuracy: 0.982571, Validation Accuracy: 0.921755
EarlyStopping counter: 3 out of 10
Epoch: 19, Training Loss: 0.199967, Validation Loss: 0.305875, Training Accuracy: 0.985870, Validation Accuracy: 0.922502
EarlyStopping counter: 4 out of 10
Epoch: 20, Training Loss: 0.204870, Validation Loss: 0.306055, Training Accuracy: 0.984625, Validation Accuracy: 0.921755
EarlyStopping counter: 5 out of 10
Epoch: 21, Training Loss: 0.206820, Validation Loss: 0.305907, Training Accuracy: 0.982571, Validation Accuracy: 0.922316
EarlyStopping counter: 6 out of 10
Epoch: 22, Training Loss: 0.212490, Validation Loss: 0.308066, Training Accuracy: 0.983007, Validation Accuracy: 0.923249
EarlyStopping counter: 7 out of 10
Epoch: 23, Training Loss: 0.204293, Validation Loss: 0.305079, Training Accuracy: 0.983193, Validation Accuracy: 0.922689
EarlyStopping counter: 8 out of 10
Epoch: 24, Training Loss: 0.204340, Validation Loss: 0.305557, Training Accuracy: 0.984687, Validation Accuracy: 0.920261
EarlyStopping counter: 9 out of 10
Epoch: 25, Training Loss: 0.211702, Validation Loss: 0.306252, Training Accuracy: 0.982384, Validation Accuracy: 0.923623
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 25
Ended Training Cycle
backbone.head.0
1

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.head.0 (Conv2d(448, 1279, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.head.0 (Conv2d(448, 1279, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=1
[1] prune_out_channels on backbone.head.0 (Conv2d(448, 1279, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.head.1 (BatchNorm2d(1279, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=1
[2] prune_out_channels on backbone.head.1 (BatchNorm2d(1279, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_3(HardtanhBackward0), #idxs=1
[3] prune_out_channels on _ElementWiseOp_3(HardtanhBackward0) => prune_out_channels on _ElementWiseOp_2(MeanBackward1), #idxs=1
[4] prune_out_channels on _ElementWiseOp_2(MeanBackward1) => prune_out_channels on _Reshape_0(), #idxs=1
[5] prune_out_channels on _Reshape_0() => prune_in_channels on backbone.fc (Linear(in_features=1279, out_features=5, bias=True)), #idxs=1
[6] prune_in_channels on backbone.fc (Linear(in_features=1279, out_features=5, bias=True)) => prune_out_channels on _ElementWiseOp_1(TBackward0), #idxs=1
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fa9fca323b0>>
backbone.head.0
0
tensor([True, True, True,  ..., True, True, True])
torch.Size([1280])
torch.Size([1279])
21031
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 22, 75, 75]             594             594
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 22, 75, 75]              44              44
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 22, 75, 75]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 22, 75, 75]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 22, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 24, 75, 75]             528             528
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 24, 75, 75]              48              48
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 135, 75, 75]           3,240           3,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 135, 75, 75]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 135, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 135, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 135, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 135, 38, 38]           1,215           1,215
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 135, 38, 38]             270             270
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           4,320           4,320
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 111, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 111, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 111, 38, 38]             999             999
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 111, 38, 38]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           3,552           3,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30      [1, 83, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32      [1, 83, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33      [1, 83, 38, 38]             747             747
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34      [1, 83, 38, 38]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           2,656           2,656
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 182, 38, 38]           5,824           5,824
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 182, 38, 38]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 182, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 182, 19, 19]           4,550           4,550
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 182, 19, 19]             364             364
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,192          10,192
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 174, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 174, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 174, 19, 19]           4,350           4,350
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 174, 19, 19]             348             348
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]           9,744           9,744
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 115, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 115, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 115, 19, 19]           2,875           2,875
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 115, 19, 19]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]           6,440           6,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58      [1, 92, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60      [1, 92, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61      [1, 92, 19, 19]           2,300           2,300
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62      [1, 92, 19, 19]             184             184
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]           5,152           5,152
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 309, 19, 19]          17,304          17,304
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 309, 19, 19]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 309, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 309, 10, 10]           2,781           2,781
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 309, 10, 10]             618             618
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          34,608          34,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72      [1, 56, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74      [1, 56, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75      [1, 56, 10, 10]             504             504
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76      [1, 56, 10, 10]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]           6,272           6,272
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79      [1, 34, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81      [1, 34, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82      [1, 34, 10, 10]             306             306
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83      [1, 34, 10, 10]              68              68
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]           3,808           3,808
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86      [1, 32, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88      [1, 32, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89      [1, 32, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90      [1, 32, 10, 10]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]           3,584           3,584
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93      [1, 20, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95      [1, 20, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96      [1, 20, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97      [1, 20, 10, 10]              40              40
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]           2,240           2,240
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100      [1, 15, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102      [1, 15, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103      [1, 15, 10, 10]             135             135
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104      [1, 15, 10, 10]              30              30
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]           1,680           1,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 612, 10, 10]          68,544          68,544
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 612, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 612, 10, 10]          15,300          15,300
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 612, 10, 10]           1,224           1,224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]          97,920          97,920
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 144, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 144, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 144, 10, 10]           3,600           3,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]          23,040          23,040
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 126, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 126, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 126, 10, 10]           3,150           3,150
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 126, 10, 10]             252             252
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]          20,160          20,160
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 111, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 111, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 111, 10, 10]           2,775           2,775
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 111, 10, 10]             222             222
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]          17,760          17,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135      [1, 99, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137      [1, 99, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138      [1, 99, 10, 10]           2,475           2,475
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139      [1, 99, 10, 10]             198             198
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]          15,840          15,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 104, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 104, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 104, 10, 10]           2,600           2,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]          16,640          16,640
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 700, 10, 10]         112,000         112,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 700, 10, 10]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 700, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 700, 5, 5]          17,500          17,500
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 700, 5, 5]           1,400           1,400
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         190,400         190,400
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156       [1, 101, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158       [1, 101, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159       [1, 101, 5, 5]           2,525           2,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160       [1, 101, 5, 5]             202             202
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]          27,472          27,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163        [1, 95, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165        [1, 95, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166        [1, 95, 5, 5]           2,375           2,375
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167        [1, 95, 5, 5]             190             190
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]          25,840          25,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170        [1, 80, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172        [1, 80, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173        [1, 80, 5, 5]           2,000           2,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174        [1, 80, 5, 5]             160             160
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]          21,760          21,760
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177        [1, 72, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179        [1, 72, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180        [1, 72, 5, 5]           1,800           1,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181        [1, 72, 5, 5]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]          19,584          19,584
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184        [1, 77, 5, 5]          20,944          20,944
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185        [1, 77, 5, 5]             154             154
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186        [1, 77, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187        [1, 77, 5, 5]           1,925           1,925
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188        [1, 77, 5, 5]             154             154
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]          20,944          20,944
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191        [1, 64, 5, 5]          17,408          17,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192        [1, 64, 5, 5]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193        [1, 64, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194        [1, 64, 5, 5]           1,600           1,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195        [1, 64, 5, 5]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]          17,408          17,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198        [1, 61, 5, 5]          16,592          16,592
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199        [1, 61, 5, 5]             122             122
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200        [1, 61, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201        [1, 61, 5, 5]           1,525           1,525
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202        [1, 61, 5, 5]             122             122
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]          16,592          16,592
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205       [1, 145, 5, 5]          39,440          39,440
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206       [1, 145, 5, 5]             290             290
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207       [1, 145, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208       [1, 145, 5, 5]           1,305           1,305
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209       [1, 145, 5, 5]             290             290
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]          64,960          64,960
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1279, 5, 5]         572,992         572,992
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1279, 5, 5]           2,558           2,558
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1279, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1279, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1279]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,400           6,400
============================================================================================================================
Total params: 1,927,586
Trainable params: 1,927,586
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.215357, Validation Loss: 0.311829, Training Accuracy: 0.978214, Validation Accuracy: 0.919701
Validation loss decreased (inf --> 0.311829).  Saving model ...
Epoch: 2, Training Loss: 0.220646, Validation Loss: 0.315381, Training Accuracy: 0.976222, Validation Accuracy: 0.916900
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.218123, Validation Loss: 0.311400, Training Accuracy: 0.977840, Validation Accuracy: 0.920261
Validation loss decreased (0.311829 --> 0.311400).  Saving model ...
Epoch: 4, Training Loss: 0.225239, Validation Loss: 0.363973, Training Accuracy: 0.977529, Validation Accuracy: 0.902894
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.217333, Validation Loss: 0.317259, Training Accuracy: 0.978338, Validation Accuracy: 0.918768
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.214991, Validation Loss: 0.309467, Training Accuracy: 0.981699, Validation Accuracy: 0.921755
Validation loss decreased (0.311400 --> 0.309467).  Saving model ...
Epoch: 7, Training Loss: 0.208480, Validation Loss: 0.307349, Training Accuracy: 0.983380, Validation Accuracy: 0.921942
Validation loss decreased (0.309467 --> 0.307349).  Saving model ...
Epoch: 8, Training Loss: 0.214839, Validation Loss: 0.306629, Training Accuracy: 0.981886, Validation Accuracy: 0.922502
Validation loss decreased (0.307349 --> 0.306629).  Saving model ...
Epoch: 9, Training Loss: 0.203723, Validation Loss: 0.308668, Training Accuracy: 0.985496, Validation Accuracy: 0.922689
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 1 out of 10
Epoch: 10, Training Loss: 0.210780, Validation Loss: 0.307390, Training Accuracy: 0.983007, Validation Accuracy: 0.922129
EarlyStopping counter: 2 out of 10
Epoch: 11, Training Loss: 0.205653, Validation Loss: 0.307996, Training Accuracy: 0.983442, Validation Accuracy: 0.922689
EarlyStopping counter: 3 out of 10
Epoch: 12, Training Loss: 0.207107, Validation Loss: 0.306372, Training Accuracy: 0.984065, Validation Accuracy: 0.923249
Validation loss decreased (0.306629 --> 0.306372).  Saving model ...
Epoch: 13, Training Loss: 0.202684, Validation Loss: 0.308622, Training Accuracy: 0.985559, Validation Accuracy: 0.922876
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 1 out of 10
Epoch: 14, Training Loss: 0.212614, Validation Loss: 0.306382, Training Accuracy: 0.982633, Validation Accuracy: 0.921942
EarlyStopping counter: 2 out of 10
Epoch: 15, Training Loss: 0.208737, Validation Loss: 0.306993, Training Accuracy: 0.982322, Validation Accuracy: 0.922689
EarlyStopping counter: 3 out of 10
Epoch: 16, Training Loss: 0.210229, Validation Loss: 0.307183, Training Accuracy: 0.983878, Validation Accuracy: 0.922316
EarlyStopping counter: 4 out of 10
Epoch: 17, Training Loss: 0.206597, Validation Loss: 0.309043, Training Accuracy: 0.983193, Validation Accuracy: 0.923063
EarlyStopping counter: 5 out of 10
Epoch: 18, Training Loss: 0.206704, Validation Loss: 0.306457, Training Accuracy: 0.983816, Validation Accuracy: 0.922129
EarlyStopping counter: 6 out of 10
Epoch: 19, Training Loss: 0.212176, Validation Loss: 0.307259, Training Accuracy: 0.983069, Validation Accuracy: 0.921755
EarlyStopping counter: 7 out of 10
Epoch: 20, Training Loss: 0.210806, Validation Loss: 0.307069, Training Accuracy: 0.982322, Validation Accuracy: 0.923063
EarlyStopping counter: 8 out of 10
Epoch: 21, Training Loss: 0.210947, Validation Loss: 0.306478, Training Accuracy: 0.981948, Validation Accuracy: 0.923249
EarlyStopping counter: 9 out of 10
Epoch: 22, Training Loss: 0.210144, Validation Loss: 0.307728, Training Accuracy: 0.983567, Validation Accuracy: 0.921942
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 22
Test Loss: 0.304150, Test Accuracy: 0.9225
