RecycleNetwork(
  (backbone): EfficientNetLite(
    (stem): Sequential(
      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU6(inplace=True)
    )
    (blocks): ModuleList(
      (0): ModuleList(
        (0): MBConvBlock(
          (_depthwise_conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
          (_bn1): BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(32, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (1): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
          (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
        (1-3): 3 x MBConvBlock(
          (_expand_conv): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (2): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(192, 192, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=192, bias=False)
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(192, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(56, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
        (1-3): 3 x MBConvBlock(
          (_expand_conv): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(336, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=336, bias=False)
          (_bn1): BatchNorm2d(336, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(56, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (3): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(336, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(336, 336, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=336, bias=False)
          (_bn1): BatchNorm2d(336, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(336, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
        (1-5): 5 x MBConvBlock(
          (_expand_conv): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(672, 672, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=672, bias=False)
          (_bn1): BatchNorm2d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(672, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (4): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(672, 672, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=672, bias=False)
          (_bn1): BatchNorm2d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(672, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(160, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
        (1-5): 5 x MBConvBlock(
          (_expand_conv): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(960, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(960, 960, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=960, bias=False)
          (_bn1): BatchNorm2d(960, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(160, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (5): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(960, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(960, 960, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=960, bias=False)
          (_bn1): BatchNorm2d(960, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(960, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(272, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
        (1-7): 7 x MBConvBlock(
          (_expand_conv): Conv2d(272, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(1632, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(1632, 1632, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1632, bias=False)
          (_bn1): BatchNorm2d(1632, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(1632, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(272, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (6): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(272, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(1632, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(1632, 1632, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1632, bias=False)
          (_bn1): BatchNorm2d(1632, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(1632, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(448, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
    )
    (head): Sequential(
      (0): Conv2d(448, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(1280, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU6(inplace=True)
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (dropout): Dropout(p=0.3, inplace=False)
    (fc): Linear(in_features=1280, out_features=5, bias=True)
  )
)
17
RecycleNetwork(
  (backbone): EfficientNetLite(
    (stem): Sequential(
      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU6(inplace=True)
    )
    (blocks): ModuleList(
      (0): ModuleList(
        (0): MBConvBlock(
          (_depthwise_conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
          (_bn1): BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(32, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (1): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
          (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
        (1-3): 3 x MBConvBlock(
          (_expand_conv): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (2): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(192, 192, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=192, bias=False)
          (_bn1): BatchNorm2d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(192, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(56, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
        (1-3): 3 x MBConvBlock(
          (_expand_conv): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(336, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(336, 336, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=336, bias=False)
          (_bn1): BatchNorm2d(336, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(336, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(56, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (3): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(336, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(336, 336, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=336, bias=False)
          (_bn1): BatchNorm2d(336, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(336, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
        (1-5): 5 x MBConvBlock(
          (_expand_conv): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(672, 672, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=672, bias=False)
          (_bn1): BatchNorm2d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(672, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (4): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(672, 672, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=672, bias=False)
          (_bn1): BatchNorm2d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(672, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(160, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
        (1-5): 5 x MBConvBlock(
          (_expand_conv): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(960, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(960, 960, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=960, bias=False)
          (_bn1): BatchNorm2d(960, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(160, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (5): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(960, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(960, 960, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=960, bias=False)
          (_bn1): BatchNorm2d(960, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(960, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(272, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
        (1-7): 7 x MBConvBlock(
          (_expand_conv): Conv2d(272, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(1632, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(1632, 1632, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1632, bias=False)
          (_bn1): BatchNorm2d(1632, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(1632, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(272, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
      (6): ModuleList(
        (0): MBConvBlock(
          (_expand_conv): Conv2d(272, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(1632, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2d(1632, 1632, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1632, bias=False)
          (_bn1): BatchNorm2d(1632, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_project_conv): Conv2d(1632, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(448, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (_relu): ReLU6(inplace=True)
        )
      )
    )
    (head): Sequential(
      (0): Conv2d(448, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): BatchNorm2d(1280, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU6(inplace=True)
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (dropout): Dropout(p=0.3, inplace=False)
    (fc): Linear(in_features=1280, out_features=5, bias=True)
  )
)
backbone.stem.0
[31, 24, 23, 22]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.stem.0 (Conv2d(3, 28, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)) => prune_out_channels on backbone.stem.0 (Conv2d(3, 28, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)), #idxs=4
[1] prune_out_channels on backbone.stem.0 (Conv2d(3, 28, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)) => prune_out_channels on backbone.stem.1 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[2] prune_out_channels on backbone.stem.1 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_40(HardtanhBackward0), #idxs=4
[3] prune_out_channels on _ElementWiseOp_40(HardtanhBackward0) => prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)), #idxs=4
[4] prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(28, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=28, bias=False)) => prune_out_channels on backbone.blocks.0.0._bn1 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[5] prune_out_channels on backbone.blocks.0.0._bn1 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_39(HardtanhBackward0), #idxs=4
[6] prune_out_channels on _ElementWiseOp_39(HardtanhBackward0) => prune_in_channels on backbone.blocks.0.0._project_conv (Conv2d(28, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.stem.0
90
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False, False,  True,  True,  True,  True,  True,
         True, False])
torch.Size([32])
torch.Size([28])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.0.0._depthwise_conv
89
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False, False,  True,  True,  True,  True,  True,
         True, False])
torch.Size([32])
torch.Size([28])
backbone.blocks.0.0._depthwise_conv
[12, 7, 8]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(25, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=25, bias=False)) => prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(25, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=25, bias=False)), #idxs=3
[1] prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(25, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=25, bias=False)) => prune_out_channels on _ElementWiseOp_40(HardtanhBackward0), #idxs=3
[2] prune_out_channels on backbone.blocks.0.0._depthwise_conv (Conv2d(25, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=25, bias=False)) => prune_out_channels on backbone.blocks.0.0._bn1 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[3] prune_out_channels on backbone.blocks.0.0._bn1 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_39(HardtanhBackward0), #idxs=3
[4] prune_out_channels on _ElementWiseOp_39(HardtanhBackward0) => prune_in_channels on backbone.blocks.0.0._project_conv (Conv2d(25, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[5] prune_out_channels on _ElementWiseOp_40(HardtanhBackward0) => prune_out_channels on backbone.stem.1 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[6] prune_out_channels on backbone.stem.1 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.stem.0 (Conv2d(3, 25, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)), #idxs=3
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.0.0._depthwise_conv
89
tensor([ True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([28])
torch.Size([25])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.stem.0
90
tensor([ True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([28])
torch.Size([25])
backbone.blocks.0.0._project_conv
[12, 15, 9]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.0.0._project_conv (Conv2d(25, 21, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.0.0._project_conv (Conv2d(25, 21, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[1] prune_out_channels on backbone.blocks.0.0._project_conv (Conv2d(25, 21, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.0.0._bn2 (BatchNorm2d(21, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[2] prune_out_channels on backbone.blocks.0.0._bn2 (BatchNorm2d(21, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.1.0._expand_conv (Conv2d(21, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.0.0._project_conv
88
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([24])
torch.Size([21])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 144, 75, 75]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 144, 75, 75]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 144, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 144, 38, 38]           1,296           1,296
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 144, 38, 38]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 32, 38, 38]           4,608           4,608
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 32, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 32, 38, 38]              64              64
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 192, 38, 38]           6,144           6,144
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 192, 19, 19]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 192, 19, 19]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,752          10,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,731,012
Trainable params: 11,731,012
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.256366, Validation Loss: 0.276034, Training Accuracy: 0.949082, Validation Accuracy: 0.925864
Validation loss decreased (inf --> 0.276034).  Saving model ...
Epoch: 2, Training Loss: 0.245340, Validation Loss: 0.271935, Training Accuracy: 0.955991, Validation Accuracy: 0.927918
Validation loss decreased (0.276034 --> 0.271935).  Saving model ...
Epoch: 3, Training Loss: 0.240026, Validation Loss: 0.276049, Training Accuracy: 0.953999, Validation Accuracy: 0.925864
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.244068, Validation Loss: 0.275134, Training Accuracy: 0.957112, Validation Accuracy: 0.926050
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.237067, Validation Loss: 0.272157, Training Accuracy: 0.956489, Validation Accuracy: 0.926797
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 3 out of 10
Epoch: 6, Training Loss: 0.236331, Validation Loss: 0.268239, Training Accuracy: 0.958357, Validation Accuracy: 0.928665
Validation loss decreased (0.271935 --> 0.268239).  Saving model ...
Epoch: 7, Training Loss: 0.238750, Validation Loss: 0.267231, Training Accuracy: 0.956116, Validation Accuracy: 0.926984
Validation loss decreased (0.268239 --> 0.267231).  Saving model ...
Epoch: 8, Training Loss: 0.241510, Validation Loss: 0.267443, Training Accuracy: 0.958357, Validation Accuracy: 0.927544
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.230894, Validation Loss: 0.268278, Training Accuracy: 0.959539, Validation Accuracy: 0.928291
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.238557, Validation Loss: 0.267664, Training Accuracy: 0.957672, Validation Accuracy: 0.927731
EarlyStopping counter: 3 out of 10
Epoch: 11, Training Loss: 0.231045, Validation Loss: 0.267488, Training Accuracy: 0.961220, Validation Accuracy: 0.929038
EarlyStopping counter: 4 out of 10
Epoch: 12, Training Loss: 0.240626, Validation Loss: 0.268348, Training Accuracy: 0.958232, Validation Accuracy: 0.926984
EarlyStopping counter: 5 out of 10
Epoch: 13, Training Loss: 0.234621, Validation Loss: 0.267099, Training Accuracy: 0.958481, Validation Accuracy: 0.928291
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
Validation loss decreased (0.267231 --> 0.267099).  Saving model ...
Epoch: 14, Training Loss: 0.234645, Validation Loss: 0.269006, Training Accuracy: 0.959228, Validation Accuracy: 0.927918
EarlyStopping counter: 1 out of 10
Epoch: 15, Training Loss: 0.233030, Validation Loss: 0.268402, Training Accuracy: 0.958232, Validation Accuracy: 0.927358
EarlyStopping counter: 2 out of 10
Epoch: 16, Training Loss: 0.237063, Validation Loss: 0.267663, Training Accuracy: 0.959415, Validation Accuracy: 0.928665
EarlyStopping counter: 3 out of 10
Epoch: 17, Training Loss: 0.238674, Validation Loss: 0.268339, Training Accuracy: 0.958357, Validation Accuracy: 0.929225
EarlyStopping counter: 4 out of 10
Epoch: 18, Training Loss: 0.241877, Validation Loss: 0.266130, Training Accuracy: 0.958357, Validation Accuracy: 0.929038
Validation loss decreased (0.267099 --> 0.266130).  Saving model ...
Epoch: 19, Training Loss: 0.238820, Validation Loss: 0.268390, Training Accuracy: 0.958917, Validation Accuracy: 0.926797
EarlyStopping counter: 1 out of 10
Epoch: 20, Training Loss: 0.231298, Validation Loss: 0.268262, Training Accuracy: 0.961594, Validation Accuracy: 0.928105
EarlyStopping counter: 2 out of 10
Epoch: 21, Training Loss: 0.240006, Validation Loss: 0.267329, Training Accuracy: 0.959041, Validation Accuracy: 0.929972
EarlyStopping counter: 3 out of 10
Epoch: 22, Training Loss: 0.232181, Validation Loss: 0.267840, Training Accuracy: 0.960411, Validation Accuracy: 0.928105
EarlyStopping counter: 4 out of 10
Epoch: 23, Training Loss: 0.239538, Validation Loss: 0.267700, Training Accuracy: 0.956800, Validation Accuracy: 0.928105
EarlyStopping counter: 5 out of 10
Epoch: 24, Training Loss: 0.236373, Validation Loss: 0.268022, Training Accuracy: 0.958979, Validation Accuracy: 0.929412
EarlyStopping counter: 6 out of 10
Epoch: 25, Training Loss: 0.235505, Validation Loss: 0.266401, Training Accuracy: 0.958419, Validation Accuracy: 0.928105
EarlyStopping counter: 7 out of 10
Epoch: 26, Training Loss: 0.234567, Validation Loss: 0.268097, Training Accuracy: 0.960349, Validation Accuracy: 0.928291
EarlyStopping counter: 8 out of 10
Epoch: 27, Training Loss: 0.242682, Validation Loss: 0.267253, Training Accuracy: 0.954871, Validation Accuracy: 0.929412
EarlyStopping counter: 9 out of 10
Epoch: 28, Training Loss: 0.239342, Validation Loss: 0.267043, Training Accuracy: 0.958730, Validation Accuracy: 0.927544
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 28
Ended Training Cycle
backbone.blocks.1.0._expand_conv
[64, 24, 123, 143, 90, 65, 55, 101, 48, 102, 1, 39, 100, 25, 96]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.0._expand_conv (Conv2d(21, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.0._expand_conv (Conv2d(21, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[1] prune_out_channels on backbone.blocks.1.0._expand_conv (Conv2d(21, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.0._bn0 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[2] prune_out_channels on backbone.blocks.1.0._bn0 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_38(HardtanhBackward0), #idxs=15
[3] prune_out_channels on _ElementWiseOp_38(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(129, 129, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=129, bias=False)), #idxs=15
[4] prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(129, 129, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=129, bias=False)) => prune_out_channels on backbone.blocks.1.0._bn1 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[5] prune_out_channels on backbone.blocks.1.0._bn1 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_37(HardtanhBackward0), #idxs=15
[6] prune_out_channels on _ElementWiseOp_37(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.0._project_conv (Conv2d(129, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.0._expand_conv
87
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False])
torch.Size([144])
torch.Size([129])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.1.0._depthwise_conv
86
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False])
torch.Size([144])
torch.Size([129])
backbone.blocks.1.0._depthwise_conv
[49, 39, 69, 84, 115, 66, 114, 54, 43, 13, 126, 52, 72]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(116, 116, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=116, bias=False)) => prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(116, 116, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=116, bias=False)), #idxs=13
[1] prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(116, 116, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=116, bias=False)) => prune_out_channels on _ElementWiseOp_38(HardtanhBackward0), #idxs=13
[2] prune_out_channels on backbone.blocks.1.0._depthwise_conv (Conv2d(116, 116, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=116, bias=False)) => prune_out_channels on backbone.blocks.1.0._bn1 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[3] prune_out_channels on backbone.blocks.1.0._bn1 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_37(HardtanhBackward0), #idxs=13
[4] prune_out_channels on _ElementWiseOp_37(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.0._project_conv (Conv2d(116, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[5] prune_out_channels on _ElementWiseOp_38(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.0._bn0 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[6] prune_out_channels on backbone.blocks.1.0._bn0 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.0._expand_conv (Conv2d(21, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.1.0._depthwise_conv
86
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True])
torch.Size([129])
torch.Size([116])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.0._expand_conv
87
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True])
torch.Size([129])
torch.Size([116])
backbone.blocks.1.0._project_conv
[21, 27, 11, 8]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.0._project_conv (Conv2d(116, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.0._project_conv (Conv2d(116, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[1] prune_out_channels on backbone.blocks.1.0._project_conv (Conv2d(116, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[2] prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_36(AddBackward0), #idxs=4
[3] prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.1.1._expand_conv (Conv2d(28, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[4] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_out_channels on backbone.blocks.1.1._bn2 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[5] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_out_channels on _ElementWiseOp_35(AddBackward0), #idxs=4
[6] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_in_channels on backbone.blocks.1.2._expand_conv (Conv2d(28, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[7] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_out_channels on backbone.blocks.1.2._bn2 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[8] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_out_channels on _ElementWiseOp_34(AddBackward0), #idxs=4
[9] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_in_channels on backbone.blocks.1.3._expand_conv (Conv2d(28, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[10] prune_out_channels on _ElementWiseOp_34(AddBackward0) => prune_out_channels on backbone.blocks.1.3._bn2 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[11] prune_out_channels on _ElementWiseOp_34(AddBackward0) => prune_in_channels on backbone.blocks.2.0._expand_conv (Conv2d(28, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[12] prune_out_channels on backbone.blocks.1.3._bn2 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.3._project_conv (Conv2d(192, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[13] prune_out_channels on backbone.blocks.1.2._bn2 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.2._project_conv (Conv2d(192, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[14] prune_out_channels on backbone.blocks.1.1._bn2 (BatchNorm2d(28, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.1._project_conv (Conv2d(192, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.0._project_conv
85
tensor([ True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True])
torch.Size([32])
torch.Size([28])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.3._project_conv
76
tensor([ True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True])
torch.Size([32])
torch.Size([28])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.2._project_conv
79
tensor([ True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True])
torch.Size([32])
torch.Size([28])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.1._project_conv
82
tensor([ True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True])
torch.Size([32])
torch.Size([28])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 28, 38, 38]           3,248           3,248
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 28, 38, 38]              56              56
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 192, 38, 38]           5,376           5,376
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 28, 38, 38]           5,376           5,376
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 28, 38, 38]              56              56
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 192, 38, 38]           5,376           5,376
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 28, 38, 38]           5,376           5,376
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 28, 38, 38]              56              56
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 192, 38, 38]           5,376           5,376
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 28, 38, 38]           5,376           5,376
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 28, 38, 38]              56              56
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 192, 38, 38]           5,376           5,376
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 192, 19, 19]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 192, 19, 19]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,752          10,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,723,292
Trainable params: 11,723,292
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.293689, Validation Loss: 0.322255, Training Accuracy: 0.936010, Validation Accuracy: 0.913539
Validation loss decreased (inf --> 0.322255).  Saving model ...
Epoch: 2, Training Loss: 0.278781, Validation Loss: 0.297097, Training Accuracy: 0.941612, Validation Accuracy: 0.919514
Validation loss decreased (0.322255 --> 0.297097).  Saving model ...
Epoch: 3, Training Loss: 0.273755, Validation Loss: 0.295049, Training Accuracy: 0.943168, Validation Accuracy: 0.920448
Validation loss decreased (0.297097 --> 0.295049).  Saving model ...
Epoch: 4, Training Loss: 0.263245, Validation Loss: 0.298419, Training Accuracy: 0.947463, Validation Accuracy: 0.916713
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.263116, Validation Loss: 0.306433, Training Accuracy: 0.946903, Validation Accuracy: 0.917647
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.260728, Validation Loss: 0.297009, Training Accuracy: 0.948335, Validation Accuracy: 0.919141
Epoch 00006: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 3 out of 10
Epoch: 7, Training Loss: 0.254062, Validation Loss: 0.284720, Training Accuracy: 0.953999, Validation Accuracy: 0.921569
Validation loss decreased (0.295049 --> 0.284720).  Saving model ...
Epoch: 8, Training Loss: 0.252371, Validation Loss: 0.285665, Training Accuracy: 0.953439, Validation Accuracy: 0.923996
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.254046, Validation Loss: 0.285310, Training Accuracy: 0.951821, Validation Accuracy: 0.921008
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.253965, Validation Loss: 0.285562, Training Accuracy: 0.952194, Validation Accuracy: 0.921008
EarlyStopping counter: 3 out of 10
Epoch: 11, Training Loss: 0.258160, Validation Loss: 0.285746, Training Accuracy: 0.949953, Validation Accuracy: 0.923810
Epoch 00011: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 4 out of 10
Epoch: 12, Training Loss: 0.256431, Validation Loss: 0.284225, Training Accuracy: 0.952817, Validation Accuracy: 0.923996
Validation loss decreased (0.284720 --> 0.284225).  Saving model ...
Epoch: 13, Training Loss: 0.253823, Validation Loss: 0.286158, Training Accuracy: 0.954124, Validation Accuracy: 0.921755
EarlyStopping counter: 1 out of 10
Epoch: 14, Training Loss: 0.255330, Validation Loss: 0.285662, Training Accuracy: 0.952319, Validation Accuracy: 0.922502
EarlyStopping counter: 2 out of 10
Epoch: 15, Training Loss: 0.252416, Validation Loss: 0.285430, Training Accuracy: 0.952319, Validation Accuracy: 0.923063
Epoch 00015: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 3 out of 10
Epoch: 16, Training Loss: 0.255395, Validation Loss: 0.285769, Training Accuracy: 0.953439, Validation Accuracy: 0.921942
EarlyStopping counter: 4 out of 10
Epoch: 17, Training Loss: 0.253074, Validation Loss: 0.285151, Training Accuracy: 0.954809, Validation Accuracy: 0.922129
EarlyStopping counter: 5 out of 10
Epoch: 18, Training Loss: 0.255138, Validation Loss: 0.284269, Training Accuracy: 0.953750, Validation Accuracy: 0.922502
EarlyStopping counter: 6 out of 10
Epoch: 19, Training Loss: 0.250953, Validation Loss: 0.285706, Training Accuracy: 0.952568, Validation Accuracy: 0.922502
EarlyStopping counter: 7 out of 10
Epoch: 20, Training Loss: 0.257050, Validation Loss: 0.284716, Training Accuracy: 0.949455, Validation Accuracy: 0.922316
EarlyStopping counter: 8 out of 10
Epoch: 21, Training Loss: 0.255597, Validation Loss: 0.285013, Training Accuracy: 0.954311, Validation Accuracy: 0.921382
EarlyStopping counter: 9 out of 10
Epoch: 22, Training Loss: 0.251531, Validation Loss: 0.286436, Training Accuracy: 0.952381, Validation Accuracy: 0.923249
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 22
Ended Training Cycle
backbone.blocks.1.1._expand_conv
[169, 13, 2, 109, 83, 119, 178, 30, 186, 77, 79, 129, 35, 19, 131, 156, 160, 106, 74, 34]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.1._expand_conv (Conv2d(28, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.1._expand_conv (Conv2d(28, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[1] prune_out_channels on backbone.blocks.1.1._expand_conv (Conv2d(28, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.1._bn0 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[2] prune_out_channels on backbone.blocks.1.1._bn0 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_42(HardtanhBackward0), #idxs=20
[3] prune_out_channels on _ElementWiseOp_42(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(172, 172, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=172, bias=False)), #idxs=20
[4] prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(172, 172, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=172, bias=False)) => prune_out_channels on backbone.blocks.1.1._bn1 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[5] prune_out_channels on backbone.blocks.1.1._bn1 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_41(HardtanhBackward0), #idxs=20
[6] prune_out_channels on _ElementWiseOp_41(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.1._project_conv (Conv2d(172, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.1._expand_conv
84
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([172])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.1.1._depthwise_conv
83
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([172])
backbone.blocks.1.1._depthwise_conv
[100, 0, 45, 74, 39, 99, 25, 130, 2, 12, 167, 97, 15, 40, 92, 162, 118, 10]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)) => prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)), #idxs=18
[1] prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)) => prune_out_channels on _ElementWiseOp_42(HardtanhBackward0), #idxs=18
[2] prune_out_channels on backbone.blocks.1.1._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)) => prune_out_channels on backbone.blocks.1.1._bn1 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[3] prune_out_channels on backbone.blocks.1.1._bn1 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_41(HardtanhBackward0), #idxs=18
[4] prune_out_channels on _ElementWiseOp_41(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.1._project_conv (Conv2d(154, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[5] prune_out_channels on _ElementWiseOp_42(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.1._bn0 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[6] prune_out_channels on backbone.blocks.1.1._bn0 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.1._expand_conv (Conv2d(28, 154, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.1.1._depthwise_conv
83
tensor([False,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True])
torch.Size([172])
torch.Size([154])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.1._expand_conv
84
tensor([False,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True])
torch.Size([172])
torch.Size([154])
backbone.blocks.1.1._project_conv
[14, 1, 17]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.1._project_conv (Conv2d(154, 25, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.1._project_conv (Conv2d(154, 25, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[1] prune_out_channels on backbone.blocks.1.1._project_conv (Conv2d(154, 25, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.1._bn2 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[2] prune_out_channels on backbone.blocks.1.1._bn2 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_36(AddBackward0), #idxs=3
[3] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[4] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_out_channels on _ElementWiseOp_35(AddBackward0), #idxs=3
[5] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_in_channels on backbone.blocks.1.2._expand_conv (Conv2d(25, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[6] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_out_channels on backbone.blocks.1.2._bn2 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[7] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_out_channels on _ElementWiseOp_34(AddBackward0), #idxs=3
[8] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_in_channels on backbone.blocks.1.3._expand_conv (Conv2d(25, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[9] prune_out_channels on _ElementWiseOp_34(AddBackward0) => prune_out_channels on backbone.blocks.1.3._bn2 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[10] prune_out_channels on _ElementWiseOp_34(AddBackward0) => prune_in_channels on backbone.blocks.2.0._expand_conv (Conv2d(25, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[11] prune_out_channels on backbone.blocks.1.3._bn2 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.3._project_conv (Conv2d(192, 25, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[12] prune_out_channels on backbone.blocks.1.2._bn2 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.2._project_conv (Conv2d(192, 25, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[13] prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.0._project_conv (Conv2d(116, 25, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[14] prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(25, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.1.1._expand_conv (Conv2d(25, 154, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.1._project_conv
82
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([28])
torch.Size([25])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.3._project_conv
76
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([28])
torch.Size([25])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.2._project_conv
79
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([28])
torch.Size([25])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.0._project_conv
85
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([28])
torch.Size([25])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 25, 38, 38]           2,900           2,900
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 25, 38, 38]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 25, 38, 38]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 25, 38, 38]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 192, 38, 38]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 25, 38, 38]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 25, 38, 38]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 192, 38, 38]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 25, 38, 38]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 25, 38, 38]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 192, 38, 38]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 192, 19, 19]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 192, 19, 19]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,752          10,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,716,494
Trainable params: 11,716,494
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.371456, Validation Loss: 0.343353, Training Accuracy: 0.902521, Validation Accuracy: 0.900280
Validation loss decreased (inf --> 0.343353).  Saving model ...
Epoch: 2, Training Loss: 0.321901, Validation Loss: 0.333072, Training Accuracy: 0.919514, Validation Accuracy: 0.907750
Validation loss decreased (0.343353 --> 0.333072).  Saving model ...
Epoch: 3, Training Loss: 0.303293, Validation Loss: 0.319117, Training Accuracy: 0.929474, Validation Accuracy: 0.907750
Validation loss decreased (0.333072 --> 0.319117).  Saving model ...
Epoch: 4, Training Loss: 0.294244, Validation Loss: 0.314385, Training Accuracy: 0.934827, Validation Accuracy: 0.911671
Validation loss decreased (0.319117 --> 0.314385).  Saving model ...
Epoch: 5, Training Loss: 0.286489, Validation Loss: 0.319561, Training Accuracy: 0.935823, Validation Accuracy: 0.914099
EarlyStopping counter: 1 out of 10
Epoch: 6, Training Loss: 0.284139, Validation Loss: 0.308662, Training Accuracy: 0.937815, Validation Accuracy: 0.913539
Validation loss decreased (0.314385 --> 0.308662).  Saving model ...
Epoch: 7, Training Loss: 0.280463, Validation Loss: 0.305118, Training Accuracy: 0.941239, Validation Accuracy: 0.914846
Validation loss decreased (0.308662 --> 0.305118).  Saving model ...
Epoch: 8, Training Loss: 0.273827, Validation Loss: 0.306218, Training Accuracy: 0.942733, Validation Accuracy: 0.913352
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.275187, Validation Loss: 0.310325, Training Accuracy: 0.943293, Validation Accuracy: 0.912979
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.270738, Validation Loss: 0.297453, Training Accuracy: 0.947526, Validation Accuracy: 0.916713
Validation loss decreased (0.305118 --> 0.297453).  Saving model ...
Epoch: 11, Training Loss: 0.266229, Validation Loss: 0.304842, Training Accuracy: 0.948335, Validation Accuracy: 0.917834
EarlyStopping counter: 1 out of 10
Epoch: 12, Training Loss: 0.266441, Validation Loss: 0.302760, Training Accuracy: 0.948771, Validation Accuracy: 0.918768
EarlyStopping counter: 2 out of 10
Epoch: 13, Training Loss: 0.264833, Validation Loss: 0.302203, Training Accuracy: 0.949206, Validation Accuracy: 0.914099
EarlyStopping counter: 3 out of 10
Epoch: 14, Training Loss: 0.258491, Validation Loss: 0.305694, Training Accuracy: 0.950887, Validation Accuracy: 0.915966
Epoch 00014: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 15, Training Loss: 0.262520, Validation Loss: 0.296371, Training Accuracy: 0.951572, Validation Accuracy: 0.917834
Validation loss decreased (0.297453 --> 0.296371).  Saving model ...
Epoch: 16, Training Loss: 0.252497, Validation Loss: 0.296412, Training Accuracy: 0.955618, Validation Accuracy: 0.919328
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.253392, Validation Loss: 0.295596, Training Accuracy: 0.954311, Validation Accuracy: 0.918021
Validation loss decreased (0.296371 --> 0.295596).  Saving model ...
Epoch: 18, Training Loss: 0.255550, Validation Loss: 0.294164, Training Accuracy: 0.951447, Validation Accuracy: 0.919701
Epoch 00018: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.295596 --> 0.294164).  Saving model ...
Epoch: 19, Training Loss: 0.250866, Validation Loss: 0.295251, Training Accuracy: 0.953999, Validation Accuracy: 0.918394
EarlyStopping counter: 1 out of 10
Epoch: 20, Training Loss: 0.255288, Validation Loss: 0.294300, Training Accuracy: 0.953999, Validation Accuracy: 0.919141
EarlyStopping counter: 2 out of 10
Epoch: 21, Training Loss: 0.256438, Validation Loss: 0.295690, Training Accuracy: 0.952132, Validation Accuracy: 0.918394
EarlyStopping counter: 3 out of 10
Epoch: 22, Training Loss: 0.256511, Validation Loss: 0.295359, Training Accuracy: 0.953315, Validation Accuracy: 0.919701
Epoch 00022: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 4 out of 10
Epoch: 23, Training Loss: 0.251944, Validation Loss: 0.295666, Training Accuracy: 0.953252, Validation Accuracy: 0.918021
EarlyStopping counter: 5 out of 10
Epoch: 24, Training Loss: 0.255564, Validation Loss: 0.294834, Training Accuracy: 0.952443, Validation Accuracy: 0.919141
EarlyStopping counter: 6 out of 10
Epoch: 25, Training Loss: 0.259929, Validation Loss: 0.294351, Training Accuracy: 0.951261, Validation Accuracy: 0.918581
EarlyStopping counter: 7 out of 10
Epoch: 26, Training Loss: 0.257227, Validation Loss: 0.296278, Training Accuracy: 0.952256, Validation Accuracy: 0.917647
EarlyStopping counter: 8 out of 10
Epoch: 27, Training Loss: 0.256378, Validation Loss: 0.294948, Training Accuracy: 0.952941, Validation Accuracy: 0.917087
EarlyStopping counter: 9 out of 10
Epoch: 28, Training Loss: 0.254947, Validation Loss: 0.294373, Training Accuracy: 0.953626, Validation Accuracy: 0.917460
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 28
Ended Training Cycle
backbone.blocks.1.2._expand_conv
[136, 149, 109, 81, 70, 152, 120, 61, 31, 148, 171, 91, 107, 135, 37, 58, 48, 18, 156, 115]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.2._expand_conv (Conv2d(25, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.2._expand_conv (Conv2d(25, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[1] prune_out_channels on backbone.blocks.1.2._expand_conv (Conv2d(25, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.2._bn0 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[2] prune_out_channels on backbone.blocks.1.2._bn0 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_44(HardtanhBackward0), #idxs=20
[3] prune_out_channels on _ElementWiseOp_44(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(172, 172, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=172, bias=False)), #idxs=20
[4] prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(172, 172, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=172, bias=False)) => prune_out_channels on backbone.blocks.1.2._bn1 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[5] prune_out_channels on backbone.blocks.1.2._bn1 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_43(HardtanhBackward0), #idxs=20
[6] prune_out_channels on _ElementWiseOp_43(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.2._project_conv (Conv2d(172, 25, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.2._expand_conv
81
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([172])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.1.2._depthwise_conv
80
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([172])
backbone.blocks.1.2._depthwise_conv
[81, 49, 22, 56, 20, 2, 160, 105, 128, 104, 134, 121, 171, 124, 106, 132, 83, 77]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)) => prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)), #idxs=18
[1] prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)) => prune_out_channels on _ElementWiseOp_44(HardtanhBackward0), #idxs=18
[2] prune_out_channels on backbone.blocks.1.2._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)) => prune_out_channels on backbone.blocks.1.2._bn1 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[3] prune_out_channels on backbone.blocks.1.2._bn1 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_43(HardtanhBackward0), #idxs=18
[4] prune_out_channels on _ElementWiseOp_43(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.2._project_conv (Conv2d(154, 25, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[5] prune_out_channels on _ElementWiseOp_44(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.2._bn0 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[6] prune_out_channels on backbone.blocks.1.2._bn0 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.2._expand_conv (Conv2d(25, 154, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.1.2._depthwise_conv
80
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False])
torch.Size([172])
torch.Size([154])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.2._expand_conv
81
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False])
torch.Size([172])
torch.Size([154])
backbone.blocks.1.2._project_conv
[5, 19, 0]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.2._project_conv (Conv2d(154, 22, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.2._project_conv (Conv2d(154, 22, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[1] prune_out_channels on backbone.blocks.1.2._project_conv (Conv2d(154, 22, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.2._bn2 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[2] prune_out_channels on backbone.blocks.1.2._bn2 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_35(AddBackward0), #idxs=3
[3] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_out_channels on _ElementWiseOp_36(AddBackward0), #idxs=3
[4] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_out_channels on _ElementWiseOp_34(AddBackward0), #idxs=3
[5] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_in_channels on backbone.blocks.1.3._expand_conv (Conv2d(22, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[6] prune_out_channels on _ElementWiseOp_34(AddBackward0) => prune_out_channels on backbone.blocks.1.3._bn2 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[7] prune_out_channels on _ElementWiseOp_34(AddBackward0) => prune_in_channels on backbone.blocks.2.0._expand_conv (Conv2d(22, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[8] prune_out_channels on backbone.blocks.1.3._bn2 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.3._project_conv (Conv2d(192, 22, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[9] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_out_channels on backbone.blocks.1.1._bn2 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[10] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[11] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_in_channels on backbone.blocks.1.2._expand_conv (Conv2d(22, 154, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[12] prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.0._project_conv (Conv2d(116, 22, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[13] prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.1.1._expand_conv (Conv2d(22, 154, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[14] prune_out_channels on backbone.blocks.1.1._bn2 (BatchNorm2d(22, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.1._project_conv (Conv2d(154, 22, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.2._project_conv
79
tensor([False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True])
torch.Size([25])
torch.Size([22])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.3._project_conv
76
tensor([False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True])
torch.Size([25])
torch.Size([22])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.0._project_conv
85
tensor([False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True])
torch.Size([25])
torch.Size([22])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.1._project_conv
82
tensor([False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True])
torch.Size([25])
torch.Size([22])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 22, 38, 38]           2,552           2,552
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 22, 38, 38]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           3,388           3,388
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 22, 38, 38]           3,388           3,388
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 22, 38, 38]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           3,388           3,388
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 22, 38, 38]           3,388           3,388
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 22, 38, 38]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 192, 38, 38]           4,224           4,224
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 192, 38, 38]           1,728           1,728
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 22, 38, 38]           4,224           4,224
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 22, 38, 38]              44              44
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 192, 38, 38]           4,224           4,224
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 192, 19, 19]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 192, 19, 19]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,752          10,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,710,152
Trainable params: 11,710,152
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.325916, Validation Loss: 0.374682, Training Accuracy: 0.922938, Validation Accuracy: 0.892810
Validation loss decreased (inf --> 0.374682).  Saving model ...
Epoch: 2, Training Loss: 0.303309, Validation Loss: 0.330276, Training Accuracy: 0.929101, Validation Accuracy: 0.904762
Validation loss decreased (0.374682 --> 0.330276).  Saving model ...
Epoch: 3, Training Loss: 0.295968, Validation Loss: 0.322734, Training Accuracy: 0.936508, Validation Accuracy: 0.909430
Validation loss decreased (0.330276 --> 0.322734).  Saving model ...
Epoch: 4, Training Loss: 0.289026, Validation Loss: 0.335044, Training Accuracy: 0.940430, Validation Accuracy: 0.912045
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.283839, Validation Loss: 0.325934, Training Accuracy: 0.939371, Validation Accuracy: 0.907750
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.272634, Validation Loss: 0.305177, Training Accuracy: 0.945098, Validation Accuracy: 0.913539
Validation loss decreased (0.322734 --> 0.305177).  Saving model ...
Epoch: 7, Training Loss: 0.272469, Validation Loss: 0.314446, Training Accuracy: 0.947214, Validation Accuracy: 0.909430
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.268054, Validation Loss: 0.312229, Training Accuracy: 0.947712, Validation Accuracy: 0.914099
EarlyStopping counter: 2 out of 10
Epoch: 9, Training Loss: 0.264739, Validation Loss: 0.318586, Training Accuracy: 0.948086, Validation Accuracy: 0.916713
EarlyStopping counter: 3 out of 10
Epoch: 10, Training Loss: 0.261525, Validation Loss: 0.309470, Training Accuracy: 0.948273, Validation Accuracy: 0.913165
Epoch 00010: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 11, Training Loss: 0.263588, Validation Loss: 0.300980, Training Accuracy: 0.951696, Validation Accuracy: 0.916153
Validation loss decreased (0.305177 --> 0.300980).  Saving model ...
Epoch: 12, Training Loss: 0.253954, Validation Loss: 0.303957, Training Accuracy: 0.952879, Validation Accuracy: 0.915780
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.259319, Validation Loss: 0.302596, Training Accuracy: 0.953315, Validation Accuracy: 0.917274
EarlyStopping counter: 2 out of 10
Epoch: 14, Training Loss: 0.256290, Validation Loss: 0.301980, Training Accuracy: 0.952256, Validation Accuracy: 0.914846
Epoch 00014: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 3 out of 10
Epoch: 15, Training Loss: 0.259873, Validation Loss: 0.301945, Training Accuracy: 0.954248, Validation Accuracy: 0.916527
EarlyStopping counter: 4 out of 10
Epoch: 16, Training Loss: 0.253914, Validation Loss: 0.302774, Training Accuracy: 0.954746, Validation Accuracy: 0.917274
EarlyStopping counter: 5 out of 10
Epoch: 17, Training Loss: 0.255392, Validation Loss: 0.302359, Training Accuracy: 0.953750, Validation Accuracy: 0.915780
EarlyStopping counter: 6 out of 10
Epoch: 18, Training Loss: 0.252779, Validation Loss: 0.303461, Training Accuracy: 0.954062, Validation Accuracy: 0.914846
Epoch 00018: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 7 out of 10
Epoch: 19, Training Loss: 0.258762, Validation Loss: 0.302840, Training Accuracy: 0.953128, Validation Accuracy: 0.917087
EarlyStopping counter: 8 out of 10
Epoch: 20, Training Loss: 0.251327, Validation Loss: 0.303726, Training Accuracy: 0.954062, Validation Accuracy: 0.917460
EarlyStopping counter: 9 out of 10
Epoch: 21, Training Loss: 0.253968, Validation Loss: 0.302711, Training Accuracy: 0.953252, Validation Accuracy: 0.917087
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 21
Ended Training Cycle
backbone.blocks.1.3._expand_conv
[153, 148, 149, 157, 62, 71, 147, 122, 112, 26, 133, 54, 110, 24, 141, 15, 96, 176, 98, 19]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.3._expand_conv (Conv2d(22, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.3._expand_conv (Conv2d(22, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[1] prune_out_channels on backbone.blocks.1.3._expand_conv (Conv2d(22, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.3._bn0 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[2] prune_out_channels on backbone.blocks.1.3._bn0 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_46(HardtanhBackward0), #idxs=20
[3] prune_out_channels on _ElementWiseOp_46(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(172, 172, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=172, bias=False)), #idxs=20
[4] prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(172, 172, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=172, bias=False)) => prune_out_channels on backbone.blocks.1.3._bn1 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[5] prune_out_channels on backbone.blocks.1.3._bn1 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_45(HardtanhBackward0), #idxs=20
[6] prune_out_channels on _ElementWiseOp_45(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.3._project_conv (Conv2d(172, 22, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.3._expand_conv
78
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False, False, False,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([172])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.1.3._depthwise_conv
77
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False, False, False,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([192])
torch.Size([172])
backbone.blocks.1.3._depthwise_conv
[73, 157, 139, 28, 102, 127, 118, 103, 60, 167, 74, 91, 32, 11, 63, 129, 5, 15]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)) => prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)), #idxs=18
[1] prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)) => prune_out_channels on _ElementWiseOp_46(HardtanhBackward0), #idxs=18
[2] prune_out_channels on backbone.blocks.1.3._depthwise_conv (Conv2d(154, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=154, bias=False)) => prune_out_channels on backbone.blocks.1.3._bn1 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[3] prune_out_channels on backbone.blocks.1.3._bn1 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_45(HardtanhBackward0), #idxs=18
[4] prune_out_channels on _ElementWiseOp_45(HardtanhBackward0) => prune_in_channels on backbone.blocks.1.3._project_conv (Conv2d(154, 22, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[5] prune_out_channels on _ElementWiseOp_46(HardtanhBackward0) => prune_out_channels on backbone.blocks.1.3._bn0 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[6] prune_out_channels on backbone.blocks.1.3._bn0 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.3._expand_conv (Conv2d(22, 154, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.1.3._depthwise_conv
77
tensor([ True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True])
torch.Size([172])
torch.Size([154])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.3._expand_conv
78
tensor([ True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True])
torch.Size([172])
torch.Size([154])
backbone.blocks.1.3._project_conv
[1, 5, 3]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.1.3._project_conv (Conv2d(154, 19, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.3._project_conv (Conv2d(154, 19, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[1] prune_out_channels on backbone.blocks.1.3._project_conv (Conv2d(154, 19, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.1.3._bn2 (BatchNorm2d(19, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[2] prune_out_channels on backbone.blocks.1.3._bn2 (BatchNorm2d(19, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_34(AddBackward0), #idxs=3
[3] prune_out_channels on _ElementWiseOp_34(AddBackward0) => prune_out_channels on _ElementWiseOp_35(AddBackward0), #idxs=3
[4] prune_out_channels on _ElementWiseOp_34(AddBackward0) => prune_in_channels on backbone.blocks.2.0._expand_conv (Conv2d(19, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[5] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_out_channels on backbone.blocks.1.2._bn2 (BatchNorm2d(19, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[6] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_out_channels on _ElementWiseOp_36(AddBackward0), #idxs=3
[7] prune_out_channels on _ElementWiseOp_35(AddBackward0) => prune_in_channels on backbone.blocks.1.3._expand_conv (Conv2d(19, 154, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[8] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_out_channels on backbone.blocks.1.1._bn2 (BatchNorm2d(19, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[9] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(19, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=3
[10] prune_out_channels on _ElementWiseOp_36(AddBackward0) => prune_in_channels on backbone.blocks.1.2._expand_conv (Conv2d(19, 154, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[11] prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(19, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.0._project_conv (Conv2d(116, 19, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[12] prune_out_channels on backbone.blocks.1.0._bn2 (BatchNorm2d(19, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.1.1._expand_conv (Conv2d(19, 154, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[13] prune_out_channels on backbone.blocks.1.1._bn2 (BatchNorm2d(19, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.1._project_conv (Conv2d(154, 19, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
[14] prune_out_channels on backbone.blocks.1.2._bn2 (BatchNorm2d(19, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.1.2._project_conv (Conv2d(154, 19, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=3
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.3._project_conv
76
tensor([ True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([22])
torch.Size([19])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.0._project_conv
85
tensor([ True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([22])
torch.Size([19])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.1._project_conv
82
tensor([ True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([22])
torch.Size([19])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.1.2._project_conv
79
tensor([ True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([22])
torch.Size([19])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 192, 38, 38]           3,648           3,648
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 192, 38, 38]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 192, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 192, 19, 19]           4,800           4,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 192, 19, 19]             384             384
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 56, 19, 19]          10,752          10,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 56, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 56, 19, 19]             112             112
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          18,816          18,816
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,704,266
Trainable params: 11,704,266
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.382481, Validation Loss: 0.388918, Training Accuracy: 0.896172, Validation Accuracy: 0.884781
Validation loss decreased (inf --> 0.388918).  Saving model ...
Epoch: 2, Training Loss: 0.346535, Validation Loss: 0.358320, Training Accuracy: 0.913663, Validation Accuracy: 0.891503
Validation loss decreased (0.388918 --> 0.358320).  Saving model ...
Epoch: 3, Training Loss: 0.327544, Validation Loss: 0.349023, Training Accuracy: 0.922316, Validation Accuracy: 0.899533
Validation loss decreased (0.358320 --> 0.349023).  Saving model ...
Epoch: 4, Training Loss: 0.316632, Validation Loss: 0.350028, Training Accuracy: 0.923498, Validation Accuracy: 0.895798
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.311406, Validation Loss: 0.347061, Training Accuracy: 0.926424, Validation Accuracy: 0.906443
Validation loss decreased (0.349023 --> 0.347061).  Saving model ...
Epoch: 6, Training Loss: 0.310481, Validation Loss: 0.342775, Training Accuracy: 0.928727, Validation Accuracy: 0.900840
Validation loss decreased (0.347061 --> 0.342775).  Saving model ...
Epoch: 7, Training Loss: 0.296757, Validation Loss: 0.329798, Training Accuracy: 0.935761, Validation Accuracy: 0.905882
Validation loss decreased (0.342775 --> 0.329798).  Saving model ...
Epoch: 8, Training Loss: 0.300516, Validation Loss: 0.339677, Training Accuracy: 0.935076, Validation Accuracy: 0.901027
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.296508, Validation Loss: 0.319476, Training Accuracy: 0.935014, Validation Accuracy: 0.908683
Validation loss decreased (0.329798 --> 0.319476).  Saving model ...
Epoch: 10, Training Loss: 0.287783, Validation Loss: 0.318696, Training Accuracy: 0.941363, Validation Accuracy: 0.908497
Validation loss decreased (0.319476 --> 0.318696).  Saving model ...
Epoch: 11, Training Loss: 0.284373, Validation Loss: 0.329122, Training Accuracy: 0.940927, Validation Accuracy: 0.908870
EarlyStopping counter: 1 out of 10
Epoch: 12, Training Loss: 0.286771, Validation Loss: 0.332185, Training Accuracy: 0.940927, Validation Accuracy: 0.907376
EarlyStopping counter: 2 out of 10
Epoch: 13, Training Loss: 0.285654, Validation Loss: 0.328918, Training Accuracy: 0.943791, Validation Accuracy: 0.904388
Epoch 00013: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 3 out of 10
Epoch: 14, Training Loss: 0.275014, Validation Loss: 0.316201, Training Accuracy: 0.946841, Validation Accuracy: 0.909991
Validation loss decreased (0.318696 --> 0.316201).  Saving model ...
Epoch: 15, Training Loss: 0.271666, Validation Loss: 0.313946, Training Accuracy: 0.948459, Validation Accuracy: 0.911111
Validation loss decreased (0.316201 --> 0.313946).  Saving model ...
Epoch: 16, Training Loss: 0.272189, Validation Loss: 0.314954, Training Accuracy: 0.947588, Validation Accuracy: 0.910551
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.274210, Validation Loss: 0.315498, Training Accuracy: 0.948273, Validation Accuracy: 0.909617
Epoch 00017: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 18, Training Loss: 0.268611, Validation Loss: 0.315199, Training Accuracy: 0.949580, Validation Accuracy: 0.910551
EarlyStopping counter: 3 out of 10
Epoch: 19, Training Loss: 0.271782, Validation Loss: 0.314343, Training Accuracy: 0.947588, Validation Accuracy: 0.910551
EarlyStopping counter: 4 out of 10
Epoch: 20, Training Loss: 0.270636, Validation Loss: 0.314078, Training Accuracy: 0.949020, Validation Accuracy: 0.910924
EarlyStopping counter: 5 out of 10
Epoch: 21, Training Loss: 0.271320, Validation Loss: 0.314869, Training Accuracy: 0.948024, Validation Accuracy: 0.910924
Epoch 00021: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 6 out of 10
Epoch: 22, Training Loss: 0.267589, Validation Loss: 0.314254, Training Accuracy: 0.948895, Validation Accuracy: 0.910551
EarlyStopping counter: 7 out of 10
Epoch: 23, Training Loss: 0.269415, Validation Loss: 0.314909, Training Accuracy: 0.950327, Validation Accuracy: 0.909244
EarlyStopping counter: 8 out of 10
Epoch: 24, Training Loss: 0.269951, Validation Loss: 0.315159, Training Accuracy: 0.946965, Validation Accuracy: 0.909804
EarlyStopping counter: 9 out of 10
Epoch: 25, Training Loss: 0.271405, Validation Loss: 0.314513, Training Accuracy: 0.948646, Validation Accuracy: 0.910738
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 25
Ended Training Cycle
backbone.blocks.2.0._expand_conv
[27, 103, 55, 167, 118, 138, 134, 158, 169, 86, 109, 99, 21, 127, 56, 19, 141, 188, 166, 151]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.0._expand_conv (Conv2d(19, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.0._expand_conv (Conv2d(19, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[1] prune_out_channels on backbone.blocks.2.0._expand_conv (Conv2d(19, 172, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.0._bn0 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[2] prune_out_channels on backbone.blocks.2.0._bn0 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_33(HardtanhBackward0), #idxs=20
[3] prune_out_channels on _ElementWiseOp_33(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(172, 172, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=172, bias=False)), #idxs=20
[4] prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(172, 172, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=172, bias=False)) => prune_out_channels on backbone.blocks.2.0._bn1 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[5] prune_out_channels on backbone.blocks.2.0._bn1 (BatchNorm2d(172, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_32(HardtanhBackward0), #idxs=20
[6] prune_out_channels on _ElementWiseOp_32(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.0._project_conv (Conv2d(172, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.0._expand_conv
75
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True])
torch.Size([192])
torch.Size([172])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.2.0._depthwise_conv
74
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True])
torch.Size([192])
torch.Size([172])
backbone.blocks.2.0._depthwise_conv
[113, 17, 97, 30, 144, 48, 93, 150, 117, 142, 22, 42, 154, 161, 57, 63, 62, 147]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(154, 154, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=154, bias=False)) => prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(154, 154, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=154, bias=False)), #idxs=18
[1] prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(154, 154, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=154, bias=False)) => prune_out_channels on _ElementWiseOp_33(HardtanhBackward0), #idxs=18
[2] prune_out_channels on backbone.blocks.2.0._depthwise_conv (Conv2d(154, 154, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=154, bias=False)) => prune_out_channels on backbone.blocks.2.0._bn1 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[3] prune_out_channels on backbone.blocks.2.0._bn1 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_32(HardtanhBackward0), #idxs=18
[4] prune_out_channels on _ElementWiseOp_32(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.0._project_conv (Conv2d(154, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[5] prune_out_channels on _ElementWiseOp_33(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.0._bn0 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[6] prune_out_channels on backbone.blocks.2.0._bn0 (BatchNorm2d(154, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.0._expand_conv (Conv2d(19, 154, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.2.0._depthwise_conv
74
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True, False,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([172])
torch.Size([154])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.0._expand_conv
75
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True, False,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([172])
torch.Size([154])
backbone.blocks.2.0._project_conv
[13, 48, 46, 50, 23, 22]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.0._project_conv (Conv2d(154, 50, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.0._project_conv (Conv2d(154, 50, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=6
[1] prune_out_channels on backbone.blocks.2.0._project_conv (Conv2d(154, 50, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(50, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=6
[2] prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(50, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_31(AddBackward0), #idxs=6
[3] prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(50, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.2.1._expand_conv (Conv2d(50, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=6
[4] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_out_channels on backbone.blocks.2.1._bn2 (BatchNorm2d(50, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=6
[5] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_out_channels on _ElementWiseOp_30(AddBackward0), #idxs=6
[6] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_in_channels on backbone.blocks.2.2._expand_conv (Conv2d(50, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=6
[7] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_out_channels on backbone.blocks.2.2._bn2 (BatchNorm2d(50, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=6
[8] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_out_channels on _ElementWiseOp_29(AddBackward0), #idxs=6
[9] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_in_channels on backbone.blocks.2.3._expand_conv (Conv2d(50, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=6
[10] prune_out_channels on _ElementWiseOp_29(AddBackward0) => prune_out_channels on backbone.blocks.2.3._bn2 (BatchNorm2d(50, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=6
[11] prune_out_channels on _ElementWiseOp_29(AddBackward0) => prune_in_channels on backbone.blocks.3.0._expand_conv (Conv2d(50, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=6
[12] prune_out_channels on backbone.blocks.2.3._bn2 (BatchNorm2d(50, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.3._project_conv (Conv2d(336, 50, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=6
[13] prune_out_channels on backbone.blocks.2.2._bn2 (BatchNorm2d(50, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.2._project_conv (Conv2d(336, 50, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=6
[14] prune_out_channels on backbone.blocks.2.1._bn2 (BatchNorm2d(50, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.1._project_conv (Conv2d(336, 50, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=6
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.0._project_conv
73
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
        False,  True,  True,  True,  True,  True])
torch.Size([56])
torch.Size([50])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.3._project_conv
64
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
        False,  True,  True,  True,  True,  True])
torch.Size([56])
torch.Size([50])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.2._project_conv
67
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
        False,  True,  True,  True,  True,  True])
torch.Size([56])
torch.Size([50])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.1._project_conv
70
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
        False,  True,  True,  True,  True,  True])
torch.Size([56])
torch.Size([50])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 50, 19, 19]           7,700           7,700
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 50, 19, 19]             100             100
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 336, 19, 19]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 50, 19, 19]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 50, 19, 19]             100             100
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 50, 19, 19]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 50, 19, 19]             100             100
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 50, 19, 19]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 50, 19, 19]             100             100
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,685,230
Trainable params: 11,685,230
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.348641, Validation Loss: 0.364572, Training Accuracy: 0.912792, Validation Accuracy: 0.887395
Validation loss decreased (inf --> 0.364572).  Saving model ...
Epoch: 2, Training Loss: 0.324670, Validation Loss: 0.347397, Training Accuracy: 0.925428, Validation Accuracy: 0.896359
Validation loss decreased (0.364572 --> 0.347397).  Saving model ...
Epoch: 3, Training Loss: 0.311202, Validation Loss: 0.336033, Training Accuracy: 0.925117, Validation Accuracy: 0.897292
Validation loss decreased (0.347397 --> 0.336033).  Saving model ...
Epoch: 4, Training Loss: 0.305155, Validation Loss: 0.339297, Training Accuracy: 0.931217, Validation Accuracy: 0.901587
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.305447, Validation Loss: 0.389310, Training Accuracy: 0.930408, Validation Accuracy: 0.880859
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.303301, Validation Loss: 0.331830, Training Accuracy: 0.936072, Validation Accuracy: 0.904949
Validation loss decreased (0.336033 --> 0.331830).  Saving model ...
Epoch: 7, Training Loss: 0.298513, Validation Loss: 0.325076, Training Accuracy: 0.937068, Validation Accuracy: 0.907937
Validation loss decreased (0.331830 --> 0.325076).  Saving model ...
Epoch: 8, Training Loss: 0.296765, Validation Loss: 0.336327, Training Accuracy: 0.934703, Validation Accuracy: 0.907750
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.290495, Validation Loss: 0.334747, Training Accuracy: 0.940678, Validation Accuracy: 0.905696
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.278606, Validation Loss: 0.324805, Training Accuracy: 0.944538, Validation Accuracy: 0.904575
Validation loss decreased (0.325076 --> 0.324805).  Saving model ...
Epoch: 11, Training Loss: 0.284149, Validation Loss: 0.358084, Training Accuracy: 0.940367, Validation Accuracy: 0.898599
Epoch 00011: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 1 out of 10
Epoch: 12, Training Loss: 0.282901, Validation Loss: 0.318356, Training Accuracy: 0.947588, Validation Accuracy: 0.911298
Validation loss decreased (0.324805 --> 0.318356).  Saving model ...
Epoch: 13, Training Loss: 0.276926, Validation Loss: 0.316821, Training Accuracy: 0.946281, Validation Accuracy: 0.910364
Validation loss decreased (0.318356 --> 0.316821).  Saving model ...
Epoch: 14, Training Loss: 0.276407, Validation Loss: 0.315266, Training Accuracy: 0.946654, Validation Accuracy: 0.910738
Validation loss decreased (0.316821 --> 0.315266).  Saving model ...
Epoch: 15, Training Loss: 0.273604, Validation Loss: 0.318224, Training Accuracy: 0.946965, Validation Accuracy: 0.908870
Epoch 00015: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 1 out of 10
Epoch: 16, Training Loss: 0.278048, Validation Loss: 0.317424, Training Accuracy: 0.949455, Validation Accuracy: 0.912045
EarlyStopping counter: 2 out of 10
Epoch: 17, Training Loss: 0.271187, Validation Loss: 0.317695, Training Accuracy: 0.949269, Validation Accuracy: 0.913352
EarlyStopping counter: 3 out of 10
Epoch: 18, Training Loss: 0.271558, Validation Loss: 0.318409, Training Accuracy: 0.949642, Validation Accuracy: 0.912792
EarlyStopping counter: 4 out of 10
Epoch: 19, Training Loss: 0.273093, Validation Loss: 0.317306, Training Accuracy: 0.950140, Validation Accuracy: 0.912232
Epoch 00019: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 5 out of 10
Epoch: 20, Training Loss: 0.268913, Validation Loss: 0.317129, Training Accuracy: 0.949144, Validation Accuracy: 0.912605
EarlyStopping counter: 6 out of 10
Epoch: 21, Training Loss: 0.272025, Validation Loss: 0.317106, Training Accuracy: 0.950202, Validation Accuracy: 0.913725
EarlyStopping counter: 7 out of 10
Epoch: 22, Training Loss: 0.272433, Validation Loss: 0.316677, Training Accuracy: 0.951572, Validation Accuracy: 0.912418
EarlyStopping counter: 8 out of 10
Epoch: 23, Training Loss: 0.274580, Validation Loss: 0.317498, Training Accuracy: 0.947837, Validation Accuracy: 0.913165
EarlyStopping counter: 9 out of 10
Epoch: 24, Training Loss: 0.266943, Validation Loss: 0.317307, Training Accuracy: 0.951572, Validation Accuracy: 0.913912
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 24
Ended Training Cycle
backbone.blocks.2.1._expand_conv
[262, 214, 199, 156, 55, 47, 99, 177, 124, 228, 22, 11, 93, 297, 243, 32, 328, 92, 42, 244, 52, 241, 210, 10, 317, 169, 280, 105, 261, 83, 96, 314, 178, 271]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.1._expand_conv (Conv2d(50, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.1._expand_conv (Conv2d(50, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=34
[1] prune_out_channels on backbone.blocks.2.1._expand_conv (Conv2d(50, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.1._bn0 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=34
[2] prune_out_channels on backbone.blocks.2.1._bn0 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_48(HardtanhBackward0), #idxs=34
[3] prune_out_channels on _ElementWiseOp_48(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(302, 302, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=302, bias=False)), #idxs=34
[4] prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(302, 302, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=302, bias=False)) => prune_out_channels on backbone.blocks.2.1._bn1 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=34
[5] prune_out_channels on backbone.blocks.2.1._bn1 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_47(HardtanhBackward0), #idxs=34
[6] prune_out_channels on _ElementWiseOp_47(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.1._project_conv (Conv2d(302, 50, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=34
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.1._expand_conv
72
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([302])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.2.1._depthwise_conv
71
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([302])
backbone.blocks.2.1._depthwise_conv
[80, 295, 273, 84, 157, 75, 106, 162, 228, 268, 193, 63, 118, 133, 98, 94, 102, 4, 229, 79, 168, 232, 56, 26, 70, 198, 23, 169, 192, 125, 108]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)) => prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)), #idxs=31
[1] prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)) => prune_out_channels on _ElementWiseOp_48(HardtanhBackward0), #idxs=31
[2] prune_out_channels on backbone.blocks.2.1._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)) => prune_out_channels on backbone.blocks.2.1._bn1 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=31
[3] prune_out_channels on backbone.blocks.2.1._bn1 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_47(HardtanhBackward0), #idxs=31
[4] prune_out_channels on _ElementWiseOp_47(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.1._project_conv (Conv2d(271, 50, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=31
[5] prune_out_channels on _ElementWiseOp_48(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.1._bn0 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=31
[6] prune_out_channels on backbone.blocks.2.1._bn0 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.1._expand_conv (Conv2d(50, 271, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=31
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.2.1._depthwise_conv
71
tensor([ True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True])
torch.Size([302])
torch.Size([271])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.1._expand_conv
72
tensor([ True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True])
torch.Size([302])
torch.Size([271])
backbone.blocks.2.1._project_conv
[46, 27, 28, 34, 38]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.1._project_conv (Conv2d(271, 45, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.1._project_conv (Conv2d(271, 45, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[1] prune_out_channels on backbone.blocks.2.1._project_conv (Conv2d(271, 45, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.1._bn2 (BatchNorm2d(45, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=5
[2] prune_out_channels on backbone.blocks.2.1._bn2 (BatchNorm2d(45, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_31(AddBackward0), #idxs=5
[3] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(45, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=5
[4] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_out_channels on _ElementWiseOp_30(AddBackward0), #idxs=5
[5] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_in_channels on backbone.blocks.2.2._expand_conv (Conv2d(45, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[6] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_out_channels on backbone.blocks.2.2._bn2 (BatchNorm2d(45, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=5
[7] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_out_channels on _ElementWiseOp_29(AddBackward0), #idxs=5
[8] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_in_channels on backbone.blocks.2.3._expand_conv (Conv2d(45, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[9] prune_out_channels on _ElementWiseOp_29(AddBackward0) => prune_out_channels on backbone.blocks.2.3._bn2 (BatchNorm2d(45, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=5
[10] prune_out_channels on _ElementWiseOp_29(AddBackward0) => prune_in_channels on backbone.blocks.3.0._expand_conv (Conv2d(45, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[11] prune_out_channels on backbone.blocks.2.3._bn2 (BatchNorm2d(45, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.3._project_conv (Conv2d(336, 45, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[12] prune_out_channels on backbone.blocks.2.2._bn2 (BatchNorm2d(45, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.2._project_conv (Conv2d(336, 45, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[13] prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(45, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.0._project_conv (Conv2d(154, 45, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[14] prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(45, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.2.1._expand_conv (Conv2d(45, 271, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.1._project_conv
70
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True])
torch.Size([50])
torch.Size([45])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.3._project_conv
64
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True])
torch.Size([50])
torch.Size([45])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.2._project_conv
67
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True])
torch.Size([50])
torch.Size([45])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.0._project_conv
73
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True])
torch.Size([50])
torch.Size([45])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 45, 19, 19]           6,930           6,930
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 45, 19, 19]              90              90
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]          12,195          12,195
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 45, 19, 19]          12,195          12,195
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 45, 19, 19]              90              90
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 336, 19, 19]          15,120          15,120
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 45, 19, 19]          15,120          15,120
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 45, 19, 19]              90              90
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          15,120          15,120
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 45, 19, 19]          15,120          15,120
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 45, 19, 19]              90              90
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          15,120          15,120
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,664,925
Trainable params: 11,664,925
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.379962, Validation Loss: 0.370587, Training Accuracy: 0.896919, Validation Accuracy: 0.891877
Validation loss decreased (inf --> 0.370587).  Saving model ...
Epoch: 2, Training Loss: 0.339404, Validation Loss: 0.375883, Training Accuracy: 0.915593, Validation Accuracy: 0.898413
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.329708, Validation Loss: 0.350559, Training Accuracy: 0.919763, Validation Accuracy: 0.901774
Validation loss decreased (0.370587 --> 0.350559).  Saving model ...
Epoch: 4, Training Loss: 0.318339, Validation Loss: 0.354151, Training Accuracy: 0.923747, Validation Accuracy: 0.904015
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.317810, Validation Loss: 0.341418, Training Accuracy: 0.929474, Validation Accuracy: 0.902148
Validation loss decreased (0.350559 --> 0.341418).  Saving model ...
Epoch: 6, Training Loss: 0.305086, Validation Loss: 0.362641, Training Accuracy: 0.934454, Validation Accuracy: 0.891690
EarlyStopping counter: 1 out of 10
Epoch: 7, Training Loss: 0.297020, Validation Loss: 0.337760, Training Accuracy: 0.937753, Validation Accuracy: 0.906816
Validation loss decreased (0.341418 --> 0.337760).  Saving model ...
Epoch: 8, Training Loss: 0.299677, Validation Loss: 0.335790, Training Accuracy: 0.936695, Validation Accuracy: 0.901587
Validation loss decreased (0.337760 --> 0.335790).  Saving model ...
Epoch: 9, Training Loss: 0.297233, Validation Loss: 0.344255, Training Accuracy: 0.936570, Validation Accuracy: 0.901961
EarlyStopping counter: 1 out of 10
Epoch: 10, Training Loss: 0.299920, Validation Loss: 0.341773, Training Accuracy: 0.939807, Validation Accuracy: 0.902894
EarlyStopping counter: 2 out of 10
Epoch: 11, Training Loss: 0.290456, Validation Loss: 0.340520, Training Accuracy: 0.940118, Validation Accuracy: 0.903081
Epoch 00011: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 3 out of 10
Epoch: 12, Training Loss: 0.285171, Validation Loss: 0.328955, Training Accuracy: 0.946032, Validation Accuracy: 0.908683
Validation loss decreased (0.335790 --> 0.328955).  Saving model ...
Epoch: 13, Training Loss: 0.273926, Validation Loss: 0.326875, Training Accuracy: 0.950078, Validation Accuracy: 0.908310
Validation loss decreased (0.328955 --> 0.326875).  Saving model ...
Epoch: 14, Training Loss: 0.281421, Validation Loss: 0.325935, Training Accuracy: 0.947650, Validation Accuracy: 0.907003
Validation loss decreased (0.326875 --> 0.325935).  Saving model ...
Epoch: 15, Training Loss: 0.280606, Validation Loss: 0.327711, Training Accuracy: 0.944662, Validation Accuracy: 0.908683
EarlyStopping counter: 1 out of 10
Epoch: 16, Training Loss: 0.281595, Validation Loss: 0.326153, Training Accuracy: 0.947090, Validation Accuracy: 0.907937
EarlyStopping counter: 2 out of 10
Epoch: 17, Training Loss: 0.280257, Validation Loss: 0.328272, Training Accuracy: 0.945845, Validation Accuracy: 0.909057
Epoch 00017: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 3 out of 10
Epoch: 18, Training Loss: 0.274844, Validation Loss: 0.326677, Training Accuracy: 0.948459, Validation Accuracy: 0.909057
EarlyStopping counter: 4 out of 10
Epoch: 19, Training Loss: 0.273315, Validation Loss: 0.326247, Training Accuracy: 0.951261, Validation Accuracy: 0.907750
EarlyStopping counter: 5 out of 10
Epoch: 20, Training Loss: 0.273868, Validation Loss: 0.326015, Training Accuracy: 0.949580, Validation Accuracy: 0.908683
EarlyStopping counter: 6 out of 10
Epoch: 21, Training Loss: 0.277121, Validation Loss: 0.325711, Training Accuracy: 0.947214, Validation Accuracy: 0.907937
Epoch 00021: reducing learning rate of group 0 to 1.0000e-08.
Validation loss decreased (0.325935 --> 0.325711).  Saving model ...
Epoch: 22, Training Loss: 0.275824, Validation Loss: 0.324899, Training Accuracy: 0.948522, Validation Accuracy: 0.908870
Validation loss decreased (0.325711 --> 0.324899).  Saving model ...
Epoch: 23, Training Loss: 0.277642, Validation Loss: 0.326019, Training Accuracy: 0.947277, Validation Accuracy: 0.909430
EarlyStopping counter: 1 out of 10
Epoch: 24, Training Loss: 0.275770, Validation Loss: 0.327228, Training Accuracy: 0.948833, Validation Accuracy: 0.907750
EarlyStopping counter: 2 out of 10
Epoch: 25, Training Loss: 0.274210, Validation Loss: 0.325607, Training Accuracy: 0.949020, Validation Accuracy: 0.909617
EarlyStopping counter: 3 out of 10
Epoch: 26, Training Loss: 0.272245, Validation Loss: 0.326561, Training Accuracy: 0.948895, Validation Accuracy: 0.909430
EarlyStopping counter: 4 out of 10
Epoch: 27, Training Loss: 0.276593, Validation Loss: 0.325915, Training Accuracy: 0.948584, Validation Accuracy: 0.909057
EarlyStopping counter: 5 out of 10
Epoch: 28, Training Loss: 0.278251, Validation Loss: 0.323462, Training Accuracy: 0.947712, Validation Accuracy: 0.909244
Validation loss decreased (0.324899 --> 0.323462).  Saving model ...
Epoch: 29, Training Loss: 0.278945, Validation Loss: 0.325995, Training Accuracy: 0.948024, Validation Accuracy: 0.907376
EarlyStopping counter: 1 out of 10
Epoch: 30, Training Loss: 0.275760, Validation Loss: 0.325604, Training Accuracy: 0.948771, Validation Accuracy: 0.908123
EarlyStopping counter: 2 out of 10
Epoch: 31, Training Loss: 0.281385, Validation Loss: 0.325269, Training Accuracy: 0.948522, Validation Accuracy: 0.907937
EarlyStopping counter: 3 out of 10
Epoch: 32, Training Loss: 0.278842, Validation Loss: 0.325799, Training Accuracy: 0.946841, Validation Accuracy: 0.908123
EarlyStopping counter: 4 out of 10
Epoch: 33, Training Loss: 0.274072, Validation Loss: 0.327604, Training Accuracy: 0.950265, Validation Accuracy: 0.908123
EarlyStopping counter: 5 out of 10
Epoch: 34, Training Loss: 0.279459, Validation Loss: 0.324658, Training Accuracy: 0.948148, Validation Accuracy: 0.908123
EarlyStopping counter: 6 out of 10
Epoch: 35, Training Loss: 0.274991, Validation Loss: 0.324751, Training Accuracy: 0.947401, Validation Accuracy: 0.908123
EarlyStopping counter: 7 out of 10
Epoch: 36, Training Loss: 0.275611, Validation Loss: 0.323785, Training Accuracy: 0.949891, Validation Accuracy: 0.907937
EarlyStopping counter: 8 out of 10
Epoch: 37, Training Loss: 0.278634, Validation Loss: 0.325267, Training Accuracy: 0.949518, Validation Accuracy: 0.908870
EarlyStopping counter: 9 out of 10
Epoch: 38, Training Loss: 0.277130, Validation Loss: 0.324613, Training Accuracy: 0.948833, Validation Accuracy: 0.908683
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 38
Ended Training Cycle
backbone.blocks.2.2._expand_conv
[110, 244, 147, 169, 148, 118, 174, 319, 153, 287, 53, 201, 303, 88, 101, 2, 227, 213, 99, 188, 254, 94, 333, 157, 193, 100, 41, 55, 61, 40, 127, 283, 231, 203]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.2._expand_conv (Conv2d(45, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.2._expand_conv (Conv2d(45, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=34
[1] prune_out_channels on backbone.blocks.2.2._expand_conv (Conv2d(45, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.2._bn0 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=34
[2] prune_out_channels on backbone.blocks.2.2._bn0 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_50(HardtanhBackward0), #idxs=34
[3] prune_out_channels on _ElementWiseOp_50(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(302, 302, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=302, bias=False)), #idxs=34
[4] prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(302, 302, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=302, bias=False)) => prune_out_channels on backbone.blocks.2.2._bn1 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=34
[5] prune_out_channels on backbone.blocks.2.2._bn1 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_49(HardtanhBackward0), #idxs=34
[6] prune_out_channels on _ElementWiseOp_49(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.2._project_conv (Conv2d(302, 45, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=34
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.2._expand_conv
69
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True])
torch.Size([336])
torch.Size([302])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.2.2._depthwise_conv
68
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True])
torch.Size([336])
torch.Size([302])
backbone.blocks.2.2._depthwise_conv
[57, 44, 41, 176, 102, 6, 219, 179, 84, 228, 33, 94, 262, 177, 1, 68, 299, 245, 56, 21, 0, 114, 132, 255, 138, 224, 103, 293, 207, 284, 128]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)) => prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)), #idxs=31
[1] prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)) => prune_out_channels on _ElementWiseOp_50(HardtanhBackward0), #idxs=31
[2] prune_out_channels on backbone.blocks.2.2._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)) => prune_out_channels on backbone.blocks.2.2._bn1 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=31
[3] prune_out_channels on backbone.blocks.2.2._bn1 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_49(HardtanhBackward0), #idxs=31
[4] prune_out_channels on _ElementWiseOp_49(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.2._project_conv (Conv2d(271, 45, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=31
[5] prune_out_channels on _ElementWiseOp_50(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.2._bn0 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=31
[6] prune_out_channels on backbone.blocks.2.2._bn0 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.2._expand_conv (Conv2d(45, 271, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=31
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.2.2._depthwise_conv
68
tensor([False, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True])
torch.Size([302])
torch.Size([271])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.2._expand_conv
69
tensor([False, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True])
torch.Size([302])
torch.Size([271])
backbone.blocks.2.2._project_conv
[1, 43, 41, 39, 36]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.2._project_conv (Conv2d(271, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.2._project_conv (Conv2d(271, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[1] prune_out_channels on backbone.blocks.2.2._project_conv (Conv2d(271, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.2._bn2 (BatchNorm2d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=5
[2] prune_out_channels on backbone.blocks.2.2._bn2 (BatchNorm2d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_30(AddBackward0), #idxs=5
[3] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_out_channels on _ElementWiseOp_31(AddBackward0), #idxs=5
[4] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_out_channels on _ElementWiseOp_29(AddBackward0), #idxs=5
[5] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_in_channels on backbone.blocks.2.3._expand_conv (Conv2d(40, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[6] prune_out_channels on _ElementWiseOp_29(AddBackward0) => prune_out_channels on backbone.blocks.2.3._bn2 (BatchNorm2d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=5
[7] prune_out_channels on _ElementWiseOp_29(AddBackward0) => prune_in_channels on backbone.blocks.3.0._expand_conv (Conv2d(40, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[8] prune_out_channels on backbone.blocks.2.3._bn2 (BatchNorm2d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.3._project_conv (Conv2d(336, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[9] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_out_channels on backbone.blocks.2.1._bn2 (BatchNorm2d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=5
[10] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=5
[11] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_in_channels on backbone.blocks.2.2._expand_conv (Conv2d(40, 271, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[12] prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.0._project_conv (Conv2d(154, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[13] prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.2.1._expand_conv (Conv2d(40, 271, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
[14] prune_out_channels on backbone.blocks.2.1._bn2 (BatchNorm2d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.1._project_conv (Conv2d(271, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=5
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.2._project_conv
67
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True, False,  True])
torch.Size([45])
torch.Size([40])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.3._project_conv
64
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True, False,  True])
torch.Size([45])
torch.Size([40])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.0._project_conv
73
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True, False,  True])
torch.Size([45])
torch.Size([40])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.1._project_conv
70
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True, False,  True])
torch.Size([45])
torch.Size([40])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 40, 19, 19]           6,160           6,160
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 40, 19, 19]              80              80
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]          10,840          10,840
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 40, 19, 19]          10,840          10,840
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 40, 19, 19]              80              80
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]          10,840          10,840
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 40, 19, 19]          10,840          10,840
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 40, 19, 19]              80              80
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 336, 19, 19]          13,440          13,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 336, 19, 19]           8,400           8,400
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 40, 19, 19]          13,440          13,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 40, 19, 19]              80              80
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          13,440          13,440
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,645,920
Trainable params: 11,645,920
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.329347, Validation Loss: 0.393093, Training Accuracy: 0.922316, Validation Accuracy: 0.884220
Validation loss decreased (inf --> 0.393093).  Saving model ...
Epoch: 2, Training Loss: 0.316247, Validation Loss: 0.377829, Training Accuracy: 0.927544, Validation Accuracy: 0.888702
Validation loss decreased (0.393093 --> 0.377829).  Saving model ...
Epoch: 3, Training Loss: 0.307347, Validation Loss: 0.355404, Training Accuracy: 0.934454, Validation Accuracy: 0.897292
Validation loss decreased (0.377829 --> 0.355404).  Saving model ...
Epoch: 4, Training Loss: 0.303266, Validation Loss: 0.391734, Training Accuracy: 0.935014, Validation Accuracy: 0.893371
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.298869, Validation Loss: 0.357998, Training Accuracy: 0.937006, Validation Accuracy: 0.900467
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.294593, Validation Loss: 0.350879, Training Accuracy: 0.939122, Validation Accuracy: 0.896919
Validation loss decreased (0.355404 --> 0.350879).  Saving model ...
Epoch: 7, Training Loss: 0.293214, Validation Loss: 0.334147, Training Accuracy: 0.940741, Validation Accuracy: 0.905135
Validation loss decreased (0.350879 --> 0.334147).  Saving model ...
Epoch: 8, Training Loss: 0.292181, Validation Loss: 0.340588, Training Accuracy: 0.942359, Validation Accuracy: 0.903268
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.294783, Validation Loss: 0.355917, Training Accuracy: 0.941301, Validation Accuracy: 0.899720
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.288725, Validation Loss: 0.350589, Training Accuracy: 0.944662, Validation Accuracy: 0.902708
EarlyStopping counter: 3 out of 10
Epoch: 11, Training Loss: 0.280399, Validation Loss: 0.353352, Training Accuracy: 0.946903, Validation Accuracy: 0.908870
Epoch 00011: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 12, Training Loss: 0.275226, Validation Loss: 0.332638, Training Accuracy: 0.949518, Validation Accuracy: 0.908870
Validation loss decreased (0.334147 --> 0.332638).  Saving model ...
Epoch: 13, Training Loss: 0.275924, Validation Loss: 0.333636, Training Accuracy: 0.950700, Validation Accuracy: 0.907563
EarlyStopping counter: 1 out of 10
Epoch: 14, Training Loss: 0.269293, Validation Loss: 0.332600, Training Accuracy: 0.951572, Validation Accuracy: 0.908870
Validation loss decreased (0.332638 --> 0.332600).  Saving model ...
Epoch: 15, Training Loss: 0.269484, Validation Loss: 0.330981, Training Accuracy: 0.951821, Validation Accuracy: 0.910177
Epoch 00015: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.332600 --> 0.330981).  Saving model ...
Epoch: 16, Training Loss: 0.272046, Validation Loss: 0.331689, Training Accuracy: 0.950949, Validation Accuracy: 0.909617
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.273342, Validation Loss: 0.332125, Training Accuracy: 0.952505, Validation Accuracy: 0.908123
EarlyStopping counter: 2 out of 10
Epoch: 18, Training Loss: 0.272841, Validation Loss: 0.331180, Training Accuracy: 0.951758, Validation Accuracy: 0.908683
EarlyStopping counter: 3 out of 10
Epoch: 19, Training Loss: 0.273632, Validation Loss: 0.330373, Training Accuracy: 0.952941, Validation Accuracy: 0.908497
Epoch 00019: reducing learning rate of group 0 to 1.0000e-08.
Validation loss decreased (0.330981 --> 0.330373).  Saving model ...
Epoch: 20, Training Loss: 0.272230, Validation Loss: 0.331172, Training Accuracy: 0.951447, Validation Accuracy: 0.908870
EarlyStopping counter: 1 out of 10
Epoch: 21, Training Loss: 0.276681, Validation Loss: 0.330873, Training Accuracy: 0.951821, Validation Accuracy: 0.909430
EarlyStopping counter: 2 out of 10
Epoch: 22, Training Loss: 0.272994, Validation Loss: 0.329925, Training Accuracy: 0.950949, Validation Accuracy: 0.908497
Validation loss decreased (0.330373 --> 0.329925).  Saving model ...
Epoch: 23, Training Loss: 0.273291, Validation Loss: 0.330229, Training Accuracy: 0.951198, Validation Accuracy: 0.909244
EarlyStopping counter: 1 out of 10
Epoch: 24, Training Loss: 0.274454, Validation Loss: 0.331064, Training Accuracy: 0.951136, Validation Accuracy: 0.910177
EarlyStopping counter: 2 out of 10
Epoch: 25, Training Loss: 0.273510, Validation Loss: 0.331124, Training Accuracy: 0.953066, Validation Accuracy: 0.908123
EarlyStopping counter: 3 out of 10
Epoch: 26, Training Loss: 0.276994, Validation Loss: 0.331451, Training Accuracy: 0.950825, Validation Accuracy: 0.908497
EarlyStopping counter: 4 out of 10
Epoch: 27, Training Loss: 0.273890, Validation Loss: 0.331519, Training Accuracy: 0.950451, Validation Accuracy: 0.908683
EarlyStopping counter: 5 out of 10
Epoch: 28, Training Loss: 0.265909, Validation Loss: 0.332019, Training Accuracy: 0.956116, Validation Accuracy: 0.909244
EarlyStopping counter: 6 out of 10
Epoch: 29, Training Loss: 0.275641, Validation Loss: 0.330922, Training Accuracy: 0.949518, Validation Accuracy: 0.908870
EarlyStopping counter: 7 out of 10
Epoch: 30, Training Loss: 0.268419, Validation Loss: 0.330189, Training Accuracy: 0.953003, Validation Accuracy: 0.909804
EarlyStopping counter: 8 out of 10
Epoch: 31, Training Loss: 0.277808, Validation Loss: 0.331404, Training Accuracy: 0.950514, Validation Accuracy: 0.909057
EarlyStopping counter: 9 out of 10
Epoch: 32, Training Loss: 0.268846, Validation Loss: 0.332335, Training Accuracy: 0.952630, Validation Accuracy: 0.908497
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 32
Ended Training Cycle
backbone.blocks.2.3._expand_conv
[223, 14, 219, 283, 287, 118, 121, 202, 40, 106, 35, 145, 105, 299, 27, 303, 335, 22, 298, 296, 262, 328, 111, 17, 320, 34, 112, 147, 295, 162, 39, 150, 285, 2]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.3._expand_conv (Conv2d(40, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.3._expand_conv (Conv2d(40, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=34
[1] prune_out_channels on backbone.blocks.2.3._expand_conv (Conv2d(40, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.3._bn0 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=34
[2] prune_out_channels on backbone.blocks.2.3._bn0 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_52(HardtanhBackward0), #idxs=34
[3] prune_out_channels on _ElementWiseOp_52(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(302, 302, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=302, bias=False)), #idxs=34
[4] prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(302, 302, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=302, bias=False)) => prune_out_channels on backbone.blocks.2.3._bn1 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=34
[5] prune_out_channels on backbone.blocks.2.3._bn1 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_51(HardtanhBackward0), #idxs=34
[6] prune_out_channels on _ElementWiseOp_51(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.3._project_conv (Conv2d(302, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=34
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.3._expand_conv
66
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True, False, False,  True, False, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False])
torch.Size([336])
torch.Size([302])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.2.3._depthwise_conv
65
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True, False, False,  True, False, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False])
torch.Size([336])
torch.Size([302])
backbone.blocks.2.3._depthwise_conv
[70, 230, 253, 244, 258, 297, 224, 191, 75, 280, 207, 151, 248, 45, 177, 233, 152, 117, 40, 209, 143, 12, 176, 8, 163, 115, 293, 44, 296, 14, 30]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)) => prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)), #idxs=31
[1] prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)) => prune_out_channels on _ElementWiseOp_52(HardtanhBackward0), #idxs=31
[2] prune_out_channels on backbone.blocks.2.3._depthwise_conv (Conv2d(271, 271, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=271, bias=False)) => prune_out_channels on backbone.blocks.2.3._bn1 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=31
[3] prune_out_channels on backbone.blocks.2.3._bn1 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_51(HardtanhBackward0), #idxs=31
[4] prune_out_channels on _ElementWiseOp_51(HardtanhBackward0) => prune_in_channels on backbone.blocks.2.3._project_conv (Conv2d(271, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=31
[5] prune_out_channels on _ElementWiseOp_52(HardtanhBackward0) => prune_out_channels on backbone.blocks.2.3._bn0 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=31
[6] prune_out_channels on backbone.blocks.2.3._bn0 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.3._expand_conv (Conv2d(40, 271, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=31
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.2.3._depthwise_conv
65
tensor([ True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False, False,  True,  True,
         True,  True])
torch.Size([302])
torch.Size([271])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.3._expand_conv
66
tensor([ True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False, False,  True,  True,
         True,  True])
torch.Size([302])
torch.Size([271])
backbone.blocks.2.3._project_conv
[35, 24, 22, 21]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.2.3._project_conv (Conv2d(271, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.3._project_conv (Conv2d(271, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[1] prune_out_channels on backbone.blocks.2.3._project_conv (Conv2d(271, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.2.3._bn2 (BatchNorm2d(36, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[2] prune_out_channels on backbone.blocks.2.3._bn2 (BatchNorm2d(36, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_29(AddBackward0), #idxs=4
[3] prune_out_channels on _ElementWiseOp_29(AddBackward0) => prune_out_channels on _ElementWiseOp_30(AddBackward0), #idxs=4
[4] prune_out_channels on _ElementWiseOp_29(AddBackward0) => prune_in_channels on backbone.blocks.3.0._expand_conv (Conv2d(36, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[5] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_out_channels on backbone.blocks.2.2._bn2 (BatchNorm2d(36, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[6] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_out_channels on _ElementWiseOp_31(AddBackward0), #idxs=4
[7] prune_out_channels on _ElementWiseOp_30(AddBackward0) => prune_in_channels on backbone.blocks.2.3._expand_conv (Conv2d(36, 271, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[8] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_out_channels on backbone.blocks.2.1._bn2 (BatchNorm2d(36, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[9] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(36, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=4
[10] prune_out_channels on _ElementWiseOp_31(AddBackward0) => prune_in_channels on backbone.blocks.2.2._expand_conv (Conv2d(36, 271, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[11] prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(36, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.0._project_conv (Conv2d(154, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[12] prune_out_channels on backbone.blocks.2.0._bn2 (BatchNorm2d(36, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.2.1._expand_conv (Conv2d(36, 271, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[13] prune_out_channels on backbone.blocks.2.1._bn2 (BatchNorm2d(36, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.1._project_conv (Conv2d(271, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
[14] prune_out_channels on backbone.blocks.2.2._bn2 (BatchNorm2d(36, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.2.2._project_conv (Conv2d(271, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=4
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.3._project_conv
64
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True])
torch.Size([40])
torch.Size([36])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.0._project_conv
73
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True])
torch.Size([40])
torch.Size([36])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.1._project_conv
70
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True])
torch.Size([40])
torch.Size([36])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.2.2._project_conv
67
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True])
torch.Size([40])
torch.Size([36])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 336, 19, 19]          12,096          12,096
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 336, 19, 19]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 336, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 336, 10, 10]           3,024           3,024
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 336, 10, 10]             672             672
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 112, 10, 10]          37,632          37,632
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 112, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 112, 10, 10]             224             224
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          75,264          75,264
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,630,339
Trainable params: 11,630,339
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.307417, Validation Loss: 0.340689, Training Accuracy: 0.934454, Validation Accuracy: 0.903268
Validation loss decreased (inf --> 0.340689).  Saving model ...
Epoch: 2, Training Loss: 0.296256, Validation Loss: 0.342191, Training Accuracy: 0.938313, Validation Accuracy: 0.904015
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.291624, Validation Loss: 0.370457, Training Accuracy: 0.942982, Validation Accuracy: 0.901027
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.291340, Validation Loss: 0.336515, Training Accuracy: 0.942110, Validation Accuracy: 0.904575
Validation loss decreased (0.340689 --> 0.336515).  Saving model ...
Epoch: 5, Training Loss: 0.290571, Validation Loss: 0.342935, Training Accuracy: 0.943355, Validation Accuracy: 0.902708
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 1 out of 10
Epoch: 6, Training Loss: 0.283901, Validation Loss: 0.339564, Training Accuracy: 0.947277, Validation Accuracy: 0.904762
EarlyStopping counter: 2 out of 10
Epoch: 7, Training Loss: 0.272015, Validation Loss: 0.337604, Training Accuracy: 0.952070, Validation Accuracy: 0.905882
EarlyStopping counter: 3 out of 10
Epoch: 8, Training Loss: 0.278963, Validation Loss: 0.336741, Training Accuracy: 0.951572, Validation Accuracy: 0.906256
EarlyStopping counter: 4 out of 10
Epoch: 9, Training Loss: 0.269728, Validation Loss: 0.336571, Training Accuracy: 0.952443, Validation Accuracy: 0.906069
Epoch 00009: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 5 out of 10
Epoch: 10, Training Loss: 0.275817, Validation Loss: 0.335993, Training Accuracy: 0.952132, Validation Accuracy: 0.905696
Validation loss decreased (0.336515 --> 0.335993).  Saving model ...
Epoch: 11, Training Loss: 0.277270, Validation Loss: 0.334192, Training Accuracy: 0.950140, Validation Accuracy: 0.905322
Validation loss decreased (0.335993 --> 0.334192).  Saving model ...
Epoch: 12, Training Loss: 0.281399, Validation Loss: 0.334968, Training Accuracy: 0.950576, Validation Accuracy: 0.906629
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.271818, Validation Loss: 0.336789, Training Accuracy: 0.952443, Validation Accuracy: 0.907190
Epoch 00013: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 14, Training Loss: 0.277974, Validation Loss: 0.338207, Training Accuracy: 0.948459, Validation Accuracy: 0.904949
EarlyStopping counter: 3 out of 10
Epoch: 15, Training Loss: 0.276043, Validation Loss: 0.337062, Training Accuracy: 0.953750, Validation Accuracy: 0.905696
EarlyStopping counter: 4 out of 10
Epoch: 16, Training Loss: 0.268186, Validation Loss: 0.335494, Training Accuracy: 0.954622, Validation Accuracy: 0.904762
EarlyStopping counter: 5 out of 10
Epoch: 17, Training Loss: 0.275322, Validation Loss: 0.334521, Training Accuracy: 0.953688, Validation Accuracy: 0.906256
EarlyStopping counter: 6 out of 10
Epoch: 18, Training Loss: 0.274987, Validation Loss: 0.334260, Training Accuracy: 0.950638, Validation Accuracy: 0.905696
EarlyStopping counter: 7 out of 10
Epoch: 19, Training Loss: 0.280301, Validation Loss: 0.335268, Training Accuracy: 0.952381, Validation Accuracy: 0.905322
EarlyStopping counter: 8 out of 10
Epoch: 20, Training Loss: 0.277337, Validation Loss: 0.335179, Training Accuracy: 0.950763, Validation Accuracy: 0.905135
EarlyStopping counter: 9 out of 10
Epoch: 21, Training Loss: 0.271999, Validation Loss: 0.334677, Training Accuracy: 0.954435, Validation Accuracy: 0.906069
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 21
Ended Training Cycle
backbone.blocks.3.0._expand_conv
[320, 77, 246, 329, 46, 172, 256, 179, 26, 302, 163, 150, 76, 235, 93, 3, 202, 196, 324, 137, 117, 152, 11, 112, 18, 328, 127, 114, 118, 120, 229, 103, 309, 52]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.0._expand_conv (Conv2d(36, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.0._expand_conv (Conv2d(36, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=34
[1] prune_out_channels on backbone.blocks.3.0._expand_conv (Conv2d(36, 302, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.0._bn0 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=34
[2] prune_out_channels on backbone.blocks.3.0._bn0 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_28(HardtanhBackward0), #idxs=34
[3] prune_out_channels on _ElementWiseOp_28(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(302, 302, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=302, bias=False)), #idxs=34
[4] prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(302, 302, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=302, bias=False)) => prune_out_channels on backbone.blocks.3.0._bn1 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=34
[5] prune_out_channels on backbone.blocks.3.0._bn1 (BatchNorm2d(302, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_27(HardtanhBackward0), #idxs=34
[6] prune_out_channels on _ElementWiseOp_27(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.0._project_conv (Conv2d(302, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=34
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.0._expand_conv
63
tensor([ True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True, False, False,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([302])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.0._depthwise_conv
62
tensor([ True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True, False, False,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True])
torch.Size([336])
torch.Size([302])
backbone.blocks.3.0._depthwise_conv
[72, 273, 208, 287, 159, 214, 204, 48, 185, 35, 228, 175, 260, 261, 63, 243, 249, 115, 219, 258, 173, 41, 263, 220, 203, 135, 6, 57, 156, 4, 300]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(271, 271, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=271, bias=False)) => prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(271, 271, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=271, bias=False)), #idxs=31
[1] prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(271, 271, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=271, bias=False)) => prune_out_channels on _ElementWiseOp_28(HardtanhBackward0), #idxs=31
[2] prune_out_channels on backbone.blocks.3.0._depthwise_conv (Conv2d(271, 271, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=271, bias=False)) => prune_out_channels on backbone.blocks.3.0._bn1 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=31
[3] prune_out_channels on backbone.blocks.3.0._bn1 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_27(HardtanhBackward0), #idxs=31
[4] prune_out_channels on _ElementWiseOp_27(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.0._project_conv (Conv2d(271, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=31
[5] prune_out_channels on _ElementWiseOp_28(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.0._bn0 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=31
[6] prune_out_channels on backbone.blocks.3.0._bn0 (BatchNorm2d(271, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.0._expand_conv (Conv2d(36, 271, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=31
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.0._depthwise_conv
62
tensor([ True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True])
torch.Size([302])
torch.Size([271])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.0._expand_conv
63
tensor([ True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True])
torch.Size([302])
torch.Size([271])
backbone.blocks.3.0._project_conv
[76, 83, 25, 29, 31, 82, 33, 81, 35, 79, 39, 40]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.0._project_conv (Conv2d(271, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.0._project_conv (Conv2d(271, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[1] prune_out_channels on backbone.blocks.3.0._project_conv (Conv2d(271, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[2] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_26(AddBackward0), #idxs=12
[3] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.3.1._expand_conv (Conv2d(100, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[4] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[5] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on _ElementWiseOp_25(AddBackward0), #idxs=12
[6] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_in_channels on backbone.blocks.3.2._expand_conv (Conv2d(100, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[7] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[8] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on _ElementWiseOp_24(AddBackward0), #idxs=12
[9] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_in_channels on backbone.blocks.3.3._expand_conv (Conv2d(100, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[10] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[11] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on _ElementWiseOp_23(AddBackward0), #idxs=12
[12] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_in_channels on backbone.blocks.3.4._expand_conv (Conv2d(100, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[13] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[14] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on _ElementWiseOp_22(AddBackward0), #idxs=12
[15] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_in_channels on backbone.blocks.3.5._expand_conv (Conv2d(100, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[16] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[17] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_in_channels on backbone.blocks.4.0._expand_conv (Conv2d(100, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[18] prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.5._project_conv (Conv2d(672, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[19] prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.4._project_conv (Conv2d(672, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[20] prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.3._project_conv (Conv2d(672, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[21] prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.2._project_conv (Conv2d(672, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[22] prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(100, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.1._project_conv (Conv2d(672, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.0._project_conv
61
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True, False,  True, False,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([112])
torch.Size([100])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.5._project_conv
46
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True, False,  True, False,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([112])
torch.Size([100])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.4._project_conv
49
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True, False,  True, False,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([112])
torch.Size([100])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.3._project_conv
52
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True, False,  True, False,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([112])
torch.Size([100])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.2._project_conv
55
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True, False,  True, False,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([112])
torch.Size([100])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.1._project_conv
58
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True, False,  True, False,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([112])
torch.Size([100])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70     [1, 100, 10, 10]          27,100          27,100
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71     [1, 100, 10, 10]             200             200
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 672, 10, 10]          67,200          67,200
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77     [1, 100, 10, 10]          67,200          67,200
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78     [1, 100, 10, 10]             200             200
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          67,200          67,200
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84     [1, 100, 10, 10]          67,200          67,200
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85     [1, 100, 10, 10]             200             200
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          67,200          67,200
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91     [1, 100, 10, 10]          67,200          67,200
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92     [1, 100, 10, 10]             200             200
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          67,200          67,200
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98     [1, 100, 10, 10]          67,200          67,200
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99     [1, 100, 10, 10]             200             200
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          67,200          67,200
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105     [1, 100, 10, 10]          67,200          67,200
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106     [1, 100, 10, 10]             200             200
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          67,200          67,200
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,527,774
Trainable params: 11,527,774
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.327124, Validation Loss: 0.350303, Training Accuracy: 0.925801, Validation Accuracy: 0.901027
Validation loss decreased (inf --> 0.350303).  Saving model ...
Epoch: 2, Training Loss: 0.308481, Validation Loss: 0.382999, Training Accuracy: 0.933894, Validation Accuracy: 0.888329
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.302505, Validation Loss: 0.368730, Training Accuracy: 0.936757, Validation Accuracy: 0.890009
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.298885, Validation Loss: 0.346738, Training Accuracy: 0.937753, Validation Accuracy: 0.901027
Validation loss decreased (0.350303 --> 0.346738).  Saving model ...
Epoch: 5, Training Loss: 0.294885, Validation Loss: 0.364070, Training Accuracy: 0.941488, Validation Accuracy: 0.896545
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 1 out of 10
Epoch: 6, Training Loss: 0.286700, Validation Loss: 0.337507, Training Accuracy: 0.946530, Validation Accuracy: 0.905696
Validation loss decreased (0.346738 --> 0.337507).  Saving model ...
Epoch: 7, Training Loss: 0.283459, Validation Loss: 0.339227, Training Accuracy: 0.950389, Validation Accuracy: 0.905135
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.282423, Validation Loss: 0.335985, Training Accuracy: 0.947961, Validation Accuracy: 0.904762
Validation loss decreased (0.337507 --> 0.335985).  Saving model ...
Epoch: 9, Training Loss: 0.285937, Validation Loss: 0.338121, Training Accuracy: 0.947837, Validation Accuracy: 0.903081
EarlyStopping counter: 1 out of 10
Epoch: 10, Training Loss: 0.283263, Validation Loss: 0.342569, Training Accuracy: 0.948273, Validation Accuracy: 0.905509
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 11, Training Loss: 0.280279, Validation Loss: 0.339635, Training Accuracy: 0.948584, Validation Accuracy: 0.904388
EarlyStopping counter: 3 out of 10
Epoch: 12, Training Loss: 0.281652, Validation Loss: 0.338321, Training Accuracy: 0.948584, Validation Accuracy: 0.904388
EarlyStopping counter: 4 out of 10
Epoch: 13, Training Loss: 0.278544, Validation Loss: 0.337896, Training Accuracy: 0.950265, Validation Accuracy: 0.905509
EarlyStopping counter: 5 out of 10
Epoch: 14, Training Loss: 0.280696, Validation Loss: 0.339642, Training Accuracy: 0.947090, Validation Accuracy: 0.904575
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 6 out of 10
Epoch: 15, Training Loss: 0.281679, Validation Loss: 0.338756, Training Accuracy: 0.950327, Validation Accuracy: 0.903641
EarlyStopping counter: 7 out of 10
Epoch: 16, Training Loss: 0.283864, Validation Loss: 0.337082, Training Accuracy: 0.949206, Validation Accuracy: 0.905135
EarlyStopping counter: 8 out of 10
Epoch: 17, Training Loss: 0.281168, Validation Loss: 0.339986, Training Accuracy: 0.951136, Validation Accuracy: 0.903828
EarlyStopping counter: 9 out of 10
Epoch: 18, Training Loss: 0.279117, Validation Loss: 0.338844, Training Accuracy: 0.949642, Validation Accuracy: 0.903455
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 18
Ended Training Cycle
backbone.blocks.3.1._expand_conv
[454, 638, 64, 637, 602, 148, 207, 20, 403, 547, 374, 184, 180, 23, 556, 213, 217, 622, 368, 641, 327, 34, 524, 652, 500, 181, 7, 28, 104, 497, 140, 15, 369, 659, 377, 616, 445, 281, 37, 645, 290, 289, 412, 31, 661, 536, 455, 269, 332, 442, 360, 233, 211, 21, 563, 296, 82, 571, 466, 303, 238, 453, 342, 490, 468, 96, 66, 355]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.1._expand_conv (Conv2d(100, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.1._expand_conv (Conv2d(100, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
[1] prune_out_channels on backbone.blocks.3.1._expand_conv (Conv2d(100, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.1._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[2] prune_out_channels on backbone.blocks.3.1._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_54(HardtanhBackward0), #idxs=68
[3] prune_out_channels on _ElementWiseOp_54(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(604, 604, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=604, bias=False)), #idxs=68
[4] prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(604, 604, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=604, bias=False)) => prune_out_channels on backbone.blocks.3.1._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[5] prune_out_channels on backbone.blocks.3.1._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_53(HardtanhBackward0), #idxs=68
[6] prune_out_channels on _ElementWiseOp_53(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.1._project_conv (Conv2d(604, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.1._expand_conv
60
tensor([ True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False, False,  True, False,  True,  True,  True,  True, False,  True,
         True, False,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([604])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.1._depthwise_conv
59
tensor([ True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False, False,  True, False,  True,  True,  True,  True, False,  True,
         True, False,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([604])
backbone.blocks.3.1._depthwise_conv
[581, 559, 148, 567, 452, 345, 129, 220, 58, 120, 2, 444, 558, 349, 107, 449, 404, 69, 187, 519, 113, 358, 526, 80, 350, 176, 56, 392, 171, 551, 424, 312, 190, 71, 568, 155, 118, 374, 399, 31, 331, 419, 416, 385, 203, 231, 532, 35, 407, 418, 516, 73, 180, 207, 251, 76, 276, 119, 210, 85, 333]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)), #idxs=61
[1] prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on _ElementWiseOp_54(HardtanhBackward0), #idxs=61
[2] prune_out_channels on backbone.blocks.3.1._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on backbone.blocks.3.1._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[3] prune_out_channels on backbone.blocks.3.1._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_53(HardtanhBackward0), #idxs=61
[4] prune_out_channels on _ElementWiseOp_53(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.1._project_conv (Conv2d(543, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
[5] prune_out_channels on _ElementWiseOp_54(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.1._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[6] prune_out_channels on backbone.blocks.3.1._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.1._expand_conv (Conv2d(100, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.1._depthwise_conv
59
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True, False,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([604])
torch.Size([543])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.1._expand_conv
60
tensor([ True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True, False,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([604])
torch.Size([543])
backbone.blocks.3.1._project_conv
[48, 61, 20, 59, 53, 52, 50, 26, 49, 60]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.1._project_conv (Conv2d(543, 90, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.1._project_conv (Conv2d(543, 90, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[1] prune_out_channels on backbone.blocks.3.1._project_conv (Conv2d(543, 90, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[2] prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_26(AddBackward0), #idxs=10
[3] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[4] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on _ElementWiseOp_25(AddBackward0), #idxs=10
[5] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_in_channels on backbone.blocks.3.2._expand_conv (Conv2d(90, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[6] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[7] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on _ElementWiseOp_24(AddBackward0), #idxs=10
[8] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_in_channels on backbone.blocks.3.3._expand_conv (Conv2d(90, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[9] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[10] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on _ElementWiseOp_23(AddBackward0), #idxs=10
[11] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_in_channels on backbone.blocks.3.4._expand_conv (Conv2d(90, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[12] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[13] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on _ElementWiseOp_22(AddBackward0), #idxs=10
[14] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_in_channels on backbone.blocks.3.5._expand_conv (Conv2d(90, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[15] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[16] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_in_channels on backbone.blocks.4.0._expand_conv (Conv2d(90, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[17] prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.5._project_conv (Conv2d(672, 90, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[18] prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.4._project_conv (Conv2d(672, 90, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[19] prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.3._project_conv (Conv2d(672, 90, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[20] prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.2._project_conv (Conv2d(672, 90, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[21] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.0._project_conv (Conv2d(271, 90, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[22] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(90, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.3.1._expand_conv (Conv2d(90, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.1._project_conv
58
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True, False, False,  True,  True,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([100])
torch.Size([90])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.5._project_conv
46
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True, False, False,  True,  True,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([100])
torch.Size([90])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.4._project_conv
49
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True, False, False,  True,  True,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([100])
torch.Size([90])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.3._project_conv
52
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True, False, False,  True,  True,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([100])
torch.Size([90])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.2._project_conv
55
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True, False, False,  True,  True,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([100])
torch.Size([90])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.0._project_conv
61
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True, False, False,  True,  True,  True,  True,  True, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([100])
torch.Size([90])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 90, 10, 10]          24,390          24,390
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 90, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          48,870          48,870
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 90, 10, 10]          48,870          48,870
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 90, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 672, 10, 10]          60,480          60,480
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 90, 10, 10]          60,480          60,480
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 90, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          60,480          60,480
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 90, 10, 10]          60,480          60,480
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 90, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          60,480          60,480
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 90, 10, 10]          60,480          60,480
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 90, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          60,480          60,480
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 90, 10, 10]          60,480          60,480
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 90, 10, 10]             180             180
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          60,480          60,480
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,426,127
Trainable params: 11,426,127
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.324867, Validation Loss: 0.366691, Training Accuracy: 0.926548, Validation Accuracy: 0.897292
Validation loss decreased (inf --> 0.366691).  Saving model ...
Epoch: 2, Training Loss: 0.315908, Validation Loss: 0.373373, Training Accuracy: 0.934329, Validation Accuracy: 0.892437
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.308282, Validation Loss: 0.373358, Training Accuracy: 0.933520, Validation Accuracy: 0.894678
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.306599, Validation Loss: 0.376256, Training Accuracy: 0.935387, Validation Accuracy: 0.889823
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.305165, Validation Loss: 0.362823, Training Accuracy: 0.939807, Validation Accuracy: 0.895612
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
Validation loss decreased (0.366691 --> 0.362823).  Saving model ...
Epoch: 6, Training Loss: 0.290335, Validation Loss: 0.353638, Training Accuracy: 0.944227, Validation Accuracy: 0.901587
Validation loss decreased (0.362823 --> 0.353638).  Saving model ...
Epoch: 7, Training Loss: 0.288991, Validation Loss: 0.344062, Training Accuracy: 0.947028, Validation Accuracy: 0.904762
Validation loss decreased (0.353638 --> 0.344062).  Saving model ...
Epoch: 8, Training Loss: 0.286351, Validation Loss: 0.348460, Training Accuracy: 0.948459, Validation Accuracy: 0.904202
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.286413, Validation Loss: 0.345552, Training Accuracy: 0.947277, Validation Accuracy: 0.903641
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.291045, Validation Loss: 0.347874, Training Accuracy: 0.946281, Validation Accuracy: 0.903641
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 3 out of 10
Epoch: 11, Training Loss: 0.282208, Validation Loss: 0.346890, Training Accuracy: 0.949455, Validation Accuracy: 0.903081
EarlyStopping counter: 4 out of 10
Epoch: 12, Training Loss: 0.291407, Validation Loss: 0.348490, Training Accuracy: 0.945098, Validation Accuracy: 0.904949
EarlyStopping counter: 5 out of 10
Epoch: 13, Training Loss: 0.286073, Validation Loss: 0.346858, Training Accuracy: 0.946903, Validation Accuracy: 0.905135
EarlyStopping counter: 6 out of 10
Epoch: 14, Training Loss: 0.285699, Validation Loss: 0.347848, Training Accuracy: 0.946592, Validation Accuracy: 0.902521
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 7 out of 10
Epoch: 15, Training Loss: 0.283099, Validation Loss: 0.347211, Training Accuracy: 0.947028, Validation Accuracy: 0.904202
EarlyStopping counter: 8 out of 10
Epoch: 16, Training Loss: 0.283513, Validation Loss: 0.348358, Training Accuracy: 0.949953, Validation Accuracy: 0.904762
EarlyStopping counter: 9 out of 10
Epoch: 17, Training Loss: 0.281718, Validation Loss: 0.347496, Training Accuracy: 0.948335, Validation Accuracy: 0.904949
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 17
Ended Training Cycle
backbone.blocks.3.2._expand_conv
[575, 316, 583, 0, 383, 373, 544, 635, 477, 106, 456, 480, 619, 522, 329, 533, 105, 514, 337, 571, 166, 220, 183, 668, 258, 65, 608, 251, 415, 280, 208, 165, 111, 268, 1, 127, 101, 196, 403, 149, 628, 535, 508, 20, 555, 433, 192, 118, 665, 366, 179, 339, 69, 494, 83, 646, 586, 173, 393, 290, 439, 312, 168, 262, 552, 647, 42, 511]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.2._expand_conv (Conv2d(90, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.2._expand_conv (Conv2d(90, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
[1] prune_out_channels on backbone.blocks.3.2._expand_conv (Conv2d(90, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.2._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[2] prune_out_channels on backbone.blocks.3.2._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_56(HardtanhBackward0), #idxs=68
[3] prune_out_channels on _ElementWiseOp_56(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(604, 604, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=604, bias=False)), #idxs=68
[4] prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(604, 604, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=604, bias=False)) => prune_out_channels on backbone.blocks.3.2._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[5] prune_out_channels on backbone.blocks.3.2._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_55(HardtanhBackward0), #idxs=68
[6] prune_out_channels on _ElementWiseOp_55(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.2._project_conv (Conv2d(604, 90, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.2._expand_conv
57
tensor([False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True])
torch.Size([672])
torch.Size([604])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.2._depthwise_conv
56
tensor([False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True])
torch.Size([672])
torch.Size([604])
backbone.blocks.3.2._depthwise_conv
[133, 200, 22, 138, 524, 587, 296, 174, 491, 351, 23, 456, 286, 546, 393, 146, 101, 324, 432, 269, 267, 511, 178, 555, 319, 253, 526, 266, 109, 63, 389, 573, 592, 135, 196, 501, 568, 313, 594, 46, 258, 530, 461, 359, 183, 132, 203, 431, 149, 229, 562, 424, 531, 584, 280, 438, 583, 455, 177, 155, 114]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)), #idxs=61
[1] prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on _ElementWiseOp_56(HardtanhBackward0), #idxs=61
[2] prune_out_channels on backbone.blocks.3.2._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on backbone.blocks.3.2._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[3] prune_out_channels on backbone.blocks.3.2._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_55(HardtanhBackward0), #idxs=61
[4] prune_out_channels on _ElementWiseOp_55(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.2._project_conv (Conv2d(543, 90, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
[5] prune_out_channels on _ElementWiseOp_56(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.2._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[6] prune_out_channels on backbone.blocks.3.2._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.2._expand_conv (Conv2d(90, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.2._depthwise_conv
56
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([604])
torch.Size([543])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.2._expand_conv
57
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([604])
torch.Size([543])
backbone.blocks.3.2._project_conv
[53, 21, 27, 29, 32, 34, 36, 38, 39]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.2._project_conv (Conv2d(543, 81, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.2._project_conv (Conv2d(543, 81, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[1] prune_out_channels on backbone.blocks.3.2._project_conv (Conv2d(543, 81, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[2] prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_25(AddBackward0), #idxs=9
[3] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on _ElementWiseOp_26(AddBackward0), #idxs=9
[4] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on _ElementWiseOp_24(AddBackward0), #idxs=9
[5] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_in_channels on backbone.blocks.3.3._expand_conv (Conv2d(81, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[6] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[7] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on _ElementWiseOp_23(AddBackward0), #idxs=9
[8] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_in_channels on backbone.blocks.3.4._expand_conv (Conv2d(81, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[9] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[10] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on _ElementWiseOp_22(AddBackward0), #idxs=9
[11] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_in_channels on backbone.blocks.3.5._expand_conv (Conv2d(81, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[12] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[13] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_in_channels on backbone.blocks.4.0._expand_conv (Conv2d(81, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[14] prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.5._project_conv (Conv2d(672, 81, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[15] prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.4._project_conv (Conv2d(672, 81, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[16] prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.3._project_conv (Conv2d(672, 81, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[17] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[18] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[19] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_in_channels on backbone.blocks.3.2._expand_conv (Conv2d(81, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[20] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.0._project_conv (Conv2d(271, 81, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[21] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.3.1._expand_conv (Conv2d(81, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[22] prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(81, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.1._project_conv (Conv2d(543, 81, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.2._project_conv
55
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([90])
torch.Size([81])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.5._project_conv
46
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([90])
torch.Size([81])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.4._project_conv
49
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([90])
torch.Size([81])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.3._project_conv
52
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([90])
torch.Size([81])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.0._project_conv
61
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([90])
torch.Size([81])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.1._project_conv
58
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([90])
torch.Size([81])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 81, 10, 10]          21,951          21,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 81, 10, 10]             162             162
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          43,983          43,983
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 81, 10, 10]          43,983          43,983
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 81, 10, 10]             162             162
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          43,983          43,983
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 81, 10, 10]          43,983          43,983
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 81, 10, 10]             162             162
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 672, 10, 10]          54,432          54,432
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 81, 10, 10]          54,432          54,432
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 81, 10, 10]             162             162
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          54,432          54,432
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 81, 10, 10]          54,432          54,432
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 81, 10, 10]             162             162
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          54,432          54,432
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 81, 10, 10]          54,432          54,432
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 81, 10, 10]             162             162
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          54,432          54,432
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,336,799
Trainable params: 11,336,799
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.350137, Validation Loss: 0.378624, Training Accuracy: 0.916340, Validation Accuracy: 0.891130
Validation loss decreased (inf --> 0.378624).  Saving model ...
Epoch: 2, Training Loss: 0.336396, Validation Loss: 0.403598, Training Accuracy: 0.923436, Validation Accuracy: 0.882913
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.322717, Validation Loss: 0.378283, Training Accuracy: 0.927918, Validation Accuracy: 0.891690
Validation loss decreased (0.378624 --> 0.378283).  Saving model ...
Epoch: 4, Training Loss: 0.317333, Validation Loss: 0.387585, Training Accuracy: 0.929910, Validation Accuracy: 0.888702
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.313899, Validation Loss: 0.394722, Training Accuracy: 0.932088, Validation Accuracy: 0.883287
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.298731, Validation Loss: 0.353060, Training Accuracy: 0.940243, Validation Accuracy: 0.899533
Validation loss decreased (0.378283 --> 0.353060).  Saving model ...
Epoch: 7, Training Loss: 0.294774, Validation Loss: 0.352042, Training Accuracy: 0.941674, Validation Accuracy: 0.899346
Validation loss decreased (0.353060 --> 0.352042).  Saving model ...
Epoch: 8, Training Loss: 0.295345, Validation Loss: 0.350840, Training Accuracy: 0.945658, Validation Accuracy: 0.901587
Validation loss decreased (0.352042 --> 0.350840).  Saving model ...
Epoch: 9, Training Loss: 0.298926, Validation Loss: 0.352810, Training Accuracy: 0.943231, Validation Accuracy: 0.901214
EarlyStopping counter: 1 out of 10
Epoch: 10, Training Loss: 0.293235, Validation Loss: 0.352532, Training Accuracy: 0.944227, Validation Accuracy: 0.900654
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 11, Training Loss: 0.297201, Validation Loss: 0.352460, Training Accuracy: 0.944164, Validation Accuracy: 0.901774
EarlyStopping counter: 3 out of 10
Epoch: 12, Training Loss: 0.292810, Validation Loss: 0.351715, Training Accuracy: 0.943542, Validation Accuracy: 0.902708
EarlyStopping counter: 4 out of 10
Epoch: 13, Training Loss: 0.296856, Validation Loss: 0.349413, Training Accuracy: 0.943915, Validation Accuracy: 0.902148
Validation loss decreased (0.350840 --> 0.349413).  Saving model ...
Epoch: 14, Training Loss: 0.295877, Validation Loss: 0.351851, Training Accuracy: 0.941052, Validation Accuracy: 0.903081
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 1 out of 10
Epoch: 15, Training Loss: 0.297976, Validation Loss: 0.350264, Training Accuracy: 0.943604, Validation Accuracy: 0.902708
EarlyStopping counter: 2 out of 10
Epoch: 16, Training Loss: 0.298027, Validation Loss: 0.350433, Training Accuracy: 0.944227, Validation Accuracy: 0.902894
EarlyStopping counter: 3 out of 10
Epoch: 17, Training Loss: 0.300113, Validation Loss: 0.349436, Training Accuracy: 0.940492, Validation Accuracy: 0.902148
EarlyStopping counter: 4 out of 10
Epoch: 18, Training Loss: 0.296846, Validation Loss: 0.351829, Training Accuracy: 0.942546, Validation Accuracy: 0.901961
EarlyStopping counter: 5 out of 10
Epoch: 19, Training Loss: 0.290184, Validation Loss: 0.350053, Training Accuracy: 0.944725, Validation Accuracy: 0.902708
EarlyStopping counter: 6 out of 10
Epoch: 20, Training Loss: 0.293544, Validation Loss: 0.351739, Training Accuracy: 0.944164, Validation Accuracy: 0.902334
EarlyStopping counter: 7 out of 10
Epoch: 21, Training Loss: 0.296893, Validation Loss: 0.351155, Training Accuracy: 0.943168, Validation Accuracy: 0.902521
EarlyStopping counter: 8 out of 10
Epoch: 22, Training Loss: 0.293065, Validation Loss: 0.350660, Training Accuracy: 0.943729, Validation Accuracy: 0.901774
EarlyStopping counter: 9 out of 10
Epoch: 23, Training Loss: 0.293348, Validation Loss: 0.351795, Training Accuracy: 0.943480, Validation Accuracy: 0.902894
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 23
Ended Training Cycle
backbone.blocks.3.3._expand_conv
[614, 620, 520, 346, 570, 240, 593, 389, 8, 612, 606, 308, 630, 134, 264, 462, 476, 176, 182, 146, 485, 70, 494, 246, 327, 546, 501, 224, 380, 639, 594, 573, 55, 353, 254, 150, 655, 267, 274, 463, 129, 468, 293, 78, 190, 243, 61, 530, 13, 569, 409, 444, 379, 208, 269, 382, 341, 567, 589, 111, 536, 622, 113, 63, 290, 322, 568, 139]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.3._expand_conv (Conv2d(81, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.3._expand_conv (Conv2d(81, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
[1] prune_out_channels on backbone.blocks.3.3._expand_conv (Conv2d(81, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.3._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[2] prune_out_channels on backbone.blocks.3.3._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_58(HardtanhBackward0), #idxs=68
[3] prune_out_channels on _ElementWiseOp_58(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(604, 604, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=604, bias=False)), #idxs=68
[4] prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(604, 604, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=604, bias=False)) => prune_out_channels on backbone.blocks.3.3._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[5] prune_out_channels on backbone.blocks.3.3._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_57(HardtanhBackward0), #idxs=68
[6] prune_out_channels on _ElementWiseOp_57(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.3._project_conv (Conv2d(604, 81, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.3._expand_conv
54
tensor([ True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False, False,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([604])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.3._depthwise_conv
53
tensor([ True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False, False,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([604])
backbone.blocks.3.3._depthwise_conv
[181, 303, 300, 322, 34, 133, 231, 414, 412, 273, 21, 481, 180, 291, 198, 1, 50, 593, 558, 270, 279, 478, 299, 260, 529, 367, 64, 432, 213, 577, 257, 568, 304, 487, 527, 168, 306, 185, 498, 410, 526, 488, 129, 110, 31, 397, 457, 282, 210, 256, 461, 312, 192, 500, 26, 494, 556, 225, 252, 553, 235]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)), #idxs=61
[1] prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on _ElementWiseOp_58(HardtanhBackward0), #idxs=61
[2] prune_out_channels on backbone.blocks.3.3._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on backbone.blocks.3.3._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[3] prune_out_channels on backbone.blocks.3.3._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_57(HardtanhBackward0), #idxs=61
[4] prune_out_channels on _ElementWiseOp_57(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.3._project_conv (Conv2d(543, 81, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
[5] prune_out_channels on _ElementWiseOp_58(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.3._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[6] prune_out_channels on backbone.blocks.3.3._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.3._expand_conv (Conv2d(81, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.3._depthwise_conv
53
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True, False, False,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([604])
torch.Size([543])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.3._expand_conv
54
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True, False, False,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([604])
torch.Size([543])
backbone.blocks.3.3._project_conv
[56, 27, 28, 32, 34, 36, 45, 46, 49]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.3._project_conv (Conv2d(543, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.3._project_conv (Conv2d(543, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[1] prune_out_channels on backbone.blocks.3.3._project_conv (Conv2d(543, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[2] prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_24(AddBackward0), #idxs=9
[3] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on _ElementWiseOp_25(AddBackward0), #idxs=9
[4] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on _ElementWiseOp_23(AddBackward0), #idxs=9
[5] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_in_channels on backbone.blocks.3.4._expand_conv (Conv2d(72, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[6] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[7] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on _ElementWiseOp_22(AddBackward0), #idxs=9
[8] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_in_channels on backbone.blocks.3.5._expand_conv (Conv2d(72, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[9] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[10] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_in_channels on backbone.blocks.4.0._expand_conv (Conv2d(72, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[11] prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.5._project_conv (Conv2d(672, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[12] prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.4._project_conv (Conv2d(672, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[13] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[14] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on _ElementWiseOp_26(AddBackward0), #idxs=9
[15] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_in_channels on backbone.blocks.3.3._expand_conv (Conv2d(72, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[16] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[17] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=9
[18] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_in_channels on backbone.blocks.3.2._expand_conv (Conv2d(72, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[19] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.0._project_conv (Conv2d(271, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[20] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.3.1._expand_conv (Conv2d(72, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[21] prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.1._project_conv (Conv2d(543, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
[22] prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(72, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.2._project_conv (Conv2d(543, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=9
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.3._project_conv
52
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True])
torch.Size([81])
torch.Size([72])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.5._project_conv
46
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True])
torch.Size([81])
torch.Size([72])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.4._project_conv
49
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True])
torch.Size([81])
torch.Size([72])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.0._project_conv
61
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True])
torch.Size([81])
torch.Size([72])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.1._project_conv
58
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True])
torch.Size([81])
torch.Size([72])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.2._project_conv
55
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True])
torch.Size([81])
torch.Size([72])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 72, 10, 10]          19,512          19,512
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 72, 10, 10]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          39,096          39,096
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 72, 10, 10]          39,096          39,096
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 72, 10, 10]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          39,096          39,096
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 72, 10, 10]          39,096          39,096
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 72, 10, 10]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          39,096          39,096
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 72, 10, 10]          39,096          39,096
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 72, 10, 10]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 672, 10, 10]          48,384          48,384
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 72, 10, 10]          48,384          48,384
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 72, 10, 10]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          48,384          48,384
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 72, 10, 10]          48,384          48,384
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 72, 10, 10]             144             144
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          48,384          48,384
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,252,115
Trainable params: 11,252,115
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.325238, Validation Loss: 0.372378, Training Accuracy: 0.927544, Validation Accuracy: 0.890943
Validation loss decreased (inf --> 0.372378).  Saving model ...
Epoch: 2, Training Loss: 0.319028, Validation Loss: 0.379720, Training Accuracy: 0.931715, Validation Accuracy: 0.892624
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.317686, Validation Loss: 0.372746, Training Accuracy: 0.932026, Validation Accuracy: 0.898226
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.311022, Validation Loss: 0.353250, Training Accuracy: 0.936944, Validation Accuracy: 0.899160
Validation loss decreased (0.372378 --> 0.353250).  Saving model ...
Epoch: 5, Training Loss: 0.306215, Validation Loss: 0.375530, Training Accuracy: 0.937442, Validation Accuracy: 0.894865
EarlyStopping counter: 1 out of 10
Epoch: 6, Training Loss: 0.305675, Validation Loss: 0.365610, Training Accuracy: 0.938998, Validation Accuracy: 0.894678
EarlyStopping counter: 2 out of 10
Epoch: 7, Training Loss: 0.309162, Validation Loss: 0.374301, Training Accuracy: 0.938749, Validation Accuracy: 0.892810
EarlyStopping counter: 3 out of 10
Epoch: 8, Training Loss: 0.303499, Validation Loss: 0.373249, Training Accuracy: 0.941674, Validation Accuracy: 0.897292
Epoch 00008: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 9, Training Loss: 0.294277, Validation Loss: 0.351694, Training Accuracy: 0.946281, Validation Accuracy: 0.905135
Validation loss decreased (0.353250 --> 0.351694).  Saving model ...
Epoch: 10, Training Loss: 0.292775, Validation Loss: 0.352059, Training Accuracy: 0.948024, Validation Accuracy: 0.901774
EarlyStopping counter: 1 out of 10
Epoch: 11, Training Loss: 0.286643, Validation Loss: 0.350980, Training Accuracy: 0.950140, Validation Accuracy: 0.904388
Validation loss decreased (0.351694 --> 0.350980).  Saving model ...
Epoch: 12, Training Loss: 0.285974, Validation Loss: 0.348594, Training Accuracy: 0.951634, Validation Accuracy: 0.903081
Epoch 00012: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.350980 --> 0.348594).  Saving model ...
Epoch: 13, Training Loss: 0.285084, Validation Loss: 0.351564, Training Accuracy: 0.948646, Validation Accuracy: 0.902334
EarlyStopping counter: 1 out of 10
Epoch: 14, Training Loss: 0.289166, Validation Loss: 0.349110, Training Accuracy: 0.949642, Validation Accuracy: 0.902708
EarlyStopping counter: 2 out of 10
Epoch: 15, Training Loss: 0.286479, Validation Loss: 0.350130, Training Accuracy: 0.950327, Validation Accuracy: 0.904015
EarlyStopping counter: 3 out of 10
Epoch: 16, Training Loss: 0.289225, Validation Loss: 0.350602, Training Accuracy: 0.949455, Validation Accuracy: 0.902708
Epoch 00016: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 4 out of 10
Epoch: 17, Training Loss: 0.289929, Validation Loss: 0.347896, Training Accuracy: 0.951198, Validation Accuracy: 0.902521
Validation loss decreased (0.348594 --> 0.347896).  Saving model ...
Epoch: 18, Training Loss: 0.285333, Validation Loss: 0.347067, Training Accuracy: 0.950825, Validation Accuracy: 0.904762
Validation loss decreased (0.347896 --> 0.347067).  Saving model ...
Epoch: 19, Training Loss: 0.288694, Validation Loss: 0.351278, Training Accuracy: 0.947899, Validation Accuracy: 0.902521
EarlyStopping counter: 1 out of 10
Epoch: 20, Training Loss: 0.285934, Validation Loss: 0.350561, Training Accuracy: 0.948957, Validation Accuracy: 0.904388
EarlyStopping counter: 2 out of 10
Epoch: 21, Training Loss: 0.285517, Validation Loss: 0.348865, Training Accuracy: 0.949580, Validation Accuracy: 0.903455
EarlyStopping counter: 3 out of 10
Epoch: 22, Training Loss: 0.277896, Validation Loss: 0.350204, Training Accuracy: 0.952194, Validation Accuracy: 0.903641
EarlyStopping counter: 4 out of 10
Epoch: 23, Training Loss: 0.285089, Validation Loss: 0.350594, Training Accuracy: 0.949455, Validation Accuracy: 0.902334
EarlyStopping counter: 5 out of 10
Epoch: 24, Training Loss: 0.284428, Validation Loss: 0.350158, Training Accuracy: 0.947588, Validation Accuracy: 0.904202
EarlyStopping counter: 6 out of 10
Epoch: 25, Training Loss: 0.285640, Validation Loss: 0.350355, Training Accuracy: 0.948708, Validation Accuracy: 0.903828
EarlyStopping counter: 7 out of 10
Epoch: 26, Training Loss: 0.288044, Validation Loss: 0.349470, Training Accuracy: 0.949580, Validation Accuracy: 0.904015
EarlyStopping counter: 8 out of 10
Epoch: 27, Training Loss: 0.291355, Validation Loss: 0.347674, Training Accuracy: 0.946654, Validation Accuracy: 0.903268
EarlyStopping counter: 9 out of 10
Epoch: 28, Training Loss: 0.282182, Validation Loss: 0.348851, Training Accuracy: 0.950887, Validation Accuracy: 0.904015
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 28
Ended Training Cycle
backbone.blocks.3.4._expand_conv
[208, 464, 150, 663, 40, 620, 351, 636, 310, 418, 447, 436, 367, 522, 124, 162, 359, 81, 260, 459, 237, 463, 96, 323, 171, 11, 122, 32, 54, 650, 154, 493, 438, 249, 141, 139, 609, 304, 159, 528, 430, 327, 31, 7, 27, 432, 451, 415, 545, 433, 134, 60, 281, 535, 494, 530, 407, 256, 559, 385, 246, 21, 68, 648, 45, 235, 109, 382]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.4._expand_conv (Conv2d(72, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.4._expand_conv (Conv2d(72, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
[1] prune_out_channels on backbone.blocks.3.4._expand_conv (Conv2d(72, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.4._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[2] prune_out_channels on backbone.blocks.3.4._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_60(HardtanhBackward0), #idxs=68
[3] prune_out_channels on _ElementWiseOp_60(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(604, 604, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=604, bias=False)), #idxs=68
[4] prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(604, 604, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=604, bias=False)) => prune_out_channels on backbone.blocks.3.4._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[5] prune_out_channels on backbone.blocks.3.4._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_59(HardtanhBackward0), #idxs=68
[6] prune_out_channels on _ElementWiseOp_59(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.4._project_conv (Conv2d(604, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.4._expand_conv
51
tensor([ True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False, False,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([604])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.4._depthwise_conv
50
tensor([ True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False, False,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([604])
backbone.blocks.3.4._depthwise_conv
[350, 256, 40, 266, 207, 166, 293, 586, 132, 68, 246, 118, 463, 312, 461, 437, 396, 417, 258, 559, 105, 448, 535, 267, 450, 169, 509, 378, 366, 182, 477, 384, 278, 306, 398, 240, 430, 252, 271, 199, 429, 94, 126, 64, 109, 339, 158, 333, 530, 144, 222, 193, 307, 179, 583, 340, 526, 345, 125, 524, 580]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)), #idxs=61
[1] prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on _ElementWiseOp_60(HardtanhBackward0), #idxs=61
[2] prune_out_channels on backbone.blocks.3.4._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on backbone.blocks.3.4._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[3] prune_out_channels on backbone.blocks.3.4._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_59(HardtanhBackward0), #idxs=61
[4] prune_out_channels on _ElementWiseOp_59(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.4._project_conv (Conv2d(543, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
[5] prune_out_channels on _ElementWiseOp_60(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.4._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[6] prune_out_channels on backbone.blocks.3.4._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.4._expand_conv (Conv2d(72, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.4._depthwise_conv
50
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([604])
torch.Size([543])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.4._expand_conv
51
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([604])
torch.Size([543])
backbone.blocks.3.4._project_conv
[54, 22, 26, 29, 35, 38, 40, 44]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.4._project_conv (Conv2d(543, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.4._project_conv (Conv2d(543, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[1] prune_out_channels on backbone.blocks.3.4._project_conv (Conv2d(543, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[2] prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_23(AddBackward0), #idxs=8
[3] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on _ElementWiseOp_24(AddBackward0), #idxs=8
[4] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on _ElementWiseOp_22(AddBackward0), #idxs=8
[5] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_in_channels on backbone.blocks.3.5._expand_conv (Conv2d(64, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[6] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[7] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_in_channels on backbone.blocks.4.0._expand_conv (Conv2d(64, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[8] prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.5._project_conv (Conv2d(672, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[9] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[10] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on _ElementWiseOp_25(AddBackward0), #idxs=8
[11] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_in_channels on backbone.blocks.3.4._expand_conv (Conv2d(64, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[12] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[13] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on _ElementWiseOp_26(AddBackward0), #idxs=8
[14] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_in_channels on backbone.blocks.3.3._expand_conv (Conv2d(64, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[15] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[16] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=8
[17] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_in_channels on backbone.blocks.3.2._expand_conv (Conv2d(64, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[18] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.0._project_conv (Conv2d(271, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[19] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.3.1._expand_conv (Conv2d(64, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[20] prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.1._project_conv (Conv2d(543, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[21] prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.2._project_conv (Conv2d(543, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
[22] prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.3._project_conv (Conv2d(543, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=8
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.4._project_conv
49
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([72])
torch.Size([64])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.5._project_conv
46
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([72])
torch.Size([64])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.0._project_conv
61
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([72])
torch.Size([64])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.1._project_conv
58
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([72])
torch.Size([64])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.2._project_conv
55
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([72])
torch.Size([64])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.3._project_conv
52
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([72])
torch.Size([64])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 64, 10, 10]          17,344          17,344
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 64, 10, 10]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          34,752          34,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 64, 10, 10]          34,752          34,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 64, 10, 10]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          34,752          34,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 64, 10, 10]          34,752          34,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 64, 10, 10]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          34,752          34,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 64, 10, 10]          34,752          34,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 64, 10, 10]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          34,752          34,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 64, 10, 10]          34,752          34,752
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 64, 10, 10]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 672, 10, 10]          43,008          43,008
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 672, 10, 10]           6,048           6,048
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 64, 10, 10]          43,008          43,008
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 64, 10, 10]             128             128
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          43,008          43,008
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,178,718
Trainable params: 11,178,718
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.343478, Validation Loss: 0.391352, Training Accuracy: 0.923685, Validation Accuracy: 0.885901
Validation loss decreased (inf --> 0.391352).  Saving model ...
Epoch: 2, Training Loss: 0.333160, Validation Loss: 0.382615, Training Accuracy: 0.924930, Validation Accuracy: 0.892437
Validation loss decreased (0.391352 --> 0.382615).  Saving model ...
Epoch: 3, Training Loss: 0.329428, Validation Loss: 0.407088, Training Accuracy: 0.929599, Validation Accuracy: 0.875070
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.320629, Validation Loss: 0.385922, Training Accuracy: 0.933831, Validation Accuracy: 0.887021
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.312344, Validation Loss: 0.397611, Training Accuracy: 0.935636, Validation Accuracy: 0.878431
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 3 out of 10
Epoch: 6, Training Loss: 0.305464, Validation Loss: 0.357516, Training Accuracy: 0.941052, Validation Accuracy: 0.902708
Validation loss decreased (0.382615 --> 0.357516).  Saving model ...
Epoch: 7, Training Loss: 0.300028, Validation Loss: 0.356843, Training Accuracy: 0.944662, Validation Accuracy: 0.901774
Validation loss decreased (0.357516 --> 0.356843).  Saving model ...
Epoch: 8, Training Loss: 0.299499, Validation Loss: 0.356232, Training Accuracy: 0.946779, Validation Accuracy: 0.906069
Validation loss decreased (0.356843 --> 0.356232).  Saving model ...
Epoch: 9, Training Loss: 0.302481, Validation Loss: 0.356300, Training Accuracy: 0.941799, Validation Accuracy: 0.904949
EarlyStopping counter: 1 out of 10
Epoch: 10, Training Loss: 0.301606, Validation Loss: 0.353244, Training Accuracy: 0.942670, Validation Accuracy: 0.905696
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.356232 --> 0.353244).  Saving model ...
Epoch: 11, Training Loss: 0.298426, Validation Loss: 0.353946, Training Accuracy: 0.944849, Validation Accuracy: 0.905509
EarlyStopping counter: 1 out of 10
Epoch: 12, Training Loss: 0.296369, Validation Loss: 0.353260, Training Accuracy: 0.946094, Validation Accuracy: 0.906069
EarlyStopping counter: 2 out of 10
Epoch: 13, Training Loss: 0.296927, Validation Loss: 0.354752, Training Accuracy: 0.944911, Validation Accuracy: 0.905135
EarlyStopping counter: 3 out of 10
Epoch: 14, Training Loss: 0.299546, Validation Loss: 0.352910, Training Accuracy: 0.943480, Validation Accuracy: 0.905509
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
Validation loss decreased (0.353244 --> 0.352910).  Saving model ...
Epoch: 15, Training Loss: 0.294634, Validation Loss: 0.355369, Training Accuracy: 0.946841, Validation Accuracy: 0.905509
EarlyStopping counter: 1 out of 10
Epoch: 16, Training Loss: 0.296056, Validation Loss: 0.353696, Training Accuracy: 0.945596, Validation Accuracy: 0.905322
EarlyStopping counter: 2 out of 10
Epoch: 17, Training Loss: 0.296110, Validation Loss: 0.353151, Training Accuracy: 0.942359, Validation Accuracy: 0.905882
EarlyStopping counter: 3 out of 10
Epoch: 18, Training Loss: 0.295685, Validation Loss: 0.354570, Training Accuracy: 0.944413, Validation Accuracy: 0.905696
EarlyStopping counter: 4 out of 10
Epoch: 19, Training Loss: 0.296125, Validation Loss: 0.356002, Training Accuracy: 0.944476, Validation Accuracy: 0.904949
EarlyStopping counter: 5 out of 10
Epoch: 20, Training Loss: 0.301917, Validation Loss: 0.353477, Training Accuracy: 0.941737, Validation Accuracy: 0.905696
EarlyStopping counter: 6 out of 10
Epoch: 21, Training Loss: 0.294024, Validation Loss: 0.353887, Training Accuracy: 0.946343, Validation Accuracy: 0.905135
EarlyStopping counter: 7 out of 10
Epoch: 22, Training Loss: 0.298740, Validation Loss: 0.355357, Training Accuracy: 0.945969, Validation Accuracy: 0.904949
EarlyStopping counter: 8 out of 10
Epoch: 23, Training Loss: 0.295054, Validation Loss: 0.355667, Training Accuracy: 0.945658, Validation Accuracy: 0.904762
EarlyStopping counter: 9 out of 10
Epoch: 24, Training Loss: 0.291535, Validation Loss: 0.353796, Training Accuracy: 0.946841, Validation Accuracy: 0.904949
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 24
Ended Training Cycle
backbone.blocks.3.5._expand_conv
[343, 385, 607, 69, 402, 456, 189, 671, 654, 159, 109, 388, 260, 593, 477, 565, 575, 514, 336, 42, 167, 545, 602, 549, 75, 548, 660, 661, 371, 496, 135, 62, 619, 103, 132, 656, 578, 366, 128, 139, 543, 541, 236, 286, 1, 542, 64, 331, 606, 270, 101, 341, 198, 322, 588, 378, 633, 274, 254, 344, 414, 12, 258, 629, 487, 475, 579, 493]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.5._expand_conv (Conv2d(64, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.5._expand_conv (Conv2d(64, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
[1] prune_out_channels on backbone.blocks.3.5._expand_conv (Conv2d(64, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.5._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[2] prune_out_channels on backbone.blocks.3.5._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_62(HardtanhBackward0), #idxs=68
[3] prune_out_channels on _ElementWiseOp_62(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(604, 604, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=604, bias=False)), #idxs=68
[4] prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(604, 604, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=604, bias=False)) => prune_out_channels on backbone.blocks.3.5._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[5] prune_out_channels on backbone.blocks.3.5._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_61(HardtanhBackward0), #idxs=68
[6] prune_out_channels on _ElementWiseOp_61(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.5._project_conv (Conv2d(604, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.5._expand_conv
48
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False, False,  True, False,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False])
torch.Size([672])
torch.Size([604])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.5._depthwise_conv
47
tensor([ True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False, False,  True, False,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False])
torch.Size([672])
torch.Size([604])
backbone.blocks.3.5._depthwise_conv
[50, 211, 289, 293, 422, 26, 93, 498, 173, 521, 322, 340, 343, 494, 61, 158, 426, 421, 250, 167, 514, 23, 65, 569, 83, 551, 11, 533, 324, 434, 268, 266, 290, 94, 245, 81, 38, 190, 73, 546, 424, 152, 580, 499, 536, 90, 18, 306, 465, 92, 48, 411, 501, 556, 596, 477, 123, 68, 542, 442, 7]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)), #idxs=61
[1] prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on _ElementWiseOp_62(HardtanhBackward0), #idxs=61
[2] prune_out_channels on backbone.blocks.3.5._depthwise_conv (Conv2d(543, 543, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=543, bias=False)) => prune_out_channels on backbone.blocks.3.5._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[3] prune_out_channels on backbone.blocks.3.5._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_61(HardtanhBackward0), #idxs=61
[4] prune_out_channels on _ElementWiseOp_61(HardtanhBackward0) => prune_in_channels on backbone.blocks.3.5._project_conv (Conv2d(543, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
[5] prune_out_channels on _ElementWiseOp_62(HardtanhBackward0) => prune_out_channels on backbone.blocks.3.5._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[6] prune_out_channels on backbone.blocks.3.5._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.5._expand_conv (Conv2d(64, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.3.5._depthwise_conv
47
tensor([ True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True, False, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([604])
torch.Size([543])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.5._expand_conv
48
tensor([ True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True, False, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([604])
torch.Size([543])
backbone.blocks.3.5._project_conv
[55, 47, 45, 43, 41, 48, 0]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.3.5._project_conv (Conv2d(543, 57, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.5._project_conv (Conv2d(543, 57, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[1] prune_out_channels on backbone.blocks.3.5._project_conv (Conv2d(543, 57, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=7
[2] prune_out_channels on backbone.blocks.3.5._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_22(AddBackward0), #idxs=7
[3] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_out_channels on _ElementWiseOp_23(AddBackward0), #idxs=7
[4] prune_out_channels on _ElementWiseOp_22(AddBackward0) => prune_in_channels on backbone.blocks.4.0._expand_conv (Conv2d(57, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[5] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=7
[6] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_out_channels on _ElementWiseOp_24(AddBackward0), #idxs=7
[7] prune_out_channels on _ElementWiseOp_23(AddBackward0) => prune_in_channels on backbone.blocks.3.5._expand_conv (Conv2d(57, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[8] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=7
[9] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_out_channels on _ElementWiseOp_25(AddBackward0), #idxs=7
[10] prune_out_channels on _ElementWiseOp_24(AddBackward0) => prune_in_channels on backbone.blocks.3.4._expand_conv (Conv2d(57, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[11] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=7
[12] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_out_channels on _ElementWiseOp_26(AddBackward0), #idxs=7
[13] prune_out_channels on _ElementWiseOp_25(AddBackward0) => prune_in_channels on backbone.blocks.3.3._expand_conv (Conv2d(57, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[14] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=7
[15] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=7
[16] prune_out_channels on _ElementWiseOp_26(AddBackward0) => prune_in_channels on backbone.blocks.3.2._expand_conv (Conv2d(57, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[17] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.0._project_conv (Conv2d(271, 57, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[18] prune_out_channels on backbone.blocks.3.0._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.3.1._expand_conv (Conv2d(57, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[19] prune_out_channels on backbone.blocks.3.1._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.1._project_conv (Conv2d(543, 57, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[20] prune_out_channels on backbone.blocks.3.2._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.2._project_conv (Conv2d(543, 57, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[21] prune_out_channels on backbone.blocks.3.3._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.3._project_conv (Conv2d(543, 57, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
[22] prune_out_channels on backbone.blocks.3.4._bn2 (BatchNorm2d(57, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.3.4._project_conv (Conv2d(543, 57, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=7
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.5._project_conv
46
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True, False,  True, False, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([64])
torch.Size([57])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.0._project_conv
61
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True, False,  True, False, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([64])
torch.Size([57])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.1._project_conv
58
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True, False,  True, False, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([64])
torch.Size([57])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.2._project_conv
55
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True, False,  True, False, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([64])
torch.Size([57])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.3._project_conv
52
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True, False,  True, False, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([64])
torch.Size([57])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.3.4._project_conv
49
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True, False,  True, False, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([64])
torch.Size([57])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 672, 10, 10]          38,304          38,304
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 672, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 672, 10, 10]          16,800          16,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 672, 10, 10]           1,344           1,344
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 160, 10, 10]         107,520         107,520
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 160, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 160, 10, 10]             320             320
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         153,600         153,600
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 11,115,834
Trainable params: 11,115,834
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.414393, Validation Loss: 0.412515, Training Accuracy: 0.887395, Validation Accuracy: 0.882540
Validation loss decreased (inf --> 0.412515).  Saving model ...
Epoch: 2, Training Loss: 0.376599, Validation Loss: 0.413235, Training Accuracy: 0.904637, Validation Accuracy: 0.877124
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.364240, Validation Loss: 0.428275, Training Accuracy: 0.910364, Validation Accuracy: 0.877311
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.351015, Validation Loss: 0.390277, Training Accuracy: 0.918332, Validation Accuracy: 0.887582
Validation loss decreased (0.412515 --> 0.390277).  Saving model ...
Epoch: 5, Training Loss: 0.356312, Validation Loss: 0.383274, Training Accuracy: 0.917336, Validation Accuracy: 0.889823
Validation loss decreased (0.390277 --> 0.383274).  Saving model ...
Epoch: 6, Training Loss: 0.352335, Validation Loss: 0.380700, Training Accuracy: 0.917585, Validation Accuracy: 0.893931
Validation loss decreased (0.383274 --> 0.380700).  Saving model ...
Epoch: 7, Training Loss: 0.350545, Validation Loss: 0.380295, Training Accuracy: 0.918954, Validation Accuracy: 0.890756
Validation loss decreased (0.380700 --> 0.380295).  Saving model ...
Epoch: 8, Training Loss: 0.335431, Validation Loss: 0.366334, Training Accuracy: 0.926362, Validation Accuracy: 0.894491
Validation loss decreased (0.380295 --> 0.366334).  Saving model ...
Epoch: 9, Training Loss: 0.334384, Validation Loss: 0.376660, Training Accuracy: 0.927544, Validation Accuracy: 0.899160
EarlyStopping counter: 1 out of 10
Epoch: 10, Training Loss: 0.334070, Validation Loss: 0.391952, Training Accuracy: 0.928540, Validation Accuracy: 0.890756
EarlyStopping counter: 2 out of 10
Epoch: 11, Training Loss: 0.327297, Validation Loss: 0.410648, Training Accuracy: 0.931341, Validation Accuracy: 0.882166
EarlyStopping counter: 3 out of 10
Epoch: 12, Training Loss: 0.322520, Validation Loss: 0.382954, Training Accuracy: 0.930096, Validation Accuracy: 0.891877
Epoch 00012: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 13, Training Loss: 0.315220, Validation Loss: 0.358281, Training Accuracy: 0.937566, Validation Accuracy: 0.904388
Validation loss decreased (0.366334 --> 0.358281).  Saving model ...
Epoch: 14, Training Loss: 0.311330, Validation Loss: 0.363297, Training Accuracy: 0.941550, Validation Accuracy: 0.901587
EarlyStopping counter: 1 out of 10
Epoch: 15, Training Loss: 0.311551, Validation Loss: 0.360978, Training Accuracy: 0.936134, Validation Accuracy: 0.904015
EarlyStopping counter: 2 out of 10
Epoch: 16, Training Loss: 0.311577, Validation Loss: 0.357354, Training Accuracy: 0.939683, Validation Accuracy: 0.904949
Epoch 00016: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.358281 --> 0.357354).  Saving model ...
Epoch: 17, Training Loss: 0.308539, Validation Loss: 0.360008, Training Accuracy: 0.938873, Validation Accuracy: 0.904015
EarlyStopping counter: 1 out of 10
Epoch: 18, Training Loss: 0.311171, Validation Loss: 0.356661, Training Accuracy: 0.940430, Validation Accuracy: 0.904762
Validation loss decreased (0.357354 --> 0.356661).  Saving model ...
Epoch: 19, Training Loss: 0.307361, Validation Loss: 0.357494, Training Accuracy: 0.942733, Validation Accuracy: 0.903828
EarlyStopping counter: 1 out of 10
Epoch: 20, Training Loss: 0.303380, Validation Loss: 0.357433, Training Accuracy: 0.942235, Validation Accuracy: 0.905135
Epoch 00020: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 21, Training Loss: 0.303076, Validation Loss: 0.356849, Training Accuracy: 0.942421, Validation Accuracy: 0.904388
EarlyStopping counter: 3 out of 10
Epoch: 22, Training Loss: 0.304817, Validation Loss: 0.357322, Training Accuracy: 0.941923, Validation Accuracy: 0.904015
EarlyStopping counter: 4 out of 10
Epoch: 23, Training Loss: 0.304766, Validation Loss: 0.359090, Training Accuracy: 0.942733, Validation Accuracy: 0.903828
EarlyStopping counter: 5 out of 10
Epoch: 24, Training Loss: 0.313719, Validation Loss: 0.355826, Training Accuracy: 0.939869, Validation Accuracy: 0.904015
Validation loss decreased (0.356661 --> 0.355826).  Saving model ...
Epoch: 25, Training Loss: 0.310286, Validation Loss: 0.357758, Training Accuracy: 0.941114, Validation Accuracy: 0.904575
EarlyStopping counter: 1 out of 10
Epoch: 26, Training Loss: 0.307349, Validation Loss: 0.359647, Training Accuracy: 0.940678, Validation Accuracy: 0.904202
EarlyStopping counter: 2 out of 10
Epoch: 27, Training Loss: 0.308499, Validation Loss: 0.356317, Training Accuracy: 0.942670, Validation Accuracy: 0.903268
EarlyStopping counter: 3 out of 10
Epoch: 28, Training Loss: 0.309954, Validation Loss: 0.357019, Training Accuracy: 0.940056, Validation Accuracy: 0.903828
EarlyStopping counter: 4 out of 10
Epoch: 29, Training Loss: 0.309220, Validation Loss: 0.356544, Training Accuracy: 0.942546, Validation Accuracy: 0.904388
EarlyStopping counter: 5 out of 10
Epoch: 30, Training Loss: 0.305658, Validation Loss: 0.358321, Training Accuracy: 0.942172, Validation Accuracy: 0.903455
EarlyStopping counter: 6 out of 10
Epoch: 31, Training Loss: 0.314244, Validation Loss: 0.357425, Training Accuracy: 0.938624, Validation Accuracy: 0.904388
EarlyStopping counter: 7 out of 10
Epoch: 32, Training Loss: 0.308682, Validation Loss: 0.356034, Training Accuracy: 0.940616, Validation Accuracy: 0.904575
EarlyStopping counter: 8 out of 10
Epoch: 33, Training Loss: 0.307248, Validation Loss: 0.358713, Training Accuracy: 0.940305, Validation Accuracy: 0.904388
EarlyStopping counter: 9 out of 10
Epoch: 34, Training Loss: 0.311832, Validation Loss: 0.358231, Training Accuracy: 0.941861, Validation Accuracy: 0.903455
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 34
Ended Training Cycle
backbone.blocks.4.0._expand_conv
[35, 115, 456, 319, 141, 314, 94, 39, 173, 605, 197, 560, 90, 59, 28, 446, 309, 293, 49, 54, 227, 390, 138, 372, 47, 566, 15, 601, 45, 55, 312, 652, 486, 257, 341, 537, 621, 258, 644, 666, 388, 148, 222, 241, 84, 11, 223, 434, 63, 102, 75, 62, 531, 331, 371, 298, 607, 389, 41, 421, 5, 618, 497, 442, 283, 134, 414, 488]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.0._expand_conv (Conv2d(57, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.0._expand_conv (Conv2d(57, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
[1] prune_out_channels on backbone.blocks.4.0._expand_conv (Conv2d(57, 604, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.0._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[2] prune_out_channels on backbone.blocks.4.0._bn0 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_21(HardtanhBackward0), #idxs=68
[3] prune_out_channels on _ElementWiseOp_21(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(604, 604, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=604, bias=False)), #idxs=68
[4] prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(604, 604, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=604, bias=False)) => prune_out_channels on backbone.blocks.4.0._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=68
[5] prune_out_channels on backbone.blocks.4.0._bn1 (BatchNorm2d(604, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_20(HardtanhBackward0), #idxs=68
[6] prune_out_channels on _ElementWiseOp_20(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.0._project_conv (Conv2d(604, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=68
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.0._expand_conv
45
tensor([ True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True,  True,  True, False,  True, False,  True, False,
         True,  True,  True,  True, False, False,  True,  True,  True, False,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([604])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.0._depthwise_conv
44
tensor([ True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True,  True,  True, False,  True, False,  True, False,
         True,  True,  True,  True, False, False,  True,  True,  True, False,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True])
torch.Size([672])
torch.Size([604])
backbone.blocks.4.0._depthwise_conv
[603, 225, 269, 162, 134, 332, 351, 571, 566, 477, 367, 271, 518, 96, 555, 4, 390, 517, 416, 112, 34, 278, 378, 460, 339, 522, 307, 429, 358, 468, 56, 196, 422, 469, 538, 368, 213, 446, 108, 531, 148, 409, 284, 31, 495, 441, 588, 591, 97, 150, 355, 214, 391, 478, 373, 308, 371, 74, 587, 264, 103]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(543, 543, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=543, bias=False)) => prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(543, 543, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=543, bias=False)), #idxs=61
[1] prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(543, 543, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=543, bias=False)) => prune_out_channels on _ElementWiseOp_21(HardtanhBackward0), #idxs=61
[2] prune_out_channels on backbone.blocks.4.0._depthwise_conv (Conv2d(543, 543, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=543, bias=False)) => prune_out_channels on backbone.blocks.4.0._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[3] prune_out_channels on backbone.blocks.4.0._bn1 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_20(HardtanhBackward0), #idxs=61
[4] prune_out_channels on _ElementWiseOp_20(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.0._project_conv (Conv2d(543, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
[5] prune_out_channels on _ElementWiseOp_21(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.0._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=61
[6] prune_out_channels on backbone.blocks.4.0._bn0 (BatchNorm2d(543, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.0._expand_conv (Conv2d(57, 543, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=61
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.0._depthwise_conv
44
tensor([ True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False])
torch.Size([604])
torch.Size([543])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.0._expand_conv
45
tensor([ True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False])
torch.Size([604])
torch.Size([543])
backbone.blocks.4.0._project_conv
[71, 88, 87, 86, 84, 82, 79, 78, 77, 73, 72, 91, 69, 68, 66, 64]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.0._project_conv (Conv2d(543, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.0._project_conv (Conv2d(543, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[1] prune_out_channels on backbone.blocks.4.0._project_conv (Conv2d(543, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[2] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_19(AddBackward0), #idxs=16
[3] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.4.1._expand_conv (Conv2d(144, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[4] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[5] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on _ElementWiseOp_18(AddBackward0), #idxs=16
[6] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_in_channels on backbone.blocks.4.2._expand_conv (Conv2d(144, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[7] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[8] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on _ElementWiseOp_17(AddBackward0), #idxs=16
[9] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_in_channels on backbone.blocks.4.3._expand_conv (Conv2d(144, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[10] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[11] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on _ElementWiseOp_16(AddBackward0), #idxs=16
[12] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_in_channels on backbone.blocks.4.4._expand_conv (Conv2d(144, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[13] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[14] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on _ElementWiseOp_15(AddBackward0), #idxs=16
[15] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_in_channels on backbone.blocks.4.5._expand_conv (Conv2d(144, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[16] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[17] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_in_channels on backbone.blocks.5.0._expand_conv (Conv2d(144, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[18] prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.5._project_conv (Conv2d(960, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[19] prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.4._project_conv (Conv2d(960, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[20] prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.3._project_conv (Conv2d(960, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[21] prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.2._project_conv (Conv2d(960, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[22] prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.1._project_conv (Conv2d(960, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.0._project_conv
43
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True, False, False,
         True, False, False, False,  True,  True,  True, False, False, False,
         True,  True, False,  True, False,  True, False, False, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([160])
torch.Size([144])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.5._project_conv
28
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True, False, False,
         True, False, False, False,  True,  True,  True, False, False, False,
         True,  True, False,  True, False,  True, False, False, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([160])
torch.Size([144])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.4._project_conv
31
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True, False, False,
         True, False, False, False,  True,  True,  True, False, False, False,
         True,  True, False,  True, False,  True, False, False, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([160])
torch.Size([144])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.3._project_conv
34
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True, False, False,
         True, False, False, False,  True,  True,  True, False, False, False,
         True,  True, False,  True, False,  True, False, False, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([160])
torch.Size([144])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.2._project_conv
37
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True, False, False,
         True, False, False, False,  True,  True,  True, False, False, False,
         True,  True, False,  True, False,  True, False, False, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([160])
torch.Size([144])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.1._project_conv
40
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True, False, False,
         True, False, False, False,  True,  True,  True, False, False, False,
         True,  True, False,  True, False,  True, False, False, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([160])
torch.Size([144])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 144, 10, 10]          78,192          78,192
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 960, 10, 10]         138,240         138,240
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 144, 10, 10]         138,240         138,240
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         138,240         138,240
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 144, 10, 10]         138,240         138,240
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         138,240         138,240
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 144, 10, 10]         138,240         138,240
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         138,240         138,240
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 144, 10, 10]         138,240         138,240
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         138,240         138,240
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 144, 10, 10]         138,240         138,240
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 144, 10, 10]             288             288
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         138,240         138,240
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 10,906,260
Trainable params: 10,906,260
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.423755, Validation Loss: 0.464177, Training Accuracy: 0.885901, Validation Accuracy: 0.853968
Validation loss decreased (inf --> 0.464177).  Saving model ...
Epoch: 2, Training Loss: 0.378885, Validation Loss: 0.411670, Training Accuracy: 0.909555, Validation Accuracy: 0.880859
Validation loss decreased (0.464177 --> 0.411670).  Saving model ...
Epoch: 3, Training Loss: 0.372556, Validation Loss: 0.445146, Training Accuracy: 0.910738, Validation Accuracy: 0.867227
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.364336, Validation Loss: 0.401646, Training Accuracy: 0.913290, Validation Accuracy: 0.884220
Validation loss decreased (0.411670 --> 0.401646).  Saving model ...
Epoch: 5, Training Loss: 0.360497, Validation Loss: 0.400234, Training Accuracy: 0.914784, Validation Accuracy: 0.886648
Validation loss decreased (0.401646 --> 0.400234).  Saving model ...
Epoch: 6, Training Loss: 0.356900, Validation Loss: 0.401705, Training Accuracy: 0.918332, Validation Accuracy: 0.884034
EarlyStopping counter: 1 out of 10
Epoch: 7, Training Loss: 0.345373, Validation Loss: 0.390224, Training Accuracy: 0.922129, Validation Accuracy: 0.885528
Validation loss decreased (0.400234 --> 0.390224).  Saving model ...
Epoch: 8, Training Loss: 0.346975, Validation Loss: 0.412839, Training Accuracy: 0.922751, Validation Accuracy: 0.876564
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.344201, Validation Loss: 0.408360, Training Accuracy: 0.924183, Validation Accuracy: 0.877124
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.347042, Validation Loss: 0.398983, Training Accuracy: 0.924992, Validation Accuracy: 0.883847
EarlyStopping counter: 3 out of 10
Epoch: 11, Training Loss: 0.343225, Validation Loss: 0.451302, Training Accuracy: 0.925801, Validation Accuracy: 0.870028
Epoch 00011: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 12, Training Loss: 0.327767, Validation Loss: 0.370116, Training Accuracy: 0.930968, Validation Accuracy: 0.899907
Validation loss decreased (0.390224 --> 0.370116).  Saving model ...
Epoch: 13, Training Loss: 0.327134, Validation Loss: 0.372834, Training Accuracy: 0.935761, Validation Accuracy: 0.898413
EarlyStopping counter: 1 out of 10
Epoch: 14, Training Loss: 0.324851, Validation Loss: 0.368550, Training Accuracy: 0.934641, Validation Accuracy: 0.900093
Validation loss decreased (0.370116 --> 0.368550).  Saving model ...
Epoch: 15, Training Loss: 0.317582, Validation Loss: 0.369906, Training Accuracy: 0.937317, Validation Accuracy: 0.898599
EarlyStopping counter: 1 out of 10
Epoch: 16, Training Loss: 0.320251, Validation Loss: 0.372400, Training Accuracy: 0.937317, Validation Accuracy: 0.900280
Epoch 00016: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 17, Training Loss: 0.321045, Validation Loss: 0.369113, Training Accuracy: 0.936010, Validation Accuracy: 0.901401
EarlyStopping counter: 3 out of 10
Epoch: 18, Training Loss: 0.313985, Validation Loss: 0.367519, Training Accuracy: 0.937379, Validation Accuracy: 0.902148
Validation loss decreased (0.368550 --> 0.367519).  Saving model ...
Epoch: 19, Training Loss: 0.322570, Validation Loss: 0.368147, Training Accuracy: 0.934890, Validation Accuracy: 0.900467
EarlyStopping counter: 1 out of 10
Epoch: 20, Training Loss: 0.326241, Validation Loss: 0.368329, Training Accuracy: 0.933147, Validation Accuracy: 0.900093
Epoch 00020: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 21, Training Loss: 0.326382, Validation Loss: 0.368207, Training Accuracy: 0.933956, Validation Accuracy: 0.900654
EarlyStopping counter: 3 out of 10
Epoch: 22, Training Loss: 0.322911, Validation Loss: 0.367456, Training Accuracy: 0.936632, Validation Accuracy: 0.899907
Validation loss decreased (0.367519 --> 0.367456).  Saving model ...
Epoch: 23, Training Loss: 0.316688, Validation Loss: 0.369608, Training Accuracy: 0.937442, Validation Accuracy: 0.900654
EarlyStopping counter: 1 out of 10
Epoch: 24, Training Loss: 0.319984, Validation Loss: 0.369735, Training Accuracy: 0.937317, Validation Accuracy: 0.900467
EarlyStopping counter: 2 out of 10
Epoch: 25, Training Loss: 0.319305, Validation Loss: 0.367772, Training Accuracy: 0.936197, Validation Accuracy: 0.901587
EarlyStopping counter: 3 out of 10
Epoch: 26, Training Loss: 0.322209, Validation Loss: 0.369237, Training Accuracy: 0.934890, Validation Accuracy: 0.900840
EarlyStopping counter: 4 out of 10
Epoch: 27, Training Loss: 0.319493, Validation Loss: 0.369536, Training Accuracy: 0.936757, Validation Accuracy: 0.900280
EarlyStopping counter: 5 out of 10
Epoch: 28, Training Loss: 0.318576, Validation Loss: 0.368939, Training Accuracy: 0.939309, Validation Accuracy: 0.901214
EarlyStopping counter: 6 out of 10
Epoch: 29, Training Loss: 0.320666, Validation Loss: 0.368340, Training Accuracy: 0.938189, Validation Accuracy: 0.900840
EarlyStopping counter: 7 out of 10
Epoch: 30, Training Loss: 0.321799, Validation Loss: 0.368491, Training Accuracy: 0.936508, Validation Accuracy: 0.899907
EarlyStopping counter: 8 out of 10
Epoch: 31, Training Loss: 0.322638, Validation Loss: 0.368383, Training Accuracy: 0.937504, Validation Accuracy: 0.901214
EarlyStopping counter: 9 out of 10
Epoch: 32, Training Loss: 0.320132, Validation Loss: 0.369433, Training Accuracy: 0.935325, Validation Accuracy: 0.900654
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 32
Ended Training Cycle
backbone.blocks.4.1._expand_conv
[141, 177, 405, 378, 97, 86, 280, 439, 305, 546, 112, 264, 426, 93, 805, 249, 459, 235, 524, 561, 400, 585, 147, 643, 296, 174, 620, 866, 919, 574, 883, 698, 750, 6, 87, 682, 78, 699, 77, 299, 530, 143, 1, 816, 94, 702, 443, 767, 922, 553, 429, 791, 425, 650, 691, 904, 722, 912, 935, 217, 729, 526, 122, 684, 104, 693, 312, 253, 319, 548, 482, 690, 476, 895, 196, 854, 724, 465, 853, 624, 477, 119, 219, 57, 813, 432, 563, 890, 387, 411, 381, 458, 619, 955, 639, 540]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.1._expand_conv (Conv2d(144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.1._expand_conv (Conv2d(144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
[1] prune_out_channels on backbone.blocks.4.1._expand_conv (Conv2d(144, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.1._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[2] prune_out_channels on backbone.blocks.4.1._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_64(HardtanhBackward0), #idxs=96
[3] prune_out_channels on _ElementWiseOp_64(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=864, bias=False)), #idxs=96
[4] prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=864, bias=False)) => prune_out_channels on backbone.blocks.4.1._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[5] prune_out_channels on backbone.blocks.4.1._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_63(HardtanhBackward0), #idxs=96
[6] prune_out_channels on _ElementWiseOp_63(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.1._project_conv (Conv2d(864, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.1._expand_conv
42
tensor([ True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
        False, False,  True, False,  True,  True,  True,  True, False, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.1._depthwise_conv
41
tensor([ True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
        False, False,  True, False,  True,  True,  True,  True, False, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
backbone.blocks.4.1._depthwise_conv
[98, 31, 35, 647, 157, 528, 645, 97, 713, 124, 515, 177, 481, 307, 644, 72, 514, 216, 640, 761, 199, 45, 143, 572, 699, 357, 354, 218, 344, 213, 286, 122, 464, 629, 301, 535, 298, 530, 188, 19, 47, 166, 661, 788, 687, 587, 658, 41, 836, 311, 637, 455, 785, 609, 326, 760, 180, 305, 84, 313, 570, 59, 794, 692, 837, 272, 478, 189, 230, 659, 270, 46, 850, 296, 71, 757, 468, 55, 2, 597, 586, 327, 526, 438, 5, 253, 195]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)), #idxs=87
[1] prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on _ElementWiseOp_64(HardtanhBackward0), #idxs=87
[2] prune_out_channels on backbone.blocks.4.1._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.4.1._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[3] prune_out_channels on backbone.blocks.4.1._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_63(HardtanhBackward0), #idxs=87
[4] prune_out_channels on _ElementWiseOp_63(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.1._project_conv (Conv2d(777, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
[5] prune_out_channels on _ElementWiseOp_64(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.1._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[6] prune_out_channels on backbone.blocks.4.1._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.1._expand_conv (Conv2d(144, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.1._depthwise_conv
41
tensor([ True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True, False, False, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True, False,  True,  True,  True, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([864])
torch.Size([777])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.1._expand_conv
42
tensor([ True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True, False, False, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True, False,  True,  True,  True, False,  True, False,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([864])
torch.Size([777])
backbone.blocks.4.1._project_conv
[59, 88, 85, 84, 83, 81, 79, 77, 70, 61, 95, 57, 56, 54, 53]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.1._project_conv (Conv2d(777, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.1._project_conv (Conv2d(777, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[1] prune_out_channels on backbone.blocks.4.1._project_conv (Conv2d(777, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[2] prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_19(AddBackward0), #idxs=15
[3] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[4] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on _ElementWiseOp_18(AddBackward0), #idxs=15
[5] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_in_channels on backbone.blocks.4.2._expand_conv (Conv2d(129, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[6] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[7] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on _ElementWiseOp_17(AddBackward0), #idxs=15
[8] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_in_channels on backbone.blocks.4.3._expand_conv (Conv2d(129, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[9] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[10] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on _ElementWiseOp_16(AddBackward0), #idxs=15
[11] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_in_channels on backbone.blocks.4.4._expand_conv (Conv2d(129, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[12] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[13] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on _ElementWiseOp_15(AddBackward0), #idxs=15
[14] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_in_channels on backbone.blocks.4.5._expand_conv (Conv2d(129, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[15] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[16] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_in_channels on backbone.blocks.5.0._expand_conv (Conv2d(129, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[17] prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.5._project_conv (Conv2d(960, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[18] prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.4._project_conv (Conv2d(960, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[19] prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.3._project_conv (Conv2d(960, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[20] prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.2._project_conv (Conv2d(960, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[21] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.0._project_conv (Conv2d(543, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[22] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(129, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.4.1._expand_conv (Conv2d(129, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.1._project_conv
40
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False, False,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True, False,
         True, False,  True, False, False, False,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([144])
torch.Size([129])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.5._project_conv
28
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False, False,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True, False,
         True, False,  True, False, False, False,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([144])
torch.Size([129])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.4._project_conv
31
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False, False,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True, False,
         True, False,  True, False, False, False,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([144])
torch.Size([129])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.3._project_conv
34
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False, False,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True, False,
         True, False,  True, False, False, False,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([144])
torch.Size([129])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.2._project_conv
37
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False, False,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True, False,
         True, False,  True, False, False, False,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([144])
torch.Size([129])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.0._project_conv
43
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False, False,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True, False,
         True, False,  True, False, False, False,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([144])
torch.Size([129])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 129, 10, 10]          70,047          70,047
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 129, 10, 10]             258             258
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]         100,233         100,233
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 129, 10, 10]         100,233         100,233
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 129, 10, 10]             258             258
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 960, 10, 10]         123,840         123,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 129, 10, 10]         123,840         123,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 129, 10, 10]             258             258
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         123,840         123,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 129, 10, 10]         123,840         123,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 129, 10, 10]             258             258
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         123,840         123,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 129, 10, 10]         123,840         123,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 129, 10, 10]             258             258
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         123,840         123,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 129, 10, 10]         123,840         123,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 129, 10, 10]             258             258
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         123,840         123,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 10,687,014
Trainable params: 10,687,014
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.371018, Validation Loss: 0.397790, Training Accuracy: 0.913601, Validation Accuracy: 0.887768
Validation loss decreased (inf --> 0.397790).  Saving model ...
Epoch: 2, Training Loss: 0.358300, Validation Loss: 0.431614, Training Accuracy: 0.918830, Validation Accuracy: 0.871335
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.349361, Validation Loss: 0.396369, Training Accuracy: 0.920448, Validation Accuracy: 0.888889
Validation loss decreased (0.397790 --> 0.396369).  Saving model ...
Epoch: 4, Training Loss: 0.341532, Validation Loss: 0.456774, Training Accuracy: 0.924805, Validation Accuracy: 0.868721
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.355042, Validation Loss: 0.516888, Training Accuracy: 0.919514, Validation Accuracy: 0.839589
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.334715, Validation Loss: 0.378484, Training Accuracy: 0.932835, Validation Accuracy: 0.898599
Validation loss decreased (0.396369 --> 0.378484).  Saving model ...
Epoch: 7, Training Loss: 0.327179, Validation Loss: 0.371998, Training Accuracy: 0.934018, Validation Accuracy: 0.897292
Validation loss decreased (0.378484 --> 0.371998).  Saving model ...
Epoch: 8, Training Loss: 0.327083, Validation Loss: 0.371788, Training Accuracy: 0.935076, Validation Accuracy: 0.900467
Validation loss decreased (0.371998 --> 0.371788).  Saving model ...
Epoch: 9, Training Loss: 0.324411, Validation Loss: 0.375188, Training Accuracy: 0.935574, Validation Accuracy: 0.897292
EarlyStopping counter: 1 out of 10
Epoch: 10, Training Loss: 0.325385, Validation Loss: 0.369674, Training Accuracy: 0.933707, Validation Accuracy: 0.901027
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.371788 --> 0.369674).  Saving model ...
Epoch: 11, Training Loss: 0.327015, Validation Loss: 0.371581, Training Accuracy: 0.936383, Validation Accuracy: 0.901027
EarlyStopping counter: 1 out of 10
Epoch: 12, Training Loss: 0.319971, Validation Loss: 0.371680, Training Accuracy: 0.937815, Validation Accuracy: 0.900840
EarlyStopping counter: 2 out of 10
Epoch: 13, Training Loss: 0.320085, Validation Loss: 0.373170, Training Accuracy: 0.938749, Validation Accuracy: 0.900467
EarlyStopping counter: 3 out of 10
Epoch: 14, Training Loss: 0.324208, Validation Loss: 0.372180, Training Accuracy: 0.936259, Validation Accuracy: 0.900467
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 4 out of 10
Epoch: 15, Training Loss: 0.323803, Validation Loss: 0.371137, Training Accuracy: 0.936819, Validation Accuracy: 0.899907
EarlyStopping counter: 5 out of 10
Epoch: 16, Training Loss: 0.323990, Validation Loss: 0.373544, Training Accuracy: 0.935450, Validation Accuracy: 0.899720
EarlyStopping counter: 6 out of 10
Epoch: 17, Training Loss: 0.323865, Validation Loss: 0.372399, Training Accuracy: 0.936819, Validation Accuracy: 0.900280
EarlyStopping counter: 7 out of 10
Epoch: 18, Training Loss: 0.322872, Validation Loss: 0.370936, Training Accuracy: 0.934392, Validation Accuracy: 0.901587
EarlyStopping counter: 8 out of 10
Epoch: 19, Training Loss: 0.320901, Validation Loss: 0.372938, Training Accuracy: 0.938749, Validation Accuracy: 0.900654
EarlyStopping counter: 9 out of 10
Epoch: 20, Training Loss: 0.325582, Validation Loss: 0.370847, Training Accuracy: 0.935014, Validation Accuracy: 0.901587
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 20
Ended Training Cycle
backbone.blocks.4.2._expand_conv
[630, 29, 829, 131, 495, 690, 846, 541, 182, 393, 530, 242, 55, 794, 303, 524, 522, 366, 769, 84, 187, 895, 368, 292, 777, 648, 128, 272, 686, 790, 672, 598, 573, 563, 34, 943, 750, 6, 853, 885, 15, 99, 536, 941, 318, 459, 469, 628, 616, 97, 44, 721, 638, 601, 779, 526, 458, 467, 58, 702, 247, 222, 728, 713, 622, 652, 227, 894, 766, 206, 945, 219, 816, 810, 348, 633, 533, 157, 605, 889, 706, 578, 567, 133, 419, 193, 124, 839, 390, 53, 170, 149, 730, 631, 176, 158]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.2._expand_conv (Conv2d(129, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.2._expand_conv (Conv2d(129, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
[1] prune_out_channels on backbone.blocks.4.2._expand_conv (Conv2d(129, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.2._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[2] prune_out_channels on backbone.blocks.4.2._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_66(HardtanhBackward0), #idxs=96
[3] prune_out_channels on _ElementWiseOp_66(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=864, bias=False)), #idxs=96
[4] prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=864, bias=False)) => prune_out_channels on backbone.blocks.4.2._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[5] prune_out_channels on backbone.blocks.4.2._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_65(HardtanhBackward0), #idxs=96
[6] prune_out_channels on _ElementWiseOp_65(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.2._project_conv (Conv2d(864, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.2._expand_conv
39
tensor([ True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
        False, False,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.2._depthwise_conv
38
tensor([ True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
        False, False,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
backbone.blocks.4.2._depthwise_conv
[191, 837, 343, 523, 752, 70, 123, 541, 207, 420, 795, 229, 252, 305, 790, 34, 430, 409, 319, 205, 237, 245, 674, 117, 857, 475, 368, 496, 46, 54, 223, 308, 13, 184, 386, 557, 723, 290, 131, 797, 347, 330, 136, 298, 251, 801, 587, 501, 513, 406, 705, 109, 179, 845, 735, 646, 610, 412, 481, 655, 688, 826, 268, 457, 213, 745, 810, 642, 130, 635, 599, 673, 29, 503, 547, 381, 149, 79, 675, 126, 700, 214, 766, 551, 724, 749, 654]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)), #idxs=87
[1] prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on _ElementWiseOp_66(HardtanhBackward0), #idxs=87
[2] prune_out_channels on backbone.blocks.4.2._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.4.2._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[3] prune_out_channels on backbone.blocks.4.2._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_65(HardtanhBackward0), #idxs=87
[4] prune_out_channels on _ElementWiseOp_65(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.2._project_conv (Conv2d(777, 129, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
[5] prune_out_channels on _ElementWiseOp_66(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.2._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[6] prune_out_channels on backbone.blocks.4.2._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.2._expand_conv (Conv2d(129, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.2._depthwise_conv
38
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
        False, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True])
torch.Size([864])
torch.Size([777])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.2._expand_conv
39
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
        False, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True])
torch.Size([864])
torch.Size([777])
backbone.blocks.4.2._project_conv
[61, 87, 84, 78, 76, 74, 72, 69, 62, 90, 52, 50, 48]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.2._project_conv (Conv2d(777, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.2._project_conv (Conv2d(777, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[1] prune_out_channels on backbone.blocks.4.2._project_conv (Conv2d(777, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[2] prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_18(AddBackward0), #idxs=13
[3] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on _ElementWiseOp_19(AddBackward0), #idxs=13
[4] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on _ElementWiseOp_17(AddBackward0), #idxs=13
[5] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_in_channels on backbone.blocks.4.3._expand_conv (Conv2d(116, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[6] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[7] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on _ElementWiseOp_16(AddBackward0), #idxs=13
[8] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_in_channels on backbone.blocks.4.4._expand_conv (Conv2d(116, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[9] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[10] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on _ElementWiseOp_15(AddBackward0), #idxs=13
[11] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_in_channels on backbone.blocks.4.5._expand_conv (Conv2d(116, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[12] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[13] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_in_channels on backbone.blocks.5.0._expand_conv (Conv2d(116, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[14] prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.5._project_conv (Conv2d(960, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[15] prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.4._project_conv (Conv2d(960, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[16] prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.3._project_conv (Conv2d(960, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[17] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[18] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[19] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_in_channels on backbone.blocks.4.2._expand_conv (Conv2d(116, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[20] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.0._project_conv (Conv2d(543, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[21] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.4.1._expand_conv (Conv2d(116, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[22] prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(116, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.1._project_conv (Conv2d(777, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.2._project_conv
37
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([129])
torch.Size([116])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.5._project_conv
28
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([129])
torch.Size([116])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.4._project_conv
31
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([129])
torch.Size([116])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.3._project_conv
34
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([129])
torch.Size([116])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.0._project_conv
43
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([129])
torch.Size([116])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.1._project_conv
40
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([129])
torch.Size([116])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 116, 10, 10]          62,988          62,988
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 116, 10, 10]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          90,132          90,132
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 116, 10, 10]          90,132          90,132
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 116, 10, 10]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          90,132          90,132
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 116, 10, 10]          90,132          90,132
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 116, 10, 10]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 960, 10, 10]         111,360         111,360
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 116, 10, 10]         111,360         111,360
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 116, 10, 10]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]         111,360         111,360
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 116, 10, 10]         111,360         111,360
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 116, 10, 10]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]         111,360         111,360
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 116, 10, 10]         111,360         111,360
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 116, 10, 10]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]         111,360         111,360
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 10,499,514
Trainable params: 10,499,514
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.372289, Validation Loss: 0.467481, Training Accuracy: 0.913041, Validation Accuracy: 0.860131
Validation loss decreased (inf --> 0.467481).  Saving model ...
Epoch: 2, Training Loss: 0.361298, Validation Loss: 0.468081, Training Accuracy: 0.918643, Validation Accuracy: 0.859384
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.356561, Validation Loss: 0.426610, Training Accuracy: 0.921755, Validation Accuracy: 0.874510
Validation loss decreased (0.467481 --> 0.426610).  Saving model ...
Epoch: 4, Training Loss: 0.348632, Validation Loss: 0.404002, Training Accuracy: 0.923374, Validation Accuracy: 0.883473
Validation loss decreased (0.426610 --> 0.404002).  Saving model ...
Epoch: 5, Training Loss: 0.350827, Validation Loss: 0.457551, Training Accuracy: 0.922378, Validation Accuracy: 0.864052
EarlyStopping counter: 1 out of 10
Epoch: 6, Training Loss: 0.348137, Validation Loss: 0.393226, Training Accuracy: 0.923374, Validation Accuracy: 0.893744
Validation loss decreased (0.404002 --> 0.393226).  Saving model ...
Epoch: 7, Training Loss: 0.346064, Validation Loss: 0.413581, Training Accuracy: 0.923685, Validation Accuracy: 0.887021
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.346146, Validation Loss: 0.418611, Training Accuracy: 0.923623, Validation Accuracy: 0.878245
EarlyStopping counter: 2 out of 10
Epoch: 9, Training Loss: 0.347132, Validation Loss: 0.391515, Training Accuracy: 0.923747, Validation Accuracy: 0.893184
Validation loss decreased (0.393226 --> 0.391515).  Saving model ...
Epoch: 10, Training Loss: 0.344965, Validation Loss: 0.424249, Training Accuracy: 0.921880, Validation Accuracy: 0.881793
Epoch 00010: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 1 out of 10
Epoch: 11, Training Loss: 0.331840, Validation Loss: 0.377016, Training Accuracy: 0.933147, Validation Accuracy: 0.896172
Validation loss decreased (0.391515 --> 0.377016).  Saving model ...
Epoch: 12, Training Loss: 0.322231, Validation Loss: 0.372641, Training Accuracy: 0.936632, Validation Accuracy: 0.898973
Validation loss decreased (0.377016 --> 0.372641).  Saving model ...
Epoch: 13, Training Loss: 0.327832, Validation Loss: 0.371435, Training Accuracy: 0.934578, Validation Accuracy: 0.902334
Validation loss decreased (0.372641 --> 0.371435).  Saving model ...
Epoch: 14, Training Loss: 0.326088, Validation Loss: 0.371636, Training Accuracy: 0.937130, Validation Accuracy: 0.899533
EarlyStopping counter: 1 out of 10
Epoch: 15, Training Loss: 0.323189, Validation Loss: 0.371292, Training Accuracy: 0.938438, Validation Accuracy: 0.901587
Epoch 00015: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.371435 --> 0.371292).  Saving model ...
Epoch: 16, Training Loss: 0.317414, Validation Loss: 0.372472, Training Accuracy: 0.941425, Validation Accuracy: 0.901961
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.319606, Validation Loss: 0.370226, Training Accuracy: 0.938624, Validation Accuracy: 0.901587
Validation loss decreased (0.371292 --> 0.370226).  Saving model ...
Epoch: 18, Training Loss: 0.323288, Validation Loss: 0.372821, Training Accuracy: 0.936259, Validation Accuracy: 0.900654
EarlyStopping counter: 1 out of 10
Epoch: 19, Training Loss: 0.319930, Validation Loss: 0.372241, Training Accuracy: 0.938251, Validation Accuracy: 0.901587
Epoch 00019: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 20, Training Loss: 0.322075, Validation Loss: 0.373142, Training Accuracy: 0.937255, Validation Accuracy: 0.901214
EarlyStopping counter: 3 out of 10
Epoch: 21, Training Loss: 0.322562, Validation Loss: 0.371291, Training Accuracy: 0.940554, Validation Accuracy: 0.901214
EarlyStopping counter: 4 out of 10
Epoch: 22, Training Loss: 0.322487, Validation Loss: 0.372095, Training Accuracy: 0.937442, Validation Accuracy: 0.900654
EarlyStopping counter: 5 out of 10
Epoch: 23, Training Loss: 0.319722, Validation Loss: 0.371540, Training Accuracy: 0.936072, Validation Accuracy: 0.901401
EarlyStopping counter: 6 out of 10
Epoch: 24, Training Loss: 0.317274, Validation Loss: 0.373218, Training Accuracy: 0.940181, Validation Accuracy: 0.901401
EarlyStopping counter: 7 out of 10
Epoch: 25, Training Loss: 0.320889, Validation Loss: 0.373060, Training Accuracy: 0.938749, Validation Accuracy: 0.901774
EarlyStopping counter: 8 out of 10
Epoch: 26, Training Loss: 0.320198, Validation Loss: 0.370189, Training Accuracy: 0.937815, Validation Accuracy: 0.901774
Validation loss decreased (0.370226 --> 0.370189).  Saving model ...
Epoch: 27, Training Loss: 0.316882, Validation Loss: 0.372230, Training Accuracy: 0.939247, Validation Accuracy: 0.901587
EarlyStopping counter: 1 out of 10
Epoch: 28, Training Loss: 0.326141, Validation Loss: 0.369421, Training Accuracy: 0.937193, Validation Accuracy: 0.901774
Validation loss decreased (0.370189 --> 0.369421).  Saving model ...
Epoch: 29, Training Loss: 0.328543, Validation Loss: 0.370738, Training Accuracy: 0.933271, Validation Accuracy: 0.901587
EarlyStopping counter: 1 out of 10
Epoch: 30, Training Loss: 0.319284, Validation Loss: 0.372670, Training Accuracy: 0.940554, Validation Accuracy: 0.901401
EarlyStopping counter: 2 out of 10
Epoch: 31, Training Loss: 0.323440, Validation Loss: 0.370338, Training Accuracy: 0.935948, Validation Accuracy: 0.903081
EarlyStopping counter: 3 out of 10
Epoch: 32, Training Loss: 0.324986, Validation Loss: 0.371102, Training Accuracy: 0.938313, Validation Accuracy: 0.901401
EarlyStopping counter: 4 out of 10
Epoch: 33, Training Loss: 0.324646, Validation Loss: 0.372566, Training Accuracy: 0.939309, Validation Accuracy: 0.900654
EarlyStopping counter: 5 out of 10
Epoch: 34, Training Loss: 0.321784, Validation Loss: 0.370956, Training Accuracy: 0.936508, Validation Accuracy: 0.901961
EarlyStopping counter: 6 out of 10
Epoch: 35, Training Loss: 0.326801, Validation Loss: 0.370183, Training Accuracy: 0.937940, Validation Accuracy: 0.900654
EarlyStopping counter: 7 out of 10
Epoch: 36, Training Loss: 0.321143, Validation Loss: 0.370707, Training Accuracy: 0.938126, Validation Accuracy: 0.901774
EarlyStopping counter: 8 out of 10
Epoch: 37, Training Loss: 0.319889, Validation Loss: 0.371063, Training Accuracy: 0.936321, Validation Accuracy: 0.902148
EarlyStopping counter: 9 out of 10
Epoch: 38, Training Loss: 0.324971, Validation Loss: 0.372003, Training Accuracy: 0.938002, Validation Accuracy: 0.900280
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 38
Ended Training Cycle
backbone.blocks.4.3._expand_conv
[472, 506, 529, 213, 37, 837, 100, 696, 936, 789, 140, 779, 375, 603, 399, 651, 290, 34, 309, 188, 80, 276, 656, 536, 289, 483, 186, 342, 454, 338, 5, 474, 867, 252, 535, 234, 431, 816, 576, 912, 832, 468, 954, 416, 286, 895, 268, 236, 287, 737, 738, 567, 833, 303, 932, 26, 660, 914, 791, 228, 476, 502, 150, 51, 573, 572, 447, 598, 640, 637, 4, 25, 785, 887, 415, 117, 98, 731, 42, 802, 595, 624, 722, 95, 707, 933, 121, 952, 777, 116, 169, 172, 323, 120, 560, 369]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.3._expand_conv (Conv2d(116, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.3._expand_conv (Conv2d(116, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
[1] prune_out_channels on backbone.blocks.4.3._expand_conv (Conv2d(116, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.3._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[2] prune_out_channels on backbone.blocks.4.3._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_68(HardtanhBackward0), #idxs=96
[3] prune_out_channels on _ElementWiseOp_68(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=864, bias=False)), #idxs=96
[4] prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=864, bias=False)) => prune_out_channels on backbone.blocks.4.3._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[5] prune_out_channels on backbone.blocks.4.3._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_67(HardtanhBackward0), #idxs=96
[6] prune_out_channels on _ElementWiseOp_67(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.3._project_conv (Conv2d(864, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.3._expand_conv
36
tensor([ True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.3._depthwise_conv
35
tensor([ True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
backbone.blocks.4.3._depthwise_conv
[75, 455, 774, 363, 616, 359, 347, 731, 596, 275, 850, 828, 395, 127, 521, 489, 368, 621, 517, 55, 641, 811, 235, 120, 586, 223, 819, 53, 25, 695, 506, 324, 355, 122, 634, 143, 319, 614, 151, 27, 115, 274, 485, 671, 638, 480, 777, 500, 200, 637, 205, 795, 11, 461, 784, 152, 164, 771, 362, 548, 591, 499, 575, 320, 606, 341, 693, 352, 773, 204, 215, 862, 643, 84, 282, 345, 404, 40, 323, 765, 553, 763, 611, 283, 386, 58, 723]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)), #idxs=87
[1] prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on _ElementWiseOp_68(HardtanhBackward0), #idxs=87
[2] prune_out_channels on backbone.blocks.4.3._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.4.3._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[3] prune_out_channels on backbone.blocks.4.3._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_67(HardtanhBackward0), #idxs=87
[4] prune_out_channels on _ElementWiseOp_67(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.3._project_conv (Conv2d(777, 116, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
[5] prune_out_channels on _ElementWiseOp_68(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.3._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[6] prune_out_channels on backbone.blocks.4.3._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.3._expand_conv (Conv2d(116, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.3._depthwise_conv
35
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True, False,
         True,  True, False, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True, False,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False, False,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True, False,  True, False, False,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True])
torch.Size([864])
torch.Size([777])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.3._expand_conv
36
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True, False,
         True,  True, False, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True, False,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False, False,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True, False,  True, False, False,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True])
torch.Size([864])
torch.Size([777])
backbone.blocks.4.3._project_conv
[52, 78, 72, 71, 66, 62, 59, 56, 53, 79, 51, 48]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.3._project_conv (Conv2d(777, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.3._project_conv (Conv2d(777, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[1] prune_out_channels on backbone.blocks.4.3._project_conv (Conv2d(777, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[2] prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_17(AddBackward0), #idxs=12
[3] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on _ElementWiseOp_18(AddBackward0), #idxs=12
[4] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on _ElementWiseOp_16(AddBackward0), #idxs=12
[5] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_in_channels on backbone.blocks.4.4._expand_conv (Conv2d(104, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[6] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[7] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on _ElementWiseOp_15(AddBackward0), #idxs=12
[8] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_in_channels on backbone.blocks.4.5._expand_conv (Conv2d(104, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[9] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[10] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_in_channels on backbone.blocks.5.0._expand_conv (Conv2d(104, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[11] prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.5._project_conv (Conv2d(960, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[12] prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.4._project_conv (Conv2d(960, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[13] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[14] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on _ElementWiseOp_19(AddBackward0), #idxs=12
[15] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_in_channels on backbone.blocks.4.3._expand_conv (Conv2d(104, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[16] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[17] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=12
[18] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_in_channels on backbone.blocks.4.2._expand_conv (Conv2d(104, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[19] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.0._project_conv (Conv2d(543, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[20] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.4.1._expand_conv (Conv2d(104, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[21] prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.1._project_conv (Conv2d(777, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
[22] prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(104, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.2._project_conv (Conv2d(777, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=12
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.3._project_conv
34
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False, False, False,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([116])
torch.Size([104])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.5._project_conv
28
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False, False, False,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([116])
torch.Size([104])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.4._project_conv
31
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False, False, False,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([116])
torch.Size([104])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.0._project_conv
43
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False, False, False,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([116])
torch.Size([104])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.1._project_conv
40
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False, False, False,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([116])
torch.Size([104])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.2._project_conv
37
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False, False, False,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True])
torch.Size([116])
torch.Size([104])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112     [1, 104, 10, 10]          56,472          56,472
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          80,808          80,808
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119     [1, 104, 10, 10]          80,808          80,808
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          80,808          80,808
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126     [1, 104, 10, 10]          80,808          80,808
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          80,808          80,808
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133     [1, 104, 10, 10]          80,808          80,808
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 960, 10, 10]          99,840          99,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140     [1, 104, 10, 10]          99,840          99,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]          99,840          99,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147     [1, 104, 10, 10]          99,840          99,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148     [1, 104, 10, 10]             208             208
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]          99,840          99,840
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 10,331,547
Trainable params: 10,331,547
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.378568, Validation Loss: 0.500847, Training Accuracy: 0.911485, Validation Accuracy: 0.840896
Validation loss decreased (inf --> 0.500847).  Saving model ...
Epoch: 2, Training Loss: 0.364066, Validation Loss: 0.437126, Training Accuracy: 0.913477, Validation Accuracy: 0.870215
Validation loss decreased (0.500847 --> 0.437126).  Saving model ...
Epoch: 3, Training Loss: 0.360558, Validation Loss: 0.476661, Training Accuracy: 0.917709, Validation Accuracy: 0.855462
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.355915, Validation Loss: 0.396692, Training Accuracy: 0.920386, Validation Accuracy: 0.891503
Validation loss decreased (0.437126 --> 0.396692).  Saving model ...
Epoch: 5, Training Loss: 0.358078, Validation Loss: 0.444850, Training Accuracy: 0.919265, Validation Accuracy: 0.869094
EarlyStopping counter: 1 out of 10
Epoch: 6, Training Loss: 0.358012, Validation Loss: 0.407369, Training Accuracy: 0.921071, Validation Accuracy: 0.884967
EarlyStopping counter: 2 out of 10
Epoch: 7, Training Loss: 0.355143, Validation Loss: 0.442264, Training Accuracy: 0.922814, Validation Accuracy: 0.874323
EarlyStopping counter: 3 out of 10
Epoch: 8, Training Loss: 0.353234, Validation Loss: 0.442317, Training Accuracy: 0.924370, Validation Accuracy: 0.868161
Epoch 00008: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 9, Training Loss: 0.344438, Validation Loss: 0.375807, Training Accuracy: 0.926860, Validation Accuracy: 0.897666
Validation loss decreased (0.396692 --> 0.375807).  Saving model ...
Epoch: 10, Training Loss: 0.328481, Validation Loss: 0.379230, Training Accuracy: 0.933333, Validation Accuracy: 0.898226
EarlyStopping counter: 1 out of 10
Epoch: 11, Training Loss: 0.336533, Validation Loss: 0.378651, Training Accuracy: 0.932462, Validation Accuracy: 0.900093
EarlyStopping counter: 2 out of 10
Epoch: 12, Training Loss: 0.333794, Validation Loss: 0.376586, Training Accuracy: 0.933022, Validation Accuracy: 0.897479
EarlyStopping counter: 3 out of 10
Epoch: 13, Training Loss: 0.331071, Validation Loss: 0.377253, Training Accuracy: 0.934516, Validation Accuracy: 0.893744
Epoch 00013: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 4 out of 10
Epoch: 14, Training Loss: 0.333019, Validation Loss: 0.373988, Training Accuracy: 0.934454, Validation Accuracy: 0.899907
Validation loss decreased (0.375807 --> 0.373988).  Saving model ...
Epoch: 15, Training Loss: 0.328715, Validation Loss: 0.373567, Training Accuracy: 0.935823, Validation Accuracy: 0.900467
Validation loss decreased (0.373988 --> 0.373567).  Saving model ...
Epoch: 16, Training Loss: 0.329532, Validation Loss: 0.374704, Training Accuracy: 0.935138, Validation Accuracy: 0.900280
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.333020, Validation Loss: 0.374652, Training Accuracy: 0.932151, Validation Accuracy: 0.901027
Epoch 00017: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 18, Training Loss: 0.328444, Validation Loss: 0.372962, Training Accuracy: 0.937317, Validation Accuracy: 0.901027
Validation loss decreased (0.373567 --> 0.372962).  Saving model ...
Epoch: 19, Training Loss: 0.322075, Validation Loss: 0.374939, Training Accuracy: 0.938562, Validation Accuracy: 0.901961
EarlyStopping counter: 1 out of 10
Epoch: 20, Training Loss: 0.321899, Validation Loss: 0.374417, Training Accuracy: 0.938438, Validation Accuracy: 0.900840
EarlyStopping counter: 2 out of 10
Epoch: 21, Training Loss: 0.324801, Validation Loss: 0.375444, Training Accuracy: 0.934765, Validation Accuracy: 0.900280
EarlyStopping counter: 3 out of 10
Epoch: 22, Training Loss: 0.326167, Validation Loss: 0.372639, Training Accuracy: 0.937130, Validation Accuracy: 0.901214
Validation loss decreased (0.372962 --> 0.372639).  Saving model ...
Epoch: 23, Training Loss: 0.327571, Validation Loss: 0.375263, Training Accuracy: 0.935885, Validation Accuracy: 0.899720
EarlyStopping counter: 1 out of 10
Epoch: 24, Training Loss: 0.330110, Validation Loss: 0.373333, Training Accuracy: 0.934827, Validation Accuracy: 0.900093
EarlyStopping counter: 2 out of 10
Epoch: 25, Training Loss: 0.329513, Validation Loss: 0.375227, Training Accuracy: 0.936570, Validation Accuracy: 0.901027
EarlyStopping counter: 3 out of 10
Epoch: 26, Training Loss: 0.325695, Validation Loss: 0.374818, Training Accuracy: 0.936944, Validation Accuracy: 0.898973
EarlyStopping counter: 4 out of 10
Epoch: 27, Training Loss: 0.326798, Validation Loss: 0.373000, Training Accuracy: 0.938624, Validation Accuracy: 0.899907
EarlyStopping counter: 5 out of 10
Epoch: 28, Training Loss: 0.326270, Validation Loss: 0.372767, Training Accuracy: 0.936010, Validation Accuracy: 0.901027
EarlyStopping counter: 6 out of 10
Epoch: 29, Training Loss: 0.328743, Validation Loss: 0.373290, Training Accuracy: 0.936010, Validation Accuracy: 0.900467
EarlyStopping counter: 7 out of 10
Epoch: 30, Training Loss: 0.328557, Validation Loss: 0.371938, Training Accuracy: 0.935636, Validation Accuracy: 0.901961
Validation loss decreased (0.372639 --> 0.371938).  Saving model ...
Epoch: 31, Training Loss: 0.326489, Validation Loss: 0.373641, Training Accuracy: 0.936819, Validation Accuracy: 0.901027
EarlyStopping counter: 1 out of 10
Epoch: 32, Training Loss: 0.329674, Validation Loss: 0.374253, Training Accuracy: 0.932400, Validation Accuracy: 0.901027
EarlyStopping counter: 2 out of 10
Epoch: 33, Training Loss: 0.332011, Validation Loss: 0.372276, Training Accuracy: 0.935138, Validation Accuracy: 0.899907
EarlyStopping counter: 3 out of 10
Epoch: 34, Training Loss: 0.323138, Validation Loss: 0.374052, Training Accuracy: 0.936446, Validation Accuracy: 0.901027
EarlyStopping counter: 4 out of 10
Epoch: 35, Training Loss: 0.326705, Validation Loss: 0.376550, Training Accuracy: 0.935014, Validation Accuracy: 0.900654
EarlyStopping counter: 5 out of 10
Epoch: 36, Training Loss: 0.324136, Validation Loss: 0.374836, Training Accuracy: 0.938811, Validation Accuracy: 0.900093
EarlyStopping counter: 6 out of 10
Epoch: 37, Training Loss: 0.323541, Validation Loss: 0.373099, Training Accuracy: 0.938438, Validation Accuracy: 0.901774
EarlyStopping counter: 7 out of 10
Epoch: 38, Training Loss: 0.329151, Validation Loss: 0.374231, Training Accuracy: 0.936881, Validation Accuracy: 0.900840
EarlyStopping counter: 8 out of 10
Epoch: 39, Training Loss: 0.332239, Validation Loss: 0.373976, Training Accuracy: 0.935076, Validation Accuracy: 0.899533
EarlyStopping counter: 9 out of 10
Epoch: 40, Training Loss: 0.321508, Validation Loss: 0.374405, Training Accuracy: 0.938189, Validation Accuracy: 0.900280
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 40
Ended Training Cycle
backbone.blocks.4.4._expand_conv
[185, 45, 314, 733, 471, 580, 355, 178, 60, 593, 341, 583, 186, 149, 409, 28, 193, 707, 855, 694, 344, 696, 778, 894, 606, 142, 539, 71, 427, 276, 201, 528, 309, 278, 37, 521, 266, 38, 99, 377, 912, 699, 407, 745, 400, 626, 556, 297, 328, 523, 34, 40, 477, 834, 814, 798, 484, 682, 841, 695, 82, 522, 852, 896, 872, 222, 701, 915, 239, 868, 436, 96, 914, 26, 231, 772, 333, 490, 617, 413, 110, 620, 712, 269, 396, 761, 449, 394, 273, 415, 10, 740, 166, 592, 731, 924]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.4._expand_conv (Conv2d(104, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.4._expand_conv (Conv2d(104, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
[1] prune_out_channels on backbone.blocks.4.4._expand_conv (Conv2d(104, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.4._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[2] prune_out_channels on backbone.blocks.4.4._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_70(HardtanhBackward0), #idxs=96
[3] prune_out_channels on _ElementWiseOp_70(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=864, bias=False)), #idxs=96
[4] prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=864, bias=False)) => prune_out_channels on backbone.blocks.4.4._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[5] prune_out_channels on backbone.blocks.4.4._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_69(HardtanhBackward0), #idxs=96
[6] prune_out_channels on _ElementWiseOp_69(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.4._project_conv (Conv2d(864, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.4._expand_conv
33
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True, False, False,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False, False,  True,  True, False,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.4._depthwise_conv
32
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True, False, False,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False, False,  True,  True, False,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
backbone.blocks.4.4._depthwise_conv
[431, 282, 661, 606, 777, 825, 647, 553, 243, 16, 10, 204, 329, 695, 786, 160, 120, 637, 77, 737, 423, 188, 409, 627, 415, 788, 214, 429, 270, 670, 58, 483, 378, 235, 295, 829, 516, 645, 257, 850, 263, 542, 276, 27, 208, 519, 255, 523, 122, 502, 639, 833, 319, 574, 566, 316, 489, 344, 262, 710, 310, 802, 684, 18, 475, 351, 756, 573, 396, 422, 859, 793, 807, 373, 279, 478, 250, 589, 306, 784, 87, 133, 745, 614, 526, 88, 104]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)), #idxs=87
[1] prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on _ElementWiseOp_70(HardtanhBackward0), #idxs=87
[2] prune_out_channels on backbone.blocks.4.4._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.4.4._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[3] prune_out_channels on backbone.blocks.4.4._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_69(HardtanhBackward0), #idxs=87
[4] prune_out_channels on _ElementWiseOp_69(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.4._project_conv (Conv2d(777, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
[5] prune_out_channels on _ElementWiseOp_70(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.4._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[6] prune_out_channels on backbone.blocks.4.4._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.4._expand_conv (Conv2d(104, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.4._depthwise_conv
32
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True, False,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True])
torch.Size([864])
torch.Size([777])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.4._expand_conv
33
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True, False,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True])
torch.Size([864])
torch.Size([777])
backbone.blocks.4.4._project_conv
[74, 30, 31, 32, 33, 36, 37, 38, 40, 53, 62]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.4._project_conv (Conv2d(777, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.4._project_conv (Conv2d(777, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
[1] prune_out_channels on backbone.blocks.4.4._project_conv (Conv2d(777, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=11
[2] prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_16(AddBackward0), #idxs=11
[3] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on _ElementWiseOp_17(AddBackward0), #idxs=11
[4] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on _ElementWiseOp_15(AddBackward0), #idxs=11
[5] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_in_channels on backbone.blocks.4.5._expand_conv (Conv2d(93, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
[6] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=11
[7] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_in_channels on backbone.blocks.5.0._expand_conv (Conv2d(93, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
[8] prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.5._project_conv (Conv2d(960, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
[9] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=11
[10] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on _ElementWiseOp_18(AddBackward0), #idxs=11
[11] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_in_channels on backbone.blocks.4.4._expand_conv (Conv2d(93, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
[12] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=11
[13] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on _ElementWiseOp_19(AddBackward0), #idxs=11
[14] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_in_channels on backbone.blocks.4.3._expand_conv (Conv2d(93, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
[15] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=11
[16] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=11
[17] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_in_channels on backbone.blocks.4.2._expand_conv (Conv2d(93, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
[18] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.0._project_conv (Conv2d(543, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
[19] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.4.1._expand_conv (Conv2d(93, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
[20] prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.1._project_conv (Conv2d(777, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
[21] prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.2._project_conv (Conv2d(777, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
[22] prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(93, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.3._project_conv (Conv2d(777, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=11
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.4._project_conv
31
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False, False, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([104])
torch.Size([93])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.5._project_conv
28
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False, False, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([104])
torch.Size([93])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.0._project_conv
43
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False, False, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([104])
torch.Size([93])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.1._project_conv
40
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False, False, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([104])
torch.Size([93])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.2._project_conv
37
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False, False, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([104])
torch.Size([93])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.3._project_conv
34
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False,  True,  True, False, False, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([104])
torch.Size([93])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 93, 10, 10]          50,499          50,499
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 93, 10, 10]             186             186
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          72,261          72,261
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 93, 10, 10]          72,261          72,261
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 93, 10, 10]             186             186
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          72,261          72,261
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 93, 10, 10]          72,261          72,261
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 93, 10, 10]             186             186
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          72,261          72,261
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 93, 10, 10]          72,261          72,261
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 93, 10, 10]             186             186
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          72,261          72,261
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 93, 10, 10]          72,261          72,261
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 93, 10, 10]             186             186
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 960, 10, 10]          89,280          89,280
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 960, 10, 10]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 93, 10, 10]          89,280          89,280
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 93, 10, 10]             186             186
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]          89,280          89,280
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 10,182,015
Trainable params: 10,182,015
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.376590, Validation Loss: 0.425168, Training Accuracy: 0.911485, Validation Accuracy: 0.874323
Validation loss decreased (inf --> 0.425168).  Saving model ...
Epoch: 2, Training Loss: 0.370788, Validation Loss: 0.453648, Training Accuracy: 0.914348, Validation Accuracy: 0.862185
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.363149, Validation Loss: 0.399342, Training Accuracy: 0.919141, Validation Accuracy: 0.887395
Validation loss decreased (0.425168 --> 0.399342).  Saving model ...
Epoch: 4, Training Loss: 0.363932, Validation Loss: 0.433749, Training Accuracy: 0.919203, Validation Accuracy: 0.878058
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.365416, Validation Loss: 0.457925, Training Accuracy: 0.918456, Validation Accuracy: 0.870028
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.364781, Validation Loss: 0.433076, Training Accuracy: 0.918394, Validation Accuracy: 0.878992
EarlyStopping counter: 3 out of 10
Epoch: 7, Training Loss: 0.357307, Validation Loss: 0.535420, Training Accuracy: 0.920635, Validation Accuracy: 0.831933
Epoch 00007: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 8, Training Loss: 0.344327, Validation Loss: 0.384167, Training Accuracy: 0.929287, Validation Accuracy: 0.898039
Validation loss decreased (0.399342 --> 0.384167).  Saving model ...
Epoch: 9, Training Loss: 0.330379, Validation Loss: 0.379953, Training Accuracy: 0.934018, Validation Accuracy: 0.897479
Validation loss decreased (0.384167 --> 0.379953).  Saving model ...
Epoch: 10, Training Loss: 0.333926, Validation Loss: 0.383776, Training Accuracy: 0.933084, Validation Accuracy: 0.895425
EarlyStopping counter: 1 out of 10
Epoch: 11, Training Loss: 0.338854, Validation Loss: 0.378892, Training Accuracy: 0.933209, Validation Accuracy: 0.896732
Validation loss decreased (0.379953 --> 0.378892).  Saving model ...
Epoch: 12, Training Loss: 0.327019, Validation Loss: 0.379960, Training Accuracy: 0.935201, Validation Accuracy: 0.898973
Epoch 00012: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.331111, Validation Loss: 0.377164, Training Accuracy: 0.933582, Validation Accuracy: 0.898413
Validation loss decreased (0.378892 --> 0.377164).  Saving model ...
Epoch: 14, Training Loss: 0.337324, Validation Loss: 0.376620, Training Accuracy: 0.933271, Validation Accuracy: 0.897292
Validation loss decreased (0.377164 --> 0.376620).  Saving model ...
Epoch: 15, Training Loss: 0.337398, Validation Loss: 0.376398, Training Accuracy: 0.933333, Validation Accuracy: 0.898413
Validation loss decreased (0.376620 --> 0.376398).  Saving model ...
Epoch: 16, Training Loss: 0.333108, Validation Loss: 0.374606, Training Accuracy: 0.934827, Validation Accuracy: 0.898786
Epoch 00016: reducing learning rate of group 0 to 1.0000e-08.
Validation loss decreased (0.376398 --> 0.374606).  Saving model ...
Epoch: 17, Training Loss: 0.329180, Validation Loss: 0.378046, Training Accuracy: 0.936134, Validation Accuracy: 0.896732
EarlyStopping counter: 1 out of 10
Epoch: 18, Training Loss: 0.329034, Validation Loss: 0.378458, Training Accuracy: 0.937504, Validation Accuracy: 0.896919
EarlyStopping counter: 2 out of 10
Epoch: 19, Training Loss: 0.330614, Validation Loss: 0.376292, Training Accuracy: 0.937255, Validation Accuracy: 0.897479
EarlyStopping counter: 3 out of 10
Epoch: 20, Training Loss: 0.334499, Validation Loss: 0.374821, Training Accuracy: 0.935263, Validation Accuracy: 0.897479
EarlyStopping counter: 4 out of 10
Epoch: 21, Training Loss: 0.328867, Validation Loss: 0.375724, Training Accuracy: 0.934018, Validation Accuracy: 0.897292
EarlyStopping counter: 5 out of 10
Epoch: 22, Training Loss: 0.332348, Validation Loss: 0.376709, Training Accuracy: 0.934890, Validation Accuracy: 0.897479
EarlyStopping counter: 6 out of 10
Epoch: 23, Training Loss: 0.332886, Validation Loss: 0.375599, Training Accuracy: 0.935387, Validation Accuracy: 0.898786
EarlyStopping counter: 7 out of 10
Epoch: 24, Training Loss: 0.332605, Validation Loss: 0.375668, Training Accuracy: 0.933956, Validation Accuracy: 0.896545
EarlyStopping counter: 8 out of 10
Epoch: 25, Training Loss: 0.332959, Validation Loss: 0.376210, Training Accuracy: 0.933645, Validation Accuracy: 0.896359
EarlyStopping counter: 9 out of 10
Epoch: 26, Training Loss: 0.335114, Validation Loss: 0.376513, Training Accuracy: 0.932026, Validation Accuracy: 0.896359
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 26
Ended Training Cycle
backbone.blocks.4.5._expand_conv
[253, 852, 8, 95, 132, 229, 621, 290, 74, 30, 931, 297, 637, 727, 247, 358, 3, 692, 184, 822, 539, 192, 718, 487, 365, 641, 108, 782, 170, 424, 142, 617, 200, 289, 606, 259, 895, 491, 444, 526, 455, 697, 481, 647, 323, 476, 39, 392, 516, 91, 879, 839, 564, 706, 901, 769, 248, 779, 194, 525, 16, 867, 794, 417, 432, 949, 899, 50, 918, 409, 12, 449, 299, 265, 859, 20, 379, 862, 317, 665, 14, 314, 468, 34, 270, 547, 512, 375, 653, 638, 357, 321, 791, 123, 893, 535]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.5._expand_conv (Conv2d(93, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.5._expand_conv (Conv2d(93, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
[1] prune_out_channels on backbone.blocks.4.5._expand_conv (Conv2d(93, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.5._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[2] prune_out_channels on backbone.blocks.4.5._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_72(HardtanhBackward0), #idxs=96
[3] prune_out_channels on _ElementWiseOp_72(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=864, bias=False)), #idxs=96
[4] prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=864, bias=False)) => prune_out_channels on backbone.blocks.4.5._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[5] prune_out_channels on backbone.blocks.4.5._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_71(HardtanhBackward0), #idxs=96
[6] prune_out_channels on _ElementWiseOp_71(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.5._project_conv (Conv2d(864, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.5._expand_conv
30
tensor([ True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.5._depthwise_conv
29
tensor([ True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True, False,  True, False,  True, False,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True, False,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True, False,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
backbone.blocks.4.5._depthwise_conv
[74, 384, 592, 625, 815, 333, 505, 656, 715, 719, 733, 663, 212, 436, 578, 516, 857, 454, 460, 264, 149, 55, 839, 624, 816, 409, 767, 574, 462, 416, 275, 701, 0, 104, 234, 86, 660, 776, 306, 568, 218, 316, 602, 640, 209, 609, 567, 271, 96, 579, 511, 62, 428, 98, 479, 589, 159, 478, 795, 233, 841, 185, 291, 549, 681, 297, 173, 40, 458, 39, 614, 649, 61, 289, 738, 145, 616, 305, 577, 629, 392, 417, 450, 429, 752, 140, 60]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)), #idxs=87
[1] prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on _ElementWiseOp_72(HardtanhBackward0), #idxs=87
[2] prune_out_channels on backbone.blocks.4.5._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.4.5._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[3] prune_out_channels on backbone.blocks.4.5._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_71(HardtanhBackward0), #idxs=87
[4] prune_out_channels on _ElementWiseOp_71(HardtanhBackward0) => prune_in_channels on backbone.blocks.4.5._project_conv (Conv2d(777, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
[5] prune_out_channels on _ElementWiseOp_72(HardtanhBackward0) => prune_out_channels on backbone.blocks.4.5._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[6] prune_out_channels on backbone.blocks.4.5._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.5._expand_conv (Conv2d(93, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.4.5._depthwise_conv
29
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True, False,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True, False, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True])
torch.Size([864])
torch.Size([777])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.5._expand_conv
30
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True, False,  True,
        False,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True, False,  True,  True, False, False, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True])
torch.Size([864])
torch.Size([777])
backbone.blocks.4.5._project_conv
[63, 23, 24, 26, 28, 29, 35, 40, 56, 59]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.4.5._project_conv (Conv2d(777, 83, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.5._project_conv (Conv2d(777, 83, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[1] prune_out_channels on backbone.blocks.4.5._project_conv (Conv2d(777, 83, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[2] prune_out_channels on backbone.blocks.4.5._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_15(AddBackward0), #idxs=10
[3] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_out_channels on _ElementWiseOp_16(AddBackward0), #idxs=10
[4] prune_out_channels on _ElementWiseOp_15(AddBackward0) => prune_in_channels on backbone.blocks.5.0._expand_conv (Conv2d(83, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[5] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[6] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_out_channels on _ElementWiseOp_17(AddBackward0), #idxs=10
[7] prune_out_channels on _ElementWiseOp_16(AddBackward0) => prune_in_channels on backbone.blocks.4.5._expand_conv (Conv2d(83, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[8] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[9] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_out_channels on _ElementWiseOp_18(AddBackward0), #idxs=10
[10] prune_out_channels on _ElementWiseOp_17(AddBackward0) => prune_in_channels on backbone.blocks.4.4._expand_conv (Conv2d(83, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[11] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[12] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_out_channels on _ElementWiseOp_19(AddBackward0), #idxs=10
[13] prune_out_channels on _ElementWiseOp_18(AddBackward0) => prune_in_channels on backbone.blocks.4.3._expand_conv (Conv2d(83, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[14] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[15] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=10
[16] prune_out_channels on _ElementWiseOp_19(AddBackward0) => prune_in_channels on backbone.blocks.4.2._expand_conv (Conv2d(83, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[17] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.0._project_conv (Conv2d(543, 83, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[18] prune_out_channels on backbone.blocks.4.0._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.4.1._expand_conv (Conv2d(83, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[19] prune_out_channels on backbone.blocks.4.1._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.1._project_conv (Conv2d(777, 83, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[20] prune_out_channels on backbone.blocks.4.2._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.2._project_conv (Conv2d(777, 83, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[21] prune_out_channels on backbone.blocks.4.3._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.3._project_conv (Conv2d(777, 83, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
[22] prune_out_channels on backbone.blocks.4.4._bn2 (BatchNorm2d(83, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.4.4._project_conv (Conv2d(777, 83, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=10
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.5._project_conv
28
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([93])
torch.Size([83])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.0._project_conv
43
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([93])
torch.Size([83])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.1._project_conv
40
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([93])
torch.Size([83])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.2._project_conv
37
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([93])
torch.Size([83])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.3._project_conv
34
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([93])
torch.Size([83])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.4.4._project_conv
31
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([93])
torch.Size([83])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 83, 10, 10]          45,069          45,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 960, 10, 10]          79,680          79,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 960, 10, 10]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 960, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 960, 5, 5]          24,000          24,000
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 960, 5, 5]           1,920           1,920
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 272, 5, 5]         261,120         261,120
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 272, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 272, 5, 5]             544             544
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         443,904         443,904
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 10,049,820
Trainable params: 10,049,820
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.373199, Validation Loss: 0.427410, Training Accuracy: 0.916278, Validation Accuracy: 0.884034
Validation loss decreased (inf --> 0.427410).  Saving model ...
Epoch: 2, Training Loss: 0.364820, Validation Loss: 0.426841, Training Accuracy: 0.916962, Validation Accuracy: 0.878431
Validation loss decreased (0.427410 --> 0.426841).  Saving model ...
Epoch: 3, Training Loss: 0.359986, Validation Loss: 0.438464, Training Accuracy: 0.919514, Validation Accuracy: 0.871335
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.355726, Validation Loss: 0.442384, Training Accuracy: 0.923187, Validation Accuracy: 0.875817
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.356290, Validation Loss: 0.644875, Training Accuracy: 0.922689, Validation Accuracy: 0.794211
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 3 out of 10
Epoch: 6, Training Loss: 0.342190, Validation Loss: 0.383846, Training Accuracy: 0.930843, Validation Accuracy: 0.898599
Validation loss decreased (0.426841 --> 0.383846).  Saving model ...
Epoch: 7, Training Loss: 0.343767, Validation Loss: 0.382754, Training Accuracy: 0.931279, Validation Accuracy: 0.896545
Validation loss decreased (0.383846 --> 0.382754).  Saving model ...
Epoch: 8, Training Loss: 0.336847, Validation Loss: 0.382923, Training Accuracy: 0.931839, Validation Accuracy: 0.896359
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.336264, Validation Loss: 0.390442, Training Accuracy: 0.935636, Validation Accuracy: 0.895425
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.335306, Validation Loss: 0.383036, Training Accuracy: 0.933645, Validation Accuracy: 0.897479
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 3 out of 10
Epoch: 11, Training Loss: 0.335436, Validation Loss: 0.381602, Training Accuracy: 0.931715, Validation Accuracy: 0.897852
Validation loss decreased (0.382754 --> 0.381602).  Saving model ...
Epoch: 12, Training Loss: 0.333880, Validation Loss: 0.380161, Training Accuracy: 0.933333, Validation Accuracy: 0.896359
Validation loss decreased (0.381602 --> 0.380161).  Saving model ...
Epoch: 13, Training Loss: 0.328749, Validation Loss: 0.381645, Training Accuracy: 0.937068, Validation Accuracy: 0.898226
EarlyStopping counter: 1 out of 10
Epoch: 14, Training Loss: 0.335358, Validation Loss: 0.380272, Training Accuracy: 0.933645, Validation Accuracy: 0.897479
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 15, Training Loss: 0.331846, Validation Loss: 0.380748, Training Accuracy: 0.936446, Validation Accuracy: 0.898039
EarlyStopping counter: 3 out of 10
Epoch: 16, Training Loss: 0.332722, Validation Loss: 0.380305, Training Accuracy: 0.934392, Validation Accuracy: 0.898039
EarlyStopping counter: 4 out of 10
Epoch: 17, Training Loss: 0.331024, Validation Loss: 0.380112, Training Accuracy: 0.936632, Validation Accuracy: 0.896545
Validation loss decreased (0.380161 --> 0.380112).  Saving model ...
Epoch: 18, Training Loss: 0.334722, Validation Loss: 0.378983, Training Accuracy: 0.933894, Validation Accuracy: 0.897479
Validation loss decreased (0.380112 --> 0.378983).  Saving model ...
Epoch: 19, Training Loss: 0.336781, Validation Loss: 0.378515, Training Accuracy: 0.934205, Validation Accuracy: 0.896545
Validation loss decreased (0.378983 --> 0.378515).  Saving model ...
Epoch: 20, Training Loss: 0.333608, Validation Loss: 0.380222, Training Accuracy: 0.933084, Validation Accuracy: 0.898786
EarlyStopping counter: 1 out of 10
Epoch: 21, Training Loss: 0.335606, Validation Loss: 0.379852, Training Accuracy: 0.934018, Validation Accuracy: 0.897852
EarlyStopping counter: 2 out of 10
Epoch: 22, Training Loss: 0.334472, Validation Loss: 0.378752, Training Accuracy: 0.937566, Validation Accuracy: 0.898226
EarlyStopping counter: 3 out of 10
Epoch: 23, Training Loss: 0.331746, Validation Loss: 0.379281, Training Accuracy: 0.934827, Validation Accuracy: 0.897479
EarlyStopping counter: 4 out of 10
Epoch: 24, Training Loss: 0.334914, Validation Loss: 0.378828, Training Accuracy: 0.934392, Validation Accuracy: 0.897852
EarlyStopping counter: 5 out of 10
Epoch: 25, Training Loss: 0.334542, Validation Loss: 0.379898, Training Accuracy: 0.934765, Validation Accuracy: 0.898039
EarlyStopping counter: 6 out of 10
Epoch: 26, Training Loss: 0.337488, Validation Loss: 0.377909, Training Accuracy: 0.934454, Validation Accuracy: 0.897479
Validation loss decreased (0.378515 --> 0.377909).  Saving model ...
Epoch: 27, Training Loss: 0.335651, Validation Loss: 0.380663, Training Accuracy: 0.934952, Validation Accuracy: 0.897292
EarlyStopping counter: 1 out of 10
Epoch: 28, Training Loss: 0.331235, Validation Loss: 0.381940, Training Accuracy: 0.936881, Validation Accuracy: 0.897292
EarlyStopping counter: 2 out of 10
Epoch: 29, Training Loss: 0.333630, Validation Loss: 0.378558, Training Accuracy: 0.933645, Validation Accuracy: 0.897852
EarlyStopping counter: 3 out of 10
Epoch: 30, Training Loss: 0.334619, Validation Loss: 0.379641, Training Accuracy: 0.930968, Validation Accuracy: 0.897292
EarlyStopping counter: 4 out of 10
Epoch: 31, Training Loss: 0.333673, Validation Loss: 0.378279, Training Accuracy: 0.935014, Validation Accuracy: 0.897666
EarlyStopping counter: 5 out of 10
Epoch: 32, Training Loss: 0.332323, Validation Loss: 0.379524, Training Accuracy: 0.935885, Validation Accuracy: 0.897666
EarlyStopping counter: 6 out of 10
Epoch: 33, Training Loss: 0.338407, Validation Loss: 0.380308, Training Accuracy: 0.932773, Validation Accuracy: 0.897106
EarlyStopping counter: 7 out of 10
Epoch: 34, Training Loss: 0.332097, Validation Loss: 0.380395, Training Accuracy: 0.934454, Validation Accuracy: 0.896732
EarlyStopping counter: 8 out of 10
Epoch: 35, Training Loss: 0.330852, Validation Loss: 0.381349, Training Accuracy: 0.935885, Validation Accuracy: 0.896919
EarlyStopping counter: 9 out of 10
Epoch: 36, Training Loss: 0.333474, Validation Loss: 0.380953, Training Accuracy: 0.934703, Validation Accuracy: 0.897479
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 36
Ended Training Cycle
backbone.blocks.5.0._expand_conv
[899, 204, 520, 834, 441, 230, 322, 378, 411, 303, 10, 818, 64, 348, 377, 135, 232, 268, 585, 846, 67, 241, 580, 630, 101, 229, 467, 600, 160, 863, 360, 279, 86, 139, 939, 406, 701, 836, 949, 37, 577, 374, 667, 570, 412, 219, 774, 491, 54, 7, 912, 944, 49, 502, 189, 697, 57, 831, 344, 551, 586, 272, 929, 228, 604, 223, 21, 287, 556, 222, 618, 417, 150, 947, 271, 675, 280, 835, 358, 307, 319, 198, 538, 945, 51, 128, 324, 719, 238, 691, 652, 643, 479, 858, 606, 370]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.0._expand_conv (Conv2d(83, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.0._expand_conv (Conv2d(83, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
[1] prune_out_channels on backbone.blocks.5.0._expand_conv (Conv2d(83, 864, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.0._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[2] prune_out_channels on backbone.blocks.5.0._bn0 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_14(HardtanhBackward0), #idxs=96
[3] prune_out_channels on _ElementWiseOp_14(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=864, bias=False)), #idxs=96
[4] prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(864, 864, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=864, bias=False)) => prune_out_channels on backbone.blocks.5.0._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=96
[5] prune_out_channels on backbone.blocks.5.0._bn1 (BatchNorm2d(864, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_13(HardtanhBackward0), #idxs=96
[6] prune_out_channels on _ElementWiseOp_13(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.0._project_conv (Conv2d(864, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=96
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.0._expand_conv
27
tensor([ True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False,  True,  True,  True,  True, False, False,
        False,  True, False,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False, False,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.0._depthwise_conv
26
tensor([ True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True, False,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False,  True,  True,  True,  True, False, False,
        False,  True, False,  True,  True,  True,  True,  True, False,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True, False, False,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True, False,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False, False,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True, False, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False, False,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([960])
torch.Size([864])
backbone.blocks.5.0._depthwise_conv
[12, 295, 141, 294, 488, 344, 460, 336, 845, 796, 627, 349, 534, 581, 70, 634, 408, 82, 260, 496, 217, 267, 573, 131, 246, 769, 671, 26, 218, 827, 538, 428, 61, 844, 48, 744, 297, 50, 547, 245, 40, 571, 854, 684, 626, 810, 368, 410, 353, 596, 98, 314, 577, 247, 76, 661, 715, 148, 145, 795, 367, 391, 251, 495, 825, 592, 327, 288, 348, 472, 38, 526, 421, 100, 370, 860, 36, 19, 216, 396, 103, 636, 707, 277, 819, 753, 343]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=777, bias=False)), #idxs=87
[1] prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on _ElementWiseOp_14(HardtanhBackward0), #idxs=87
[2] prune_out_channels on backbone.blocks.5.0._depthwise_conv (Conv2d(777, 777, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=777, bias=False)) => prune_out_channels on backbone.blocks.5.0._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[3] prune_out_channels on backbone.blocks.5.0._bn1 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_13(HardtanhBackward0), #idxs=87
[4] prune_out_channels on _ElementWiseOp_13(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.0._project_conv (Conv2d(777, 272, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
[5] prune_out_channels on _ElementWiseOp_14(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.0._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=87
[6] prune_out_channels on backbone.blocks.5.0._bn0 (BatchNorm2d(777, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.0._expand_conv (Conv2d(83, 777, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=87
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.0._depthwise_conv
26
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True, False, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True])
torch.Size([864])
torch.Size([777])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.0._expand_conv
27
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False, False,  True,  True,  True, False, False,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True, False,  True,  True,  True, False,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True])
torch.Size([864])
torch.Size([777])
backbone.blocks.5.0._project_conv
[178, 214, 133, 216, 223, 82, 81, 182, 138, 228, 229, 230, 181, 74, 140, 90, 71, 177, 69, 143, 67, 234, 65, 63, 176, 60, 59, 58]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(777, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(777, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[1] prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(777, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=28
[2] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_12(AddBackward0), #idxs=28
[3] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.5.1._expand_conv (Conv2d(244, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[4] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=28
[5] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on _ElementWiseOp_11(AddBackward0), #idxs=28
[6] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_in_channels on backbone.blocks.5.2._expand_conv (Conv2d(244, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[7] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=28
[8] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on _ElementWiseOp_10(AddBackward0), #idxs=28
[9] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_in_channels on backbone.blocks.5.3._expand_conv (Conv2d(244, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[10] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=28
[11] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on _ElementWiseOp_9(AddBackward0), #idxs=28
[12] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_in_channels on backbone.blocks.5.4._expand_conv (Conv2d(244, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[13] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=28
[14] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on _ElementWiseOp_8(AddBackward0), #idxs=28
[15] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_in_channels on backbone.blocks.5.5._expand_conv (Conv2d(244, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[16] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=28
[17] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on _ElementWiseOp_7(AddBackward0), #idxs=28
[18] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_in_channels on backbone.blocks.5.6._expand_conv (Conv2d(244, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[19] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=28
[20] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on _ElementWiseOp_6(AddBackward0), #idxs=28
[21] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_in_channels on backbone.blocks.5.7._expand_conv (Conv2d(244, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[22] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=28
[23] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_in_channels on backbone.blocks.6.0._expand_conv (Conv2d(244, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[24] prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(1632, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[25] prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(1632, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[26] prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(1632, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[27] prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(1632, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[28] prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(1632, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[29] prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(1632, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
[30] prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(244, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(1632, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=28
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.0._project_conv
25
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True, False,  True, False,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False, False,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([272])
torch.Size([244])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.7._project_conv
4
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True, False,  True, False,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False, False,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([272])
torch.Size([244])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.6._project_conv
7
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True, False,  True, False,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False, False,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([272])
torch.Size([244])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.5._project_conv
10
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True, False,  True, False,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False, False,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([272])
torch.Size([244])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.4._project_conv
13
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True, False,  True, False,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False, False,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([272])
torch.Size([244])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.3._project_conv
16
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True, False,  True, False,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False, False,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([272])
torch.Size([244])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.2._project_conv
19
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True, False,  True, False,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False, False,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([272])
torch.Size([244])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.1._project_conv
22
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False,  True,  True, False,  True, False,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False,  True,
        False,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False, False,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True, False, False,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True])
torch.Size([272])
torch.Size([244])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 83, 10, 10]          45,069          45,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 777, 5, 5]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 777, 5, 5]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 244, 5, 5]         189,588         189,588
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 244, 5, 5]             488             488
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1632, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 244, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 244, 5, 5]             488             488
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 244, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 244, 5, 5]             488             488
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 244, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 244, 5, 5]             488             488
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 244, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 244, 5, 5]             488             488
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 244, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 244, 5, 5]             488             488
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 244, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 244, 5, 5]             488             488
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 244, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 244, 5, 5]             488             488
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         398,208         398,208
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 9,271,904
Trainable params: 9,271,904
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.394047, Validation Loss: 0.449731, Training Accuracy: 0.914223, Validation Accuracy: 0.871148
Validation loss decreased (inf --> 0.449731).  Saving model ...
Epoch: 2, Training Loss: 0.384095, Validation Loss: 0.598710, Training Accuracy: 0.914037, Validation Accuracy: 0.804855
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.377015, Validation Loss: 0.507045, Training Accuracy: 0.916215, Validation Accuracy: 0.840336
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.368804, Validation Loss: 0.475676, Training Accuracy: 0.920261, Validation Accuracy: 0.861998
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.367001, Validation Loss: 0.397853, Training Accuracy: 0.918145, Validation Accuracy: 0.887768
Validation loss decreased (0.449731 --> 0.397853).  Saving model ...
Epoch: 6, Training Loss: 0.372260, Validation Loss: 0.458791, Training Accuracy: 0.919203, Validation Accuracy: 0.867414
EarlyStopping counter: 1 out of 10
Epoch: 7, Training Loss: 0.364167, Validation Loss: 0.523502, Training Accuracy: 0.919328, Validation Accuracy: 0.840710
EarlyStopping counter: 2 out of 10
Epoch: 8, Training Loss: 0.365466, Validation Loss: 0.436861, Training Accuracy: 0.920884, Validation Accuracy: 0.871709
EarlyStopping counter: 3 out of 10
Epoch: 9, Training Loss: 0.362237, Validation Loss: 0.503781, Training Accuracy: 0.920635, Validation Accuracy: 0.847806
Epoch 00009: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 10, Training Loss: 0.340547, Validation Loss: 0.381839, Training Accuracy: 0.931466, Validation Accuracy: 0.898413
Validation loss decreased (0.397853 --> 0.381839).  Saving model ...
Epoch: 11, Training Loss: 0.345844, Validation Loss: 0.388400, Training Accuracy: 0.930657, Validation Accuracy: 0.897852
EarlyStopping counter: 1 out of 10
Epoch: 12, Training Loss: 0.339942, Validation Loss: 0.385708, Training Accuracy: 0.931839, Validation Accuracy: 0.899907
EarlyStopping counter: 2 out of 10
Epoch: 13, Training Loss: 0.338813, Validation Loss: 0.383345, Training Accuracy: 0.934703, Validation Accuracy: 0.892810
EarlyStopping counter: 3 out of 10
Epoch: 14, Training Loss: 0.340636, Validation Loss: 0.379825, Training Accuracy: 0.934392, Validation Accuracy: 0.895612
Epoch 00014: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.381839 --> 0.379825).  Saving model ...
Epoch: 15, Training Loss: 0.343038, Validation Loss: 0.377832, Training Accuracy: 0.933458, Validation Accuracy: 0.897852
Validation loss decreased (0.379825 --> 0.377832).  Saving model ...
Epoch: 16, Training Loss: 0.343231, Validation Loss: 0.380530, Training Accuracy: 0.935138, Validation Accuracy: 0.897852
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.340493, Validation Loss: 0.378994, Training Accuracy: 0.932773, Validation Accuracy: 0.899346
EarlyStopping counter: 2 out of 10
Epoch: 18, Training Loss: 0.334873, Validation Loss: 0.378549, Training Accuracy: 0.934765, Validation Accuracy: 0.898226
Epoch 00018: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 3 out of 10
Epoch: 19, Training Loss: 0.342755, Validation Loss: 0.378369, Training Accuracy: 0.932835, Validation Accuracy: 0.898039
EarlyStopping counter: 4 out of 10
Epoch: 20, Training Loss: 0.335992, Validation Loss: 0.381060, Training Accuracy: 0.935636, Validation Accuracy: 0.898039
EarlyStopping counter: 5 out of 10
Epoch: 21, Training Loss: 0.339985, Validation Loss: 0.380276, Training Accuracy: 0.936010, Validation Accuracy: 0.897666
EarlyStopping counter: 6 out of 10
Epoch: 22, Training Loss: 0.334535, Validation Loss: 0.380917, Training Accuracy: 0.936508, Validation Accuracy: 0.897479
EarlyStopping counter: 7 out of 10
Epoch: 23, Training Loss: 0.338321, Validation Loss: 0.382191, Training Accuracy: 0.935014, Validation Accuracy: 0.898599
EarlyStopping counter: 8 out of 10
Epoch: 24, Training Loss: 0.340555, Validation Loss: 0.379439, Training Accuracy: 0.934641, Validation Accuracy: 0.898226
EarlyStopping counter: 9 out of 10
Epoch: 25, Training Loss: 0.334429, Validation Loss: 0.381048, Training Accuracy: 0.935823, Validation Accuracy: 0.897666
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 25
Ended Training Cycle
backbone.blocks.5.1._expand_conv
[1410, 9, 701, 412, 291, 978, 1544, 672, 53, 679, 300, 488, 1208, 1486, 311, 217, 1115, 1232, 921, 214, 1476, 1511, 438, 1522, 1357, 564, 239, 459, 148, 1001, 1626, 1054, 476, 1204, 579, 123, 386, 747, 758, 1279, 277, 892, 1545, 1048, 739, 131, 363, 604, 1186, 495, 858, 1317, 682, 551, 371, 1172, 183, 1033, 712, 1564, 1600, 1055, 395, 1315, 433, 86, 1599, 219, 1405, 578, 632, 331, 1387, 482, 536, 18, 1275, 1392, 1273, 243, 896, 702, 37, 571, 136, 996, 513, 215, 943, 1196, 1142, 496, 924, 205, 914, 1508, 601, 583, 348, 575, 534, 618, 836, 1582, 173, 1028, 473, 1331, 779, 574, 452, 542, 864, 492, 78, 988, 202, 158, 1445, 1601, 705, 189, 529, 1481, 1043, 623, 1466, 351, 1165, 865, 210, 775, 1415, 1426, 370, 382, 66, 110, 1113, 113, 1309, 841, 1131, 1278, 235, 727, 388, 350, 759, 1560, 1102, 1616, 872, 881, 715, 565, 714, 911, 408, 835, 700, 228, 494, 1277]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.1._expand_conv (Conv2d(244, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.1._expand_conv (Conv2d(244, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
[1] prune_out_channels on backbone.blocks.5.1._expand_conv (Conv2d(244, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.1._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[2] prune_out_channels on backbone.blocks.5.1._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_74(HardtanhBackward0), #idxs=164
[3] prune_out_channels on _ElementWiseOp_74(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)), #idxs=164
[4] prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)) => prune_out_channels on backbone.blocks.5.1._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[5] prune_out_channels on backbone.blocks.5.1._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_73(HardtanhBackward0), #idxs=164
[6] prune_out_channels on _ElementWiseOp_73(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.1._project_conv (Conv2d(1468, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.1._expand_conv
24
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.1._depthwise_conv
23
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
backbone.blocks.5.1._depthwise_conv
[1237, 551, 618, 848, 630, 961, 381, 913, 113, 1012, 548, 1450, 761, 371, 529, 1164, 1424, 440, 1395, 993, 201, 860, 318, 908, 951, 525, 1391, 1080, 156, 1039, 578, 535, 183, 584, 1124, 878, 849, 532, 1417, 498, 266, 1392, 365, 988, 588, 1435, 879, 410, 850, 285, 428, 287, 946, 998, 1305, 869, 1133, 358, 898, 169, 1222, 646, 1134, 361, 1419, 511, 903, 411, 963, 1346, 470, 401, 1311, 281, 460, 1464, 929, 872, 297, 854, 1408, 644, 5, 1336, 957, 492, 1204, 625, 1413, 640, 356, 480, 1008, 757, 660, 1071, 798, 1200, 1280, 1313, 620, 485, 70, 453, 194, 186, 27, 947, 450, 634, 1455, 837, 1415, 119, 236, 218, 1059, 1291, 886, 213, 728, 1044, 400, 608, 1412, 1358, 134, 1458, 1216, 1270, 616, 296, 861, 932, 247, 462, 910, 1416, 661, 631, 1368, 1227, 1113, 1460, 1181, 1297, 711]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)), #idxs=147
[1] prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on _ElementWiseOp_74(HardtanhBackward0), #idxs=147
[2] prune_out_channels on backbone.blocks.5.1._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.1._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[3] prune_out_channels on backbone.blocks.5.1._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_73(HardtanhBackward0), #idxs=147
[4] prune_out_channels on _ElementWiseOp_73(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.1._project_conv (Conv2d(1321, 244, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
[5] prune_out_channels on _ElementWiseOp_74(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.1._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[6] prune_out_channels on backbone.blocks.5.1._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.1._expand_conv (Conv2d(244, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.1._depthwise_conv
23
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.1._expand_conv
24
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
backbone.blocks.5.1._project_conv
[56, 167, 186, 198, 127, 65, 97, 128, 61, 203, 205, 196, 54, 207, 98, 131, 49, 213, 133, 219, 135, 191, 92, 91, 90]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(1321, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(1321, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[1] prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(1321, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=25
[2] prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_12(AddBackward0), #idxs=25
[3] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=25
[4] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on _ElementWiseOp_11(AddBackward0), #idxs=25
[5] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_in_channels on backbone.blocks.5.2._expand_conv (Conv2d(219, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[6] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=25
[7] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on _ElementWiseOp_10(AddBackward0), #idxs=25
[8] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_in_channels on backbone.blocks.5.3._expand_conv (Conv2d(219, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[9] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=25
[10] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on _ElementWiseOp_9(AddBackward0), #idxs=25
[11] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_in_channels on backbone.blocks.5.4._expand_conv (Conv2d(219, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[12] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=25
[13] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on _ElementWiseOp_8(AddBackward0), #idxs=25
[14] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_in_channels on backbone.blocks.5.5._expand_conv (Conv2d(219, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[15] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=25
[16] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on _ElementWiseOp_7(AddBackward0), #idxs=25
[17] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_in_channels on backbone.blocks.5.6._expand_conv (Conv2d(219, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[18] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=25
[19] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on _ElementWiseOp_6(AddBackward0), #idxs=25
[20] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_in_channels on backbone.blocks.5.7._expand_conv (Conv2d(219, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[21] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=25
[22] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_in_channels on backbone.blocks.6.0._expand_conv (Conv2d(219, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[23] prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(1632, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[24] prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(1632, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[25] prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(1632, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[26] prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(1632, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[27] prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(1632, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[28] prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(1632, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[29] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(777, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
[30] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(219, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.5.1._expand_conv (Conv2d(219, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=25
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.1._project_conv
22
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True, False,  True, False,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([244])
torch.Size([219])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.7._project_conv
4
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True, False,  True, False,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([244])
torch.Size([219])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.6._project_conv
7
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True, False,  True, False,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([244])
torch.Size([219])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.5._project_conv
10
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True, False,  True, False,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([244])
torch.Size([219])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.4._project_conv
13
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True, False,  True, False,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([244])
torch.Size([219])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.3._project_conv
16
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True, False,  True, False,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([244])
torch.Size([219])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.2._project_conv
19
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True, False,  True, False,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([244])
torch.Size([219])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.0._project_conv
25
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True, False,  True, False,  True,  True,  True,
         True, False,  True,  True,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False, False,  True,
         True, False,  True, False,  True, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True, False,  True,  True,  True,  True, False,  True, False,  True,
         True,  True,  True, False,  True, False,  True, False,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True, False,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True])
torch.Size([244])
torch.Size([219])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 83, 10, 10]          45,069          45,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 777, 5, 5]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 777, 5, 5]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 219, 5, 5]         170,163         170,163
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 219, 5, 5]             438             438
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1321, 5, 5]         289,299         289,299
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 219, 5, 5]         289,299         289,299
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 219, 5, 5]             438             438
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1632, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 219, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 219, 5, 5]             438             438
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 219, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 219, 5, 5]             438             438
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 219, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 219, 5, 5]             438             438
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 219, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 219, 5, 5]             438             438
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 219, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 219, 5, 5]             438             438
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 219, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 219, 5, 5]             438             438
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         357,408         357,408
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 8,494,842
Trainable params: 8,494,842
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.375614, Validation Loss: 0.529535, Training Accuracy: 0.919577, Validation Accuracy: 0.827451
Validation loss decreased (inf --> 0.529535).  Saving model ...
Epoch: 2, Training Loss: 0.371071, Validation Loss: 0.472850, Training Accuracy: 0.920199, Validation Accuracy: 0.852661
Validation loss decreased (0.529535 --> 0.472850).  Saving model ...
Epoch: 3, Training Loss: 0.366417, Validation Loss: 0.595103, Training Accuracy: 0.922004, Validation Accuracy: 0.812512
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.360894, Validation Loss: 0.578771, Training Accuracy: 0.922129, Validation Accuracy: 0.811765
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.364373, Validation Loss: 0.414077, Training Accuracy: 0.922378, Validation Accuracy: 0.877684
Validation loss decreased (0.472850 --> 0.414077).  Saving model ...
Epoch: 6, Training Loss: 0.358619, Validation Loss: 0.399528, Training Accuracy: 0.924183, Validation Accuracy: 0.887582
Validation loss decreased (0.414077 --> 0.399528).  Saving model ...
Epoch: 7, Training Loss: 0.369565, Validation Loss: 0.452833, Training Accuracy: 0.920573, Validation Accuracy: 0.873576
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.365377, Validation Loss: 0.516895, Training Accuracy: 0.921818, Validation Accuracy: 0.833800
EarlyStopping counter: 2 out of 10
Epoch: 9, Training Loss: 0.359293, Validation Loss: 0.436735, Training Accuracy: 0.923187, Validation Accuracy: 0.876937
EarlyStopping counter: 3 out of 10
Epoch: 10, Training Loss: 0.365868, Validation Loss: 0.453832, Training Accuracy: 0.921631, Validation Accuracy: 0.864613
Epoch 00010: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 11, Training Loss: 0.338046, Validation Loss: 0.381742, Training Accuracy: 0.936072, Validation Accuracy: 0.900467
Validation loss decreased (0.399528 --> 0.381742).  Saving model ...
Epoch: 12, Training Loss: 0.336187, Validation Loss: 0.382631, Training Accuracy: 0.934454, Validation Accuracy: 0.895051
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.342984, Validation Loss: 0.383905, Training Accuracy: 0.934703, Validation Accuracy: 0.898599
EarlyStopping counter: 2 out of 10
Epoch: 14, Training Loss: 0.341826, Validation Loss: 0.380281, Training Accuracy: 0.933147, Validation Accuracy: 0.899346
Validation loss decreased (0.381742 --> 0.380281).  Saving model ...
Epoch: 15, Training Loss: 0.338259, Validation Loss: 0.386756, Training Accuracy: 0.935450, Validation Accuracy: 0.894118
Epoch 00015: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 1 out of 10
Epoch: 16, Training Loss: 0.335181, Validation Loss: 0.378729, Training Accuracy: 0.936632, Validation Accuracy: 0.896919
Validation loss decreased (0.380281 --> 0.378729).  Saving model ...
Epoch: 17, Training Loss: 0.338024, Validation Loss: 0.378501, Training Accuracy: 0.938562, Validation Accuracy: 0.896919
Validation loss decreased (0.378729 --> 0.378501).  Saving model ...
Epoch: 18, Training Loss: 0.337108, Validation Loss: 0.379902, Training Accuracy: 0.937815, Validation Accuracy: 0.897106
EarlyStopping counter: 1 out of 10
Epoch: 19, Training Loss: 0.336129, Validation Loss: 0.380156, Training Accuracy: 0.935699, Validation Accuracy: 0.897479
Epoch 00019: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 20, Training Loss: 0.340635, Validation Loss: 0.378107, Training Accuracy: 0.935574, Validation Accuracy: 0.898226
Validation loss decreased (0.378501 --> 0.378107).  Saving model ...
Epoch: 21, Training Loss: 0.340116, Validation Loss: 0.377182, Training Accuracy: 0.934827, Validation Accuracy: 0.896545
Validation loss decreased (0.378107 --> 0.377182).  Saving model ...
Epoch: 22, Training Loss: 0.333978, Validation Loss: 0.377913, Training Accuracy: 0.937628, Validation Accuracy: 0.898226
EarlyStopping counter: 1 out of 10
Epoch: 23, Training Loss: 0.341428, Validation Loss: 0.378046, Training Accuracy: 0.935387, Validation Accuracy: 0.896545
EarlyStopping counter: 2 out of 10
Epoch: 24, Training Loss: 0.338809, Validation Loss: 0.380454, Training Accuracy: 0.934890, Validation Accuracy: 0.897479
EarlyStopping counter: 3 out of 10
Epoch: 25, Training Loss: 0.339839, Validation Loss: 0.378656, Training Accuracy: 0.935387, Validation Accuracy: 0.899160
EarlyStopping counter: 4 out of 10
Epoch: 26, Training Loss: 0.337163, Validation Loss: 0.378615, Training Accuracy: 0.935263, Validation Accuracy: 0.898039
EarlyStopping counter: 5 out of 10
Epoch: 27, Training Loss: 0.337648, Validation Loss: 0.379431, Training Accuracy: 0.937006, Validation Accuracy: 0.897479
EarlyStopping counter: 6 out of 10
Epoch: 28, Training Loss: 0.337711, Validation Loss: 0.378242, Training Accuracy: 0.937379, Validation Accuracy: 0.896919
EarlyStopping counter: 7 out of 10
Epoch: 29, Training Loss: 0.336636, Validation Loss: 0.380247, Training Accuracy: 0.936819, Validation Accuracy: 0.897479
EarlyStopping counter: 8 out of 10
Epoch: 30, Training Loss: 0.338941, Validation Loss: 0.378712, Training Accuracy: 0.936134, Validation Accuracy: 0.898226
EarlyStopping counter: 9 out of 10
Epoch: 31, Training Loss: 0.336584, Validation Loss: 0.379188, Training Accuracy: 0.936819, Validation Accuracy: 0.895798
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 31
Ended Training Cycle
backbone.blocks.5.2._expand_conv
[987, 278, 104, 352, 1370, 871, 1560, 595, 1616, 68, 374, 228, 681, 1137, 452, 859, 672, 373, 1077, 1158, 127, 1485, 732, 9, 494, 1513, 830, 950, 1202, 1542, 851, 782, 425, 1517, 1241, 86, 1614, 1286, 235, 755, 1335, 1044, 854, 1208, 73, 14, 370, 1070, 928, 709, 1548, 0, 35, 968, 743, 1601, 896, 1016, 915, 1564, 1607, 400, 1139, 1125, 1449, 223, 15, 414, 715, 1425, 176, 661, 1620, 937, 1204, 1318, 265, 911, 1256, 243, 819, 725, 1211, 931, 872, 1297, 1406, 1479, 79, 527, 349, 272, 1435, 1341, 829, 52, 115, 556, 1187, 627, 1310, 816, 1384, 417, 65, 1226, 1550, 1099, 290, 1129, 122, 1228, 488, 901, 884, 795, 1048, 1112, 749, 838, 735, 345, 765, 636, 1543, 1028, 1057, 633, 879, 752, 1091, 1065, 781, 1160, 745, 1036, 347, 150, 1586, 1233, 46, 701, 314, 792, 409, 478, 437, 678, 662, 1358, 800, 990, 329, 300, 1210, 543, 510, 296, 738, 863, 549, 1353, 1582, 401]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.2._expand_conv (Conv2d(219, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.2._expand_conv (Conv2d(219, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
[1] prune_out_channels on backbone.blocks.5.2._expand_conv (Conv2d(219, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.2._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[2] prune_out_channels on backbone.blocks.5.2._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_76(HardtanhBackward0), #idxs=164
[3] prune_out_channels on _ElementWiseOp_76(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)), #idxs=164
[4] prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)) => prune_out_channels on backbone.blocks.5.2._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[5] prune_out_channels on backbone.blocks.5.2._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_75(HardtanhBackward0), #idxs=164
[6] prune_out_channels on _ElementWiseOp_75(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.2._project_conv (Conv2d(1468, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.2._expand_conv
21
tensor([False,  True,  True,  ...,  True,  True,  True])
torch.Size([1632])
torch.Size([1468])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.2._depthwise_conv
20
tensor([False,  True,  True,  ...,  True,  True,  True])
torch.Size([1632])
torch.Size([1468])
backbone.blocks.5.2._depthwise_conv
[719, 256, 752, 821, 703, 387, 292, 266, 608, 661, 27, 494, 1441, 1047, 363, 894, 354, 200, 351, 534, 1321, 745, 152, 1361, 329, 1403, 55, 607, 167, 429, 1308, 1333, 931, 1185, 271, 582, 121, 714, 1287, 1221, 5, 736, 73, 272, 1404, 1387, 864, 288, 573, 1137, 11, 312, 1008, 281, 110, 669, 1081, 338, 1146, 771, 294, 263, 1386, 96, 227, 565, 310, 761, 1348, 759, 701, 721, 936, 332, 656, 1319, 1419, 514, 686, 670, 1090, 37, 875, 887, 418, 1167, 855, 486, 1455, 928, 1164, 189, 169, 155, 784, 681, 251, 232, 74, 890, 1237, 567, 515, 70, 430, 1440, 264, 273, 919, 939, 1296, 344, 233, 373, 969, 649, 659, 1150, 663, 175, 49, 1255, 1002, 683, 1011, 1322, 1344, 1103, 25, 946, 159, 250, 550, 599, 1384, 317, 1270, 212, 487, 1212, 506, 684, 795, 117, 228, 1240, 1457]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)), #idxs=147
[1] prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on _ElementWiseOp_76(HardtanhBackward0), #idxs=147
[2] prune_out_channels on backbone.blocks.5.2._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.2._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[3] prune_out_channels on backbone.blocks.5.2._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_75(HardtanhBackward0), #idxs=147
[4] prune_out_channels on _ElementWiseOp_75(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.2._project_conv (Conv2d(1321, 219, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
[5] prune_out_channels on _ElementWiseOp_76(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.2._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[6] prune_out_channels on backbone.blocks.5.2._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.2._expand_conv (Conv2d(219, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.2._depthwise_conv
20
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.2._expand_conv
21
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
backbone.blocks.5.2._project_conv
[159, 129, 130, 132, 139, 142, 143, 145, 150, 156, 126, 161, 165, 166, 44, 167, 170, 176, 177, 80, 101, 102]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(1321, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(1321, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[1] prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(1321, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=22
[2] prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_11(AddBackward0), #idxs=22
[3] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on _ElementWiseOp_12(AddBackward0), #idxs=22
[4] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on _ElementWiseOp_10(AddBackward0), #idxs=22
[5] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_in_channels on backbone.blocks.5.3._expand_conv (Conv2d(197, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[6] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=22
[7] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on _ElementWiseOp_9(AddBackward0), #idxs=22
[8] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_in_channels on backbone.blocks.5.4._expand_conv (Conv2d(197, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[9] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=22
[10] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on _ElementWiseOp_8(AddBackward0), #idxs=22
[11] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_in_channels on backbone.blocks.5.5._expand_conv (Conv2d(197, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[12] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=22
[13] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on _ElementWiseOp_7(AddBackward0), #idxs=22
[14] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_in_channels on backbone.blocks.5.6._expand_conv (Conv2d(197, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[15] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=22
[16] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on _ElementWiseOp_6(AddBackward0), #idxs=22
[17] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_in_channels on backbone.blocks.5.7._expand_conv (Conv2d(197, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[18] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=22
[19] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_in_channels on backbone.blocks.6.0._expand_conv (Conv2d(197, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[20] prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(1632, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[21] prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(1632, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[22] prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(1632, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[23] prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(1632, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[24] prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(1632, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[25] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=22
[26] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=22
[27] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_in_channels on backbone.blocks.5.2._expand_conv (Conv2d(197, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[28] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(777, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[29] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.5.1._expand_conv (Conv2d(197, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
[30] prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(197, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(1321, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=22
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.2._project_conv
19
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True,  True, False, False, False,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([219])
torch.Size([197])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.7._project_conv
4
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True,  True, False, False, False,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([219])
torch.Size([197])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.6._project_conv
7
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True,  True, False, False, False,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([219])
torch.Size([197])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.5._project_conv
10
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True,  True, False, False, False,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([219])
torch.Size([197])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.4._project_conv
13
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True,  True, False, False, False,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([219])
torch.Size([197])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.3._project_conv
16
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True,  True, False, False, False,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([219])
torch.Size([197])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.0._project_conv
25
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True,  True, False, False, False,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([219])
torch.Size([197])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.1._project_conv
22
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True, False, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True, False,
        False,  True, False,  True,  True,  True,  True,  True,  True, False,
         True,  True, False, False,  True, False,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False,  True,  True, False,
         True, False,  True,  True,  True, False, False, False,  True,  True,
        False,  True,  True,  True,  True,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([219])
torch.Size([197])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 83, 10, 10]          45,069          45,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 777, 5, 5]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 777, 5, 5]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 197, 5, 5]         153,069         153,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 197, 5, 5]             394             394
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1321, 5, 5]         260,237         260,237
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 197, 5, 5]         260,237         260,237
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 197, 5, 5]             394             394
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1321, 5, 5]         260,237         260,237
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 197, 5, 5]         260,237         260,237
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 197, 5, 5]             394             394
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1632, 5, 5]         321,504         321,504
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 197, 5, 5]         321,504         321,504
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 197, 5, 5]             394             394
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         321,504         321,504
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 197, 5, 5]         321,504         321,504
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 197, 5, 5]             394             394
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         321,504         321,504
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 197, 5, 5]         321,504         321,504
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 197, 5, 5]             394             394
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         321,504         321,504
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 197, 5, 5]         321,504         321,504
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 197, 5, 5]             394             394
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         321,504         321,504
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 197, 5, 5]         321,504         321,504
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 197, 5, 5]             394             394
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         321,504         321,504
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 7,820,967
Trainable params: 7,820,967
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.373355, Validation Loss: 0.455964, Training Accuracy: 0.921195, Validation Accuracy: 0.866480
Validation loss decreased (inf --> 0.455964).  Saving model ...
Epoch: 2, Training Loss: 0.363419, Validation Loss: 0.434135, Training Accuracy: 0.924556, Validation Accuracy: 0.879178
Validation loss decreased (0.455964 --> 0.434135).  Saving model ...
Epoch: 3, Training Loss: 0.365006, Validation Loss: 0.505535, Training Accuracy: 0.924494, Validation Accuracy: 0.849113
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.364612, Validation Loss: 0.589769, Training Accuracy: 0.922751, Validation Accuracy: 0.805976
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.367378, Validation Loss: 0.477410, Training Accuracy: 0.921942, Validation Accuracy: 0.861064
EarlyStopping counter: 3 out of 10
Epoch: 6, Training Loss: 0.362728, Validation Loss: 0.450967, Training Accuracy: 0.923125, Validation Accuracy: 0.866480
Epoch 00006: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 7, Training Loss: 0.349390, Validation Loss: 0.390269, Training Accuracy: 0.930781, Validation Accuracy: 0.894865
Validation loss decreased (0.434135 --> 0.390269).  Saving model ...
Epoch: 8, Training Loss: 0.349174, Validation Loss: 0.383214, Training Accuracy: 0.934641, Validation Accuracy: 0.898599
Validation loss decreased (0.390269 --> 0.383214).  Saving model ...
Epoch: 9, Training Loss: 0.339216, Validation Loss: 0.385684, Training Accuracy: 0.935201, Validation Accuracy: 0.898413
EarlyStopping counter: 1 out of 10
Epoch: 10, Training Loss: 0.341501, Validation Loss: 0.390134, Training Accuracy: 0.934578, Validation Accuracy: 0.898786
EarlyStopping counter: 2 out of 10
Epoch: 11, Training Loss: 0.346245, Validation Loss: 0.386394, Training Accuracy: 0.934703, Validation Accuracy: 0.898226
Epoch 00011: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 3 out of 10
Epoch: 12, Training Loss: 0.342759, Validation Loss: 0.383256, Training Accuracy: 0.937068, Validation Accuracy: 0.899160
EarlyStopping counter: 4 out of 10
Epoch: 13, Training Loss: 0.339384, Validation Loss: 0.382940, Training Accuracy: 0.936819, Validation Accuracy: 0.899533
Validation loss decreased (0.383214 --> 0.382940).  Saving model ...
Epoch: 14, Training Loss: 0.337250, Validation Loss: 0.382089, Training Accuracy: 0.938562, Validation Accuracy: 0.900093
Validation loss decreased (0.382940 --> 0.382089).  Saving model ...
Epoch: 15, Training Loss: 0.339887, Validation Loss: 0.381853, Training Accuracy: 0.938687, Validation Accuracy: 0.899346
Epoch 00015: reducing learning rate of group 0 to 1.0000e-08.
Validation loss decreased (0.382089 --> 0.381853).  Saving model ...
Epoch: 16, Training Loss: 0.338838, Validation Loss: 0.381736, Training Accuracy: 0.938687, Validation Accuracy: 0.899720
Validation loss decreased (0.381853 --> 0.381736).  Saving model ...
Epoch: 17, Training Loss: 0.335808, Validation Loss: 0.383647, Training Accuracy: 0.938500, Validation Accuracy: 0.898413
EarlyStopping counter: 1 out of 10
Epoch: 18, Training Loss: 0.336218, Validation Loss: 0.383826, Training Accuracy: 0.935636, Validation Accuracy: 0.899160
EarlyStopping counter: 2 out of 10
Epoch: 19, Training Loss: 0.337627, Validation Loss: 0.381205, Training Accuracy: 0.937940, Validation Accuracy: 0.900093
Validation loss decreased (0.381736 --> 0.381205).  Saving model ...
Epoch: 20, Training Loss: 0.335560, Validation Loss: 0.383883, Training Accuracy: 0.939060, Validation Accuracy: 0.898599
EarlyStopping counter: 1 out of 10
Epoch: 21, Training Loss: 0.337998, Validation Loss: 0.381915, Training Accuracy: 0.939371, Validation Accuracy: 0.898973
EarlyStopping counter: 2 out of 10
Epoch: 22, Training Loss: 0.343418, Validation Loss: 0.382655, Training Accuracy: 0.936383, Validation Accuracy: 0.898413
EarlyStopping counter: 3 out of 10
Epoch: 23, Training Loss: 0.338344, Validation Loss: 0.385105, Training Accuracy: 0.937442, Validation Accuracy: 0.897106
EarlyStopping counter: 4 out of 10
Epoch: 24, Training Loss: 0.339953, Validation Loss: 0.382812, Training Accuracy: 0.938562, Validation Accuracy: 0.898599
EarlyStopping counter: 5 out of 10
Epoch: 25, Training Loss: 0.341904, Validation Loss: 0.383136, Training Accuracy: 0.938189, Validation Accuracy: 0.898599
EarlyStopping counter: 6 out of 10
Epoch: 26, Training Loss: 0.335806, Validation Loss: 0.383880, Training Accuracy: 0.937504, Validation Accuracy: 0.899160
EarlyStopping counter: 7 out of 10
Epoch: 27, Training Loss: 0.338207, Validation Loss: 0.383120, Training Accuracy: 0.936944, Validation Accuracy: 0.900280
EarlyStopping counter: 8 out of 10
Epoch: 28, Training Loss: 0.333481, Validation Loss: 0.383214, Training Accuracy: 0.940678, Validation Accuracy: 0.898599
EarlyStopping counter: 9 out of 10
Epoch: 29, Training Loss: 0.338346, Validation Loss: 0.382658, Training Accuracy: 0.938562, Validation Accuracy: 0.900467
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 29
Ended Training Cycle
backbone.blocks.5.3._expand_conv
[530, 1094, 1467, 1126, 1511, 980, 156, 1483, 729, 788, 1063, 823, 1494, 867, 791, 535, 542, 703, 759, 851, 1113, 616, 1195, 345, 236, 1329, 377, 32, 1519, 409, 134, 683, 410, 368, 372, 1051, 859, 1122, 1392, 73, 679, 677, 1556, 504, 966, 942, 638, 425, 1095, 720, 381, 1216, 1368, 178, 1591, 1500, 1402, 905, 229, 681, 890, 461, 995, 944, 1093, 1575, 407, 661, 1298, 247, 1065, 738, 246, 496, 831, 1150, 751, 716, 1086, 667, 1078, 1388, 228, 1616, 1620, 131, 380, 1489, 1446, 718, 1545, 215, 319, 1481, 723, 388, 302, 332, 115, 1096, 1553, 844, 1070, 694, 234, 72, 960, 1530, 537, 371, 395, 56, 227, 208, 954, 1132, 1491, 1302, 610, 1407, 1510, 1375, 91, 807, 257, 1102, 650, 835, 1265, 102, 294, 1042, 1092, 690, 153, 469, 670, 763, 1117, 162, 947, 1220, 1308, 673, 693, 71, 832, 389, 95, 1440, 299, 108, 1124, 202, 48, 797, 78, 991, 476, 1256, 997, 1223, 1549, 825]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.3._expand_conv (Conv2d(197, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.3._expand_conv (Conv2d(197, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
[1] prune_out_channels on backbone.blocks.5.3._expand_conv (Conv2d(197, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.3._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[2] prune_out_channels on backbone.blocks.5.3._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_78(HardtanhBackward0), #idxs=164
[3] prune_out_channels on _ElementWiseOp_78(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)), #idxs=164
[4] prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)) => prune_out_channels on backbone.blocks.5.3._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[5] prune_out_channels on backbone.blocks.5.3._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_77(HardtanhBackward0), #idxs=164
[6] prune_out_channels on _ElementWiseOp_77(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.3._project_conv (Conv2d(1468, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.3._expand_conv
18
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.3._depthwise_conv
17
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
backbone.blocks.5.3._depthwise_conv
[937, 374, 472, 584, 615, 54, 990, 1257, 230, 67, 112, 749, 900, 533, 694, 460, 17, 802, 1455, 740, 1007, 547, 327, 1275, 1281, 715, 958, 1161, 1167, 326, 700, 247, 1200, 908, 961, 1339, 788, 1062, 216, 1263, 1438, 302, 558, 597, 1309, 845, 512, 969, 604, 1010, 819, 106, 789, 20, 882, 64, 917, 412, 549, 232, 217, 1130, 197, 1211, 1404, 194, 873, 1110, 907, 1250, 892, 87, 528, 9, 220, 1153, 776, 1170, 1192, 913, 438, 12, 976, 6, 567, 762, 475, 265, 308, 579, 1398, 874, 830, 919, 333, 609, 1384, 1102, 1095, 1056, 1291, 1081, 403, 903, 1451, 1186, 729, 451, 834, 50, 552, 1413, 184, 29, 719, 718, 658, 1094, 56, 440, 633, 1082, 906, 1229, 744, 1232, 689, 971, 1344, 1429, 911, 778, 675, 421, 83, 695, 1352, 501, 518, 145, 91, 1073, 1155, 494, 968, 131, 687]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)), #idxs=147
[1] prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on _ElementWiseOp_78(HardtanhBackward0), #idxs=147
[2] prune_out_channels on backbone.blocks.5.3._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.3._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[3] prune_out_channels on backbone.blocks.5.3._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_77(HardtanhBackward0), #idxs=147
[4] prune_out_channels on _ElementWiseOp_77(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.3._project_conv (Conv2d(1321, 197, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
[5] prune_out_channels on _ElementWiseOp_78(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.3._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[6] prune_out_channels on backbone.blocks.5.3._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.3._expand_conv (Conv2d(197, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.3._depthwise_conv
17
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.3._expand_conv
18
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
backbone.blocks.5.3._project_conv
[57, 78, 72, 71, 67, 165, 167, 171, 59, 172, 82, 175, 53, 181, 44, 41, 40, 39, 38, 100]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(1321, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(1321, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[1] prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(1321, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[2] prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_10(AddBackward0), #idxs=20
[3] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on _ElementWiseOp_11(AddBackward0), #idxs=20
[4] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on _ElementWiseOp_9(AddBackward0), #idxs=20
[5] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_in_channels on backbone.blocks.5.4._expand_conv (Conv2d(177, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[6] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[7] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on _ElementWiseOp_8(AddBackward0), #idxs=20
[8] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_in_channels on backbone.blocks.5.5._expand_conv (Conv2d(177, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[9] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[10] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on _ElementWiseOp_7(AddBackward0), #idxs=20
[11] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_in_channels on backbone.blocks.5.6._expand_conv (Conv2d(177, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[12] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[13] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on _ElementWiseOp_6(AddBackward0), #idxs=20
[14] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_in_channels on backbone.blocks.5.7._expand_conv (Conv2d(177, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[15] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[16] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_in_channels on backbone.blocks.6.0._expand_conv (Conv2d(177, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[17] prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(1632, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[18] prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(1632, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[19] prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(1632, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[20] prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(1632, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[21] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[22] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on _ElementWiseOp_12(AddBackward0), #idxs=20
[23] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_in_channels on backbone.blocks.5.3._expand_conv (Conv2d(177, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[24] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[25] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=20
[26] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_in_channels on backbone.blocks.5.2._expand_conv (Conv2d(177, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[27] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(777, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[28] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.5.1._expand_conv (Conv2d(177, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[29] prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(1321, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
[30] prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(177, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(1321, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=20
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.3._project_conv
16
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([197])
torch.Size([177])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.7._project_conv
4
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([197])
torch.Size([177])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.6._project_conv
7
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([197])
torch.Size([177])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.5._project_conv
10
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([197])
torch.Size([177])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.4._project_conv
13
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([197])
torch.Size([177])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.0._project_conv
25
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([197])
torch.Size([177])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.1._project_conv
22
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([197])
torch.Size([177])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.2._project_conv
19
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True, False,  True, False,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
         True, False, False,  True,  True,  True,  True,  True, False,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True, False, False,  True,  True, False,  True,  True,  True,  True,
         True, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([197])
torch.Size([177])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 83, 10, 10]          45,069          45,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 777, 5, 5]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 777, 5, 5]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 177, 5, 5]         137,529         137,529
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 177, 5, 5]             354             354
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1321, 5, 5]         233,817         233,817
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 177, 5, 5]         233,817         233,817
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 177, 5, 5]             354             354
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1321, 5, 5]         233,817         233,817
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 177, 5, 5]         233,817         233,817
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 177, 5, 5]             354             354
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1321, 5, 5]         233,817         233,817
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 177, 5, 5]         233,817         233,817
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 177, 5, 5]             354             354
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1632, 5, 5]         288,864         288,864
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 177, 5, 5]         288,864         288,864
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 177, 5, 5]             354             354
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         288,864         288,864
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 177, 5, 5]         288,864         288,864
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 177, 5, 5]             354             354
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         288,864         288,864
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 177, 5, 5]         288,864         288,864
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 177, 5, 5]             354             354
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         288,864         288,864
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 177, 5, 5]         288,864         288,864
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 177, 5, 5]             354             354
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         288,864         288,864
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 7,221,274
Trainable params: 7,221,274
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.376512, Validation Loss: 0.427352, Training Accuracy: 0.920075, Validation Accuracy: 0.876377
Validation loss decreased (inf --> 0.427352).  Saving model ...
Epoch: 2, Training Loss: 0.368509, Validation Loss: 0.625149, Training Accuracy: 0.923623, Validation Accuracy: 0.795145
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.371880, Validation Loss: 0.422974, Training Accuracy: 0.922129, Validation Accuracy: 0.885341
Validation loss decreased (0.427352 --> 0.422974).  Saving model ...
Epoch: 4, Training Loss: 0.366345, Validation Loss: 0.459846, Training Accuracy: 0.923187, Validation Accuracy: 0.865173
EarlyStopping counter: 1 out of 10
Epoch: 5, Training Loss: 0.362702, Validation Loss: 0.432679, Training Accuracy: 0.924308, Validation Accuracy: 0.880859
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 2 out of 10
Epoch: 6, Training Loss: 0.348734, Validation Loss: 0.386141, Training Accuracy: 0.930843, Validation Accuracy: 0.898413
Validation loss decreased (0.422974 --> 0.386141).  Saving model ...
Epoch: 7, Training Loss: 0.346563, Validation Loss: 0.387324, Training Accuracy: 0.934080, Validation Accuracy: 0.895425
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.341219, Validation Loss: 0.386119, Training Accuracy: 0.935201, Validation Accuracy: 0.900467
Validation loss decreased (0.386141 --> 0.386119).  Saving model ...
Epoch: 9, Training Loss: 0.344186, Validation Loss: 0.388689, Training Accuracy: 0.936321, Validation Accuracy: 0.898413
EarlyStopping counter: 1 out of 10
Epoch: 10, Training Loss: 0.350113, Validation Loss: 0.395730, Training Accuracy: 0.934765, Validation Accuracy: 0.897666
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 11, Training Loss: 0.337727, Validation Loss: 0.384240, Training Accuracy: 0.938002, Validation Accuracy: 0.900840
Validation loss decreased (0.386119 --> 0.384240).  Saving model ...
Epoch: 12, Training Loss: 0.347064, Validation Loss: 0.383773, Training Accuracy: 0.937068, Validation Accuracy: 0.900280
Validation loss decreased (0.384240 --> 0.383773).  Saving model ...
Epoch: 13, Training Loss: 0.344829, Validation Loss: 0.383237, Training Accuracy: 0.935823, Validation Accuracy: 0.900840
Validation loss decreased (0.383773 --> 0.383237).  Saving model ...
Epoch: 14, Training Loss: 0.338023, Validation Loss: 0.385016, Training Accuracy: 0.939683, Validation Accuracy: 0.899720
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 1 out of 10
Epoch: 15, Training Loss: 0.342304, Validation Loss: 0.384727, Training Accuracy: 0.934827, Validation Accuracy: 0.901214
EarlyStopping counter: 2 out of 10
Epoch: 16, Training Loss: 0.336148, Validation Loss: 0.385194, Training Accuracy: 0.940056, Validation Accuracy: 0.899907
EarlyStopping counter: 3 out of 10
Epoch: 17, Training Loss: 0.338656, Validation Loss: 0.385211, Training Accuracy: 0.936321, Validation Accuracy: 0.901214
EarlyStopping counter: 4 out of 10
Epoch: 18, Training Loss: 0.342601, Validation Loss: 0.383145, Training Accuracy: 0.937068, Validation Accuracy: 0.899907
Validation loss decreased (0.383237 --> 0.383145).  Saving model ...
Epoch: 19, Training Loss: 0.341495, Validation Loss: 0.385291, Training Accuracy: 0.939496, Validation Accuracy: 0.900840
EarlyStopping counter: 1 out of 10
Epoch: 20, Training Loss: 0.346069, Validation Loss: 0.384508, Training Accuracy: 0.937566, Validation Accuracy: 0.901214
EarlyStopping counter: 2 out of 10
Epoch: 21, Training Loss: 0.343791, Validation Loss: 0.384497, Training Accuracy: 0.935885, Validation Accuracy: 0.901401
EarlyStopping counter: 3 out of 10
Epoch: 22, Training Loss: 0.344459, Validation Loss: 0.386930, Training Accuracy: 0.936134, Validation Accuracy: 0.900280
EarlyStopping counter: 4 out of 10
Epoch: 23, Training Loss: 0.345149, Validation Loss: 0.384423, Training Accuracy: 0.936881, Validation Accuracy: 0.899346
EarlyStopping counter: 5 out of 10
Epoch: 24, Training Loss: 0.341556, Validation Loss: 0.383921, Training Accuracy: 0.938500, Validation Accuracy: 0.900840
EarlyStopping counter: 6 out of 10
Epoch: 25, Training Loss: 0.342512, Validation Loss: 0.383018, Training Accuracy: 0.938687, Validation Accuracy: 0.901774
Validation loss decreased (0.383145 --> 0.383018).  Saving model ...
Epoch: 26, Training Loss: 0.344803, Validation Loss: 0.384221, Training Accuracy: 0.937317, Validation Accuracy: 0.901027
EarlyStopping counter: 1 out of 10
Epoch: 27, Training Loss: 0.340517, Validation Loss: 0.385418, Training Accuracy: 0.938126, Validation Accuracy: 0.901401
EarlyStopping counter: 2 out of 10
Epoch: 28, Training Loss: 0.342111, Validation Loss: 0.384724, Training Accuracy: 0.937442, Validation Accuracy: 0.900093
EarlyStopping counter: 3 out of 10
Epoch: 29, Training Loss: 0.336625, Validation Loss: 0.385604, Training Accuracy: 0.939496, Validation Accuracy: 0.901027
EarlyStopping counter: 4 out of 10
Epoch: 30, Training Loss: 0.342348, Validation Loss: 0.384264, Training Accuracy: 0.935450, Validation Accuracy: 0.901214
EarlyStopping counter: 5 out of 10
Epoch: 31, Training Loss: 0.345650, Validation Loss: 0.384755, Training Accuracy: 0.935761, Validation Accuracy: 0.900280
EarlyStopping counter: 6 out of 10
Epoch: 32, Training Loss: 0.339115, Validation Loss: 0.384751, Training Accuracy: 0.936881, Validation Accuracy: 0.900467
EarlyStopping counter: 7 out of 10
Epoch: 33, Training Loss: 0.338400, Validation Loss: 0.385812, Training Accuracy: 0.938936, Validation Accuracy: 0.900840
EarlyStopping counter: 8 out of 10
Epoch: 34, Training Loss: 0.343287, Validation Loss: 0.387951, Training Accuracy: 0.938126, Validation Accuracy: 0.898599
EarlyStopping counter: 9 out of 10
Epoch: 35, Training Loss: 0.343855, Validation Loss: 0.385894, Training Accuracy: 0.936881, Validation Accuracy: 0.898786
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 35
Ended Training Cycle
backbone.blocks.5.4._expand_conv
[1403, 1375, 846, 1077, 203, 210, 1490, 10, 1288, 138, 727, 1589, 577, 1613, 1266, 1332, 1461, 341, 212, 288, 1180, 1052, 744, 552, 13, 456, 150, 772, 1526, 645, 151, 1340, 944, 1016, 869, 1316, 1424, 311, 856, 1485, 1561, 1144, 1176, 355, 107, 1069, 1209, 917, 628, 442, 908, 741, 1388, 624, 1491, 83, 54, 407, 278, 587, 918, 352, 824, 964, 482, 1342, 1592, 1614, 1009, 1586, 666, 1289, 275, 30, 199, 511, 97, 940, 318, 1121, 268, 524, 325, 358, 185, 231, 437, 279, 481, 786, 143, 688, 1433, 1232, 1142, 429, 175, 1313, 960, 423, 882, 1030, 178, 1560, 156, 1576, 28, 893, 121, 85, 896, 850, 64, 1577, 1174, 1373, 433, 1402, 766, 474, 1314, 1139, 1537, 1519, 274, 1237, 181, 1135, 1610, 1621, 259, 978, 816, 1213, 516, 1029, 461, 877, 1431, 1260, 1602, 1616, 1182, 673, 789, 324, 965, 1218, 1441, 693, 366, 756, 1303, 1254, 1024, 749, 1339, 1222, 315, 1004, 247, 519, 1597, 269]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.4._expand_conv (Conv2d(177, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.4._expand_conv (Conv2d(177, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
[1] prune_out_channels on backbone.blocks.5.4._expand_conv (Conv2d(177, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.4._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[2] prune_out_channels on backbone.blocks.5.4._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_80(HardtanhBackward0), #idxs=164
[3] prune_out_channels on _ElementWiseOp_80(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)), #idxs=164
[4] prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)) => prune_out_channels on backbone.blocks.5.4._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[5] prune_out_channels on backbone.blocks.5.4._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_79(HardtanhBackward0), #idxs=164
[6] prune_out_channels on _ElementWiseOp_79(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.4._project_conv (Conv2d(1468, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.4._expand_conv
15
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.4._depthwise_conv
14
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
backbone.blocks.5.4._depthwise_conv
[477, 1267, 158, 180, 761, 869, 308, 666, 1397, 256, 858, 503, 974, 868, 1060, 1072, 494, 351, 296, 1430, 433, 233, 646, 160, 255, 1039, 553, 47, 1111, 1142, 1266, 1356, 598, 57, 307, 437, 604, 226, 632, 1105, 205, 1128, 755, 668, 993, 281, 309, 877, 1206, 1116, 657, 14, 654, 1219, 1016, 1086, 156, 960, 987, 1162, 406, 751, 19, 585, 894, 943, 611, 600, 595, 917, 1368, 451, 361, 1246, 763, 224, 1431, 175, 387, 1456, 1098, 736, 495, 1245, 796, 1234, 1251, 304, 1043, 43, 348, 1364, 1002, 574, 1274, 429, 813, 1159, 111, 153, 404, 1051, 1189, 1211, 136, 1031, 1310, 623, 904, 124, 127, 1318, 1258, 1383, 651, 902, 953, 51, 157, 1414, 466, 403, 347, 548, 996, 1323, 1429, 712, 33, 1375, 1186, 589, 1106, 339, 814, 49, 1231, 968, 908, 1381, 1070, 890, 310, 1084, 321, 1407, 737]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)), #idxs=147
[1] prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on _ElementWiseOp_80(HardtanhBackward0), #idxs=147
[2] prune_out_channels on backbone.blocks.5.4._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.4._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[3] prune_out_channels on backbone.blocks.5.4._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_79(HardtanhBackward0), #idxs=147
[4] prune_out_channels on _ElementWiseOp_79(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.4._project_conv (Conv2d(1321, 177, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
[5] prune_out_channels on _ElementWiseOp_80(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.4._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[6] prune_out_channels on backbone.blocks.5.4._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.4._expand_conv (Conv2d(177, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.4._depthwise_conv
14
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.4._expand_conv
15
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
backbone.blocks.5.4._project_conv
[130, 35, 160, 37, 158, 42, 149, 148, 146, 46, 144, 140, 53, 138, 134, 132, 141, 129]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(1321, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(1321, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[1] prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(1321, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[2] prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_9(AddBackward0), #idxs=18
[3] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on _ElementWiseOp_10(AddBackward0), #idxs=18
[4] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on _ElementWiseOp_8(AddBackward0), #idxs=18
[5] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_in_channels on backbone.blocks.5.5._expand_conv (Conv2d(159, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[6] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[7] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on _ElementWiseOp_7(AddBackward0), #idxs=18
[8] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_in_channels on backbone.blocks.5.6._expand_conv (Conv2d(159, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[9] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[10] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on _ElementWiseOp_6(AddBackward0), #idxs=18
[11] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_in_channels on backbone.blocks.5.7._expand_conv (Conv2d(159, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[12] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[13] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_in_channels on backbone.blocks.6.0._expand_conv (Conv2d(159, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[14] prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(1632, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[15] prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(1632, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[16] prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(1632, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[17] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[18] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on _ElementWiseOp_11(AddBackward0), #idxs=18
[19] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_in_channels on backbone.blocks.5.4._expand_conv (Conv2d(159, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[20] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[21] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on _ElementWiseOp_12(AddBackward0), #idxs=18
[22] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_in_channels on backbone.blocks.5.3._expand_conv (Conv2d(159, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[23] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[24] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=18
[25] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_in_channels on backbone.blocks.5.2._expand_conv (Conv2d(159, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[26] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(777, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[27] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.5.1._expand_conv (Conv2d(159, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[28] prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(1321, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[29] prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(1321, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
[30] prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(159, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(1321, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=18
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.4._project_conv
13
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True, False,  True,  True,  True, False,  True,
        False, False,  True,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([177])
torch.Size([159])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.7._project_conv
4
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True, False,  True,  True,  True, False,  True,
        False, False,  True,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([177])
torch.Size([159])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.6._project_conv
7
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True, False,  True,  True,  True, False,  True,
        False, False,  True,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([177])
torch.Size([159])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.5._project_conv
10
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True, False,  True,  True,  True, False,  True,
        False, False,  True,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([177])
torch.Size([159])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.0._project_conv
25
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True, False,  True,  True,  True, False,  True,
        False, False,  True,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([177])
torch.Size([159])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.1._project_conv
22
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True, False,  True,  True,  True, False,  True,
        False, False,  True,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([177])
torch.Size([159])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.2._project_conv
19
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True, False,  True,  True,  True, False,  True,
        False, False,  True,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([177])
torch.Size([159])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.3._project_conv
16
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False,  True, False,  True,  True,
         True,  True, False,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True, False,  True, False,  True,  True,  True, False,  True,
        False, False,  True,  True, False,  True, False,  True, False, False,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True])
torch.Size([177])
torch.Size([159])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 83, 10, 10]          45,069          45,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 777, 5, 5]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 777, 5, 5]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 159, 5, 5]         123,543         123,543
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 159, 5, 5]             318             318
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1321, 5, 5]         210,039         210,039
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 159, 5, 5]         210,039         210,039
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 159, 5, 5]             318             318
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1321, 5, 5]         210,039         210,039
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 159, 5, 5]         210,039         210,039
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 159, 5, 5]             318             318
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1321, 5, 5]         210,039         210,039
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 159, 5, 5]         210,039         210,039
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 159, 5, 5]             318             318
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1321, 5, 5]         210,039         210,039
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 159, 5, 5]         210,039         210,039
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 159, 5, 5]             318             318
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1632, 5, 5]         259,488         259,488
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 159, 5, 5]         259,488         259,488
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 159, 5, 5]             318             318
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         259,488         259,488
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 159, 5, 5]         259,488         259,488
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 159, 5, 5]             318             318
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         259,488         259,488
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 159, 5, 5]         259,488         259,488
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 159, 5, 5]             318             318
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         259,488         259,488
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 6,692,031
Trainable params: 6,692,031
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.391155, Validation Loss: 0.471610, Training Accuracy: 0.913601, Validation Accuracy: 0.860878
Validation loss decreased (inf --> 0.471610).  Saving model ...
Epoch: 2, Training Loss: 0.376459, Validation Loss: 0.483189, Training Accuracy: 0.921071, Validation Accuracy: 0.853408
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.371462, Validation Loss: 0.519529, Training Accuracy: 0.922938, Validation Accuracy: 0.843324
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.373166, Validation Loss: 0.404365, Training Accuracy: 0.921133, Validation Accuracy: 0.890570
Validation loss decreased (0.471610 --> 0.404365).  Saving model ...
Epoch: 5, Training Loss: 0.372779, Validation Loss: 0.450761, Training Accuracy: 0.922378, Validation Accuracy: 0.871709
EarlyStopping counter: 1 out of 10
Epoch: 6, Training Loss: 0.367909, Validation Loss: 0.502903, Training Accuracy: 0.923623, Validation Accuracy: 0.845938
EarlyStopping counter: 2 out of 10
Epoch: 7, Training Loss: 0.368556, Validation Loss: 0.671527, Training Accuracy: 0.922191, Validation Accuracy: 0.783380
EarlyStopping counter: 3 out of 10
Epoch: 8, Training Loss: 0.366386, Validation Loss: 0.454791, Training Accuracy: 0.922938, Validation Accuracy: 0.864613
Epoch 00008: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 9, Training Loss: 0.348727, Validation Loss: 0.388238, Training Accuracy: 0.931653, Validation Accuracy: 0.896919
Validation loss decreased (0.404365 --> 0.388238).  Saving model ...
Epoch: 10, Training Loss: 0.346257, Validation Loss: 0.391596, Training Accuracy: 0.935512, Validation Accuracy: 0.901214
EarlyStopping counter: 1 out of 10
Epoch: 11, Training Loss: 0.343164, Validation Loss: 0.389236, Training Accuracy: 0.934392, Validation Accuracy: 0.899160
EarlyStopping counter: 2 out of 10
Epoch: 12, Training Loss: 0.341781, Validation Loss: 0.394660, Training Accuracy: 0.938375, Validation Accuracy: 0.894118
EarlyStopping counter: 3 out of 10
Epoch: 13, Training Loss: 0.345245, Validation Loss: 0.389210, Training Accuracy: 0.935014, Validation Accuracy: 0.898226
Epoch 00013: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 4 out of 10
Epoch: 14, Training Loss: 0.347723, Validation Loss: 0.385070, Training Accuracy: 0.934641, Validation Accuracy: 0.900467
Validation loss decreased (0.388238 --> 0.385070).  Saving model ...
Epoch: 15, Training Loss: 0.340644, Validation Loss: 0.385613, Training Accuracy: 0.938251, Validation Accuracy: 0.900840
EarlyStopping counter: 1 out of 10
Epoch: 16, Training Loss: 0.337232, Validation Loss: 0.387580, Training Accuracy: 0.937193, Validation Accuracy: 0.900280
EarlyStopping counter: 2 out of 10
Epoch: 17, Training Loss: 0.343029, Validation Loss: 0.384795, Training Accuracy: 0.937006, Validation Accuracy: 0.900840
Epoch 00017: reducing learning rate of group 0 to 1.0000e-08.
Validation loss decreased (0.385070 --> 0.384795).  Saving model ...
Epoch: 18, Training Loss: 0.338803, Validation Loss: 0.386105, Training Accuracy: 0.940367, Validation Accuracy: 0.901961
EarlyStopping counter: 1 out of 10
Epoch: 19, Training Loss: 0.338457, Validation Loss: 0.387680, Training Accuracy: 0.939122, Validation Accuracy: 0.901587
EarlyStopping counter: 2 out of 10
Epoch: 20, Training Loss: 0.341660, Validation Loss: 0.386407, Training Accuracy: 0.937815, Validation Accuracy: 0.900840
EarlyStopping counter: 3 out of 10
Epoch: 21, Training Loss: 0.343874, Validation Loss: 0.386610, Training Accuracy: 0.937255, Validation Accuracy: 0.900654
EarlyStopping counter: 4 out of 10
Epoch: 22, Training Loss: 0.348621, Validation Loss: 0.384233, Training Accuracy: 0.934080, Validation Accuracy: 0.901401
Validation loss decreased (0.384795 --> 0.384233).  Saving model ...
Epoch: 23, Training Loss: 0.342314, Validation Loss: 0.387890, Training Accuracy: 0.937317, Validation Accuracy: 0.901401
EarlyStopping counter: 1 out of 10
Epoch: 24, Training Loss: 0.345683, Validation Loss: 0.385214, Training Accuracy: 0.937504, Validation Accuracy: 0.903081
EarlyStopping counter: 2 out of 10
Epoch: 25, Training Loss: 0.335423, Validation Loss: 0.388395, Training Accuracy: 0.940367, Validation Accuracy: 0.902708
EarlyStopping counter: 3 out of 10
Epoch: 26, Training Loss: 0.340894, Validation Loss: 0.386739, Training Accuracy: 0.936695, Validation Accuracy: 0.901774
EarlyStopping counter: 4 out of 10
Epoch: 27, Training Loss: 0.347461, Validation Loss: 0.384880, Training Accuracy: 0.933582, Validation Accuracy: 0.901961
EarlyStopping counter: 5 out of 10
Epoch: 28, Training Loss: 0.342996, Validation Loss: 0.386295, Training Accuracy: 0.936383, Validation Accuracy: 0.900467
EarlyStopping counter: 6 out of 10
Epoch: 29, Training Loss: 0.340522, Validation Loss: 0.385041, Training Accuracy: 0.936134, Validation Accuracy: 0.900093
EarlyStopping counter: 7 out of 10
Epoch: 30, Training Loss: 0.339614, Validation Loss: 0.385040, Training Accuracy: 0.937815, Validation Accuracy: 0.901961
EarlyStopping counter: 8 out of 10
Epoch: 31, Training Loss: 0.346893, Validation Loss: 0.384099, Training Accuracy: 0.934392, Validation Accuracy: 0.900280
Validation loss decreased (0.384233 --> 0.384099).  Saving model ...
Epoch: 32, Training Loss: 0.340527, Validation Loss: 0.388016, Training Accuracy: 0.937193, Validation Accuracy: 0.900654
EarlyStopping counter: 1 out of 10
Epoch: 33, Training Loss: 0.340153, Validation Loss: 0.385779, Training Accuracy: 0.937504, Validation Accuracy: 0.901401
EarlyStopping counter: 2 out of 10
Epoch: 34, Training Loss: 0.343815, Validation Loss: 0.387118, Training Accuracy: 0.937442, Validation Accuracy: 0.900280
EarlyStopping counter: 3 out of 10
Epoch: 35, Training Loss: 0.341616, Validation Loss: 0.384495, Training Accuracy: 0.937006, Validation Accuracy: 0.901027
EarlyStopping counter: 4 out of 10
Epoch: 36, Training Loss: 0.341043, Validation Loss: 0.386364, Training Accuracy: 0.937691, Validation Accuracy: 0.901214
EarlyStopping counter: 5 out of 10
Epoch: 37, Training Loss: 0.339921, Validation Loss: 0.384293, Training Accuracy: 0.939247, Validation Accuracy: 0.901214
EarlyStopping counter: 6 out of 10
Epoch: 38, Training Loss: 0.344741, Validation Loss: 0.386115, Training Accuracy: 0.936259, Validation Accuracy: 0.900280
EarlyStopping counter: 7 out of 10
Epoch: 39, Training Loss: 0.347967, Validation Loss: 0.386423, Training Accuracy: 0.937379, Validation Accuracy: 0.901774
EarlyStopping counter: 8 out of 10
Epoch: 40, Training Loss: 0.344206, Validation Loss: 0.386510, Training Accuracy: 0.934267, Validation Accuracy: 0.901587
EarlyStopping counter: 9 out of 10
Epoch: 41, Training Loss: 0.341233, Validation Loss: 0.386281, Training Accuracy: 0.938438, Validation Accuracy: 0.901027
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 41
Ended Training Cycle
backbone.blocks.5.5._expand_conv
[910, 962, 1343, 1592, 2, 1425, 313, 1201, 85, 563, 1622, 1335, 1378, 724, 225, 1179, 1421, 319, 384, 257, 471, 1588, 1449, 292, 102, 1146, 1198, 1304, 828, 808, 499, 379, 311, 687, 562, 1436, 581, 928, 516, 1480, 1305, 615, 388, 89, 264, 149, 1352, 1383, 1549, 456, 571, 923, 1407, 1296, 795, 228, 252, 1072, 64, 417, 614, 165, 867, 1081, 761, 406, 1625, 1163, 834, 96, 634, 1553, 1037, 927, 482, 346, 431, 1260, 1218, 1110, 1164, 872, 811, 195, 1447, 831, 161, 286, 591, 326, 915, 1056, 1220, 1114, 1284, 1104, 881, 544, 1422, 172, 1212, 869, 1505, 1573, 1097, 803, 737, 993, 605, 1477, 29, 449, 1047, 265, 197, 1399, 990, 1359, 438, 280, 887, 850, 507, 193, 179, 1375, 1145, 1380, 619, 702, 1598, 1213, 487, 569, 965, 1001, 10, 1595, 1280, 1381, 1565, 56, 215, 1568, 1463, 1415, 249, 1291, 284, 117, 1181, 667, 1175, 1231, 60, 774, 1346, 628, 959, 1292, 1129, 1550, 198, 151]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.5._expand_conv (Conv2d(159, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.5._expand_conv (Conv2d(159, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
[1] prune_out_channels on backbone.blocks.5.5._expand_conv (Conv2d(159, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.5._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[2] prune_out_channels on backbone.blocks.5.5._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_82(HardtanhBackward0), #idxs=164
[3] prune_out_channels on _ElementWiseOp_82(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)), #idxs=164
[4] prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)) => prune_out_channels on backbone.blocks.5.5._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[5] prune_out_channels on backbone.blocks.5.5._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_81(HardtanhBackward0), #idxs=164
[6] prune_out_channels on _ElementWiseOp_81(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.5._project_conv (Conv2d(1468, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.5._expand_conv
12
tensor([ True,  True, False,  ...,  True,  True,  True])
torch.Size([1632])
torch.Size([1468])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.5._depthwise_conv
11
tensor([ True,  True, False,  ...,  True,  True,  True])
torch.Size([1632])
torch.Size([1468])
backbone.blocks.5.5._depthwise_conv
[386, 1246, 438, 469, 445, 237, 670, 879, 1390, 788, 740, 1043, 257, 769, 1138, 625, 624, 295, 1134, 895, 1378, 415, 1211, 7, 583, 263, 1368, 1045, 1126, 1421, 750, 1110, 103, 1389, 45, 335, 654, 862, 1373, 464, 1127, 1156, 294, 705, 770, 1209, 703, 402, 334, 143, 968, 5, 27, 1082, 224, 1152, 1099, 868, 931, 1273, 1359, 1265, 1415, 884, 626, 76, 161, 898, 685, 1330, 16, 1308, 844, 711, 876, 761, 238, 1144, 960, 1024, 327, 561, 1078, 457, 1055, 1301, 501, 899, 838, 834, 80, 845, 1015, 853, 689, 599, 375, 418, 765, 1274, 801, 118, 1151, 453, 264, 509, 372, 882, 414, 68, 785, 322, 843, 1174, 940, 1289, 306, 1338, 129, 548, 1337, 94, 54, 739, 1346, 1130, 132, 1040, 888, 661, 374, 1181, 974, 90, 1467, 1345, 1305, 754, 300, 409, 938, 886, 530, 8, 637, 1176, 279]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)), #idxs=147
[1] prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on _ElementWiseOp_82(HardtanhBackward0), #idxs=147
[2] prune_out_channels on backbone.blocks.5.5._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.5._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[3] prune_out_channels on backbone.blocks.5.5._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_81(HardtanhBackward0), #idxs=147
[4] prune_out_channels on _ElementWiseOp_81(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.5._project_conv (Conv2d(1321, 159, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
[5] prune_out_channels on _ElementWiseOp_82(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.5._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[6] prune_out_channels on backbone.blocks.5.5._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.5._expand_conv (Conv2d(159, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.5._depthwise_conv
11
tensor([ True,  True,  True,  ...,  True,  True, False])
torch.Size([1468])
torch.Size([1321])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.5._expand_conv
12
tensor([ True,  True,  True,  ...,  True,  True, False])
torch.Size([1468])
torch.Size([1321])
backbone.blocks.5.5._project_conv
[69, 24, 94, 89, 27, 87, 29, 86, 31, 76, 34, 23, 150, 66, 65, 148]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(1321, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(1321, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[1] prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(1321, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[2] prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_8(AddBackward0), #idxs=16
[3] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on _ElementWiseOp_9(AddBackward0), #idxs=16
[4] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on _ElementWiseOp_7(AddBackward0), #idxs=16
[5] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_in_channels on backbone.blocks.5.6._expand_conv (Conv2d(143, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[6] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[7] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on _ElementWiseOp_6(AddBackward0), #idxs=16
[8] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_in_channels on backbone.blocks.5.7._expand_conv (Conv2d(143, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[9] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[10] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_in_channels on backbone.blocks.6.0._expand_conv (Conv2d(143, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[11] prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(1632, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[12] prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(1632, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[13] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[14] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on _ElementWiseOp_10(AddBackward0), #idxs=16
[15] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_in_channels on backbone.blocks.5.5._expand_conv (Conv2d(143, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[16] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[17] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on _ElementWiseOp_11(AddBackward0), #idxs=16
[18] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_in_channels on backbone.blocks.5.4._expand_conv (Conv2d(143, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[19] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[20] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on _ElementWiseOp_12(AddBackward0), #idxs=16
[21] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_in_channels on backbone.blocks.5.3._expand_conv (Conv2d(143, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[22] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[23] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=16
[24] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_in_channels on backbone.blocks.5.2._expand_conv (Conv2d(143, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[25] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(777, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[26] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.5.1._expand_conv (Conv2d(143, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[27] prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(1321, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[28] prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(1321, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[29] prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(1321, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
[30] prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(143, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(1321, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=16
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.5._project_conv
10
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([159])
torch.Size([143])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.7._project_conv
4
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([159])
torch.Size([143])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.6._project_conv
7
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([159])
torch.Size([143])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.0._project_conv
25
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([159])
torch.Size([143])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.1._project_conv
22
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([159])
torch.Size([143])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.2._project_conv
19
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([159])
torch.Size([143])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.3._project_conv
16
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([159])
torch.Size([143])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.4._project_conv
13
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True, False, False,  True,  True, False,  True, False,
         True, False,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True,  True, False,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False, False,  True, False,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([159])
torch.Size([143])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 83, 10, 10]          45,069          45,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 777, 5, 5]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 777, 5, 5]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 143, 5, 5]         111,111         111,111
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 143, 5, 5]             286             286
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1321, 5, 5]         188,903         188,903
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 143, 5, 5]         188,903         188,903
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 143, 5, 5]             286             286
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1321, 5, 5]         188,903         188,903
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 143, 5, 5]         188,903         188,903
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 143, 5, 5]             286             286
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1321, 5, 5]         188,903         188,903
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 143, 5, 5]         188,903         188,903
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 143, 5, 5]             286             286
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1321, 5, 5]         188,903         188,903
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 143, 5, 5]         188,903         188,903
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 143, 5, 5]             286             286
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1321, 5, 5]         188,903         188,903
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 143, 5, 5]         188,903         188,903
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 143, 5, 5]             286             286
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1632, 5, 5]         233,376         233,376
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 143, 5, 5]         233,376         233,376
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 143, 5, 5]             286             286
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         233,376         233,376
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 143, 5, 5]         233,376         233,376
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 143, 5, 5]             286             286
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         233,376         233,376
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 6,229,506
Trainable params: 6,229,506
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.375723, Validation Loss: 0.400932, Training Accuracy: 0.921257, Validation Accuracy: 0.893184
Validation loss decreased (inf --> 0.400932).  Saving model ...
Epoch: 2, Training Loss: 0.367639, Validation Loss: 0.460789, Training Accuracy: 0.920573, Validation Accuracy: 0.867227
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.365008, Validation Loss: 0.445432, Training Accuracy: 0.925117, Validation Accuracy: 0.878058
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.365157, Validation Loss: 0.489023, Training Accuracy: 0.924556, Validation Accuracy: 0.854902
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.374987, Validation Loss: 0.494924, Training Accuracy: 0.920884, Validation Accuracy: 0.844631
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.352607, Validation Loss: 0.387697, Training Accuracy: 0.930345, Validation Accuracy: 0.897292
Validation loss decreased (0.400932 --> 0.387697).  Saving model ...
Epoch: 7, Training Loss: 0.347681, Validation Loss: 0.393339, Training Accuracy: 0.934890, Validation Accuracy: 0.895425
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.346868, Validation Loss: 0.391306, Training Accuracy: 0.934267, Validation Accuracy: 0.896172
EarlyStopping counter: 2 out of 10
Epoch: 9, Training Loss: 0.343906, Validation Loss: 0.393824, Training Accuracy: 0.936321, Validation Accuracy: 0.898039
EarlyStopping counter: 3 out of 10
Epoch: 10, Training Loss: 0.340249, Validation Loss: 0.386507, Training Accuracy: 0.938687, Validation Accuracy: 0.898973
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.387697 --> 0.386507).  Saving model ...
Epoch: 11, Training Loss: 0.340900, Validation Loss: 0.386164, Training Accuracy: 0.935761, Validation Accuracy: 0.897666
Validation loss decreased (0.386507 --> 0.386164).  Saving model ...
Epoch: 12, Training Loss: 0.345460, Validation Loss: 0.387036, Training Accuracy: 0.937006, Validation Accuracy: 0.897292
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.343597, Validation Loss: 0.387871, Training Accuracy: 0.936944, Validation Accuracy: 0.898599
EarlyStopping counter: 2 out of 10
Epoch: 14, Training Loss: 0.342130, Validation Loss: 0.388242, Training Accuracy: 0.939060, Validation Accuracy: 0.898226
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 3 out of 10
Epoch: 15, Training Loss: 0.348630, Validation Loss: 0.385940, Training Accuracy: 0.936383, Validation Accuracy: 0.899346
Validation loss decreased (0.386164 --> 0.385940).  Saving model ...
Epoch: 16, Training Loss: 0.346585, Validation Loss: 0.387370, Training Accuracy: 0.935512, Validation Accuracy: 0.898226
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.346603, Validation Loss: 0.387132, Training Accuracy: 0.937504, Validation Accuracy: 0.899907
EarlyStopping counter: 2 out of 10
Epoch: 18, Training Loss: 0.341800, Validation Loss: 0.387431, Training Accuracy: 0.938438, Validation Accuracy: 0.899160
EarlyStopping counter: 3 out of 10
Epoch: 19, Training Loss: 0.342330, Validation Loss: 0.387262, Training Accuracy: 0.938687, Validation Accuracy: 0.897666
EarlyStopping counter: 4 out of 10
Epoch: 20, Training Loss: 0.344240, Validation Loss: 0.388005, Training Accuracy: 0.936321, Validation Accuracy: 0.898413
EarlyStopping counter: 5 out of 10
Epoch: 21, Training Loss: 0.344421, Validation Loss: 0.385174, Training Accuracy: 0.935574, Validation Accuracy: 0.898786
Validation loss decreased (0.385940 --> 0.385174).  Saving model ...
Epoch: 22, Training Loss: 0.339815, Validation Loss: 0.387129, Training Accuracy: 0.936570, Validation Accuracy: 0.898599
EarlyStopping counter: 1 out of 10
Epoch: 23, Training Loss: 0.339296, Validation Loss: 0.387293, Training Accuracy: 0.938687, Validation Accuracy: 0.899346
EarlyStopping counter: 2 out of 10
Epoch: 24, Training Loss: 0.340899, Validation Loss: 0.386433, Training Accuracy: 0.938998, Validation Accuracy: 0.897852
EarlyStopping counter: 3 out of 10
Epoch: 25, Training Loss: 0.338427, Validation Loss: 0.388395, Training Accuracy: 0.937628, Validation Accuracy: 0.898786
EarlyStopping counter: 4 out of 10
Epoch: 26, Training Loss: 0.340768, Validation Loss: 0.386253, Training Accuracy: 0.937940, Validation Accuracy: 0.898599
EarlyStopping counter: 5 out of 10
Epoch: 27, Training Loss: 0.345591, Validation Loss: 0.387034, Training Accuracy: 0.937317, Validation Accuracy: 0.899346
EarlyStopping counter: 6 out of 10
Epoch: 28, Training Loss: 0.344310, Validation Loss: 0.388172, Training Accuracy: 0.938687, Validation Accuracy: 0.899346
EarlyStopping counter: 7 out of 10
Epoch: 29, Training Loss: 0.340969, Validation Loss: 0.386652, Training Accuracy: 0.937255, Validation Accuracy: 0.899346
EarlyStopping counter: 8 out of 10
Epoch: 30, Training Loss: 0.337448, Validation Loss: 0.388038, Training Accuracy: 0.938749, Validation Accuracy: 0.899533
EarlyStopping counter: 9 out of 10
Epoch: 31, Training Loss: 0.335633, Validation Loss: 0.388548, Training Accuracy: 0.938438, Validation Accuracy: 0.899160
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 31
Ended Training Cycle
backbone.blocks.5.6._expand_conv
[284, 1150, 385, 795, 72, 1119, 1277, 312, 886, 82, 1586, 8, 515, 539, 213, 1243, 735, 1439, 1203, 1117, 730, 527, 637, 937, 340, 652, 392, 711, 1260, 691, 426, 363, 300, 79, 1156, 1438, 428, 1214, 57, 4, 748, 315, 1158, 959, 238, 1536, 169, 1462, 38, 1354, 752, 717, 629, 1461, 15, 1466, 1090, 150, 1447, 589, 640, 1479, 6, 905, 1097, 960, 995, 956, 1528, 448, 841, 1062, 1267, 1315, 1181, 1454, 267, 820, 162, 853, 544, 762, 565, 1231, 785, 381, 848, 1575, 832, 257, 388, 1086, 155, 1498, 902, 1106, 575, 789, 551, 406, 809, 1283, 634, 1180, 1149, 614, 950, 99, 648, 1213, 1511, 154, 1525, 482, 1488, 1050, 127, 516, 1178, 893, 52, 1505, 538, 148, 39, 1296, 1207, 865, 674, 1109, 263, 437, 71, 873, 957, 705, 1573, 1623, 1408, 76, 1478, 1222, 160, 750, 152, 180, 1384, 596, 384, 1094, 119, 999, 1533, 1403, 28, 73, 856, 759, 1005, 1258, 1245, 7, 657, 593]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.6._expand_conv (Conv2d(143, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.6._expand_conv (Conv2d(143, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
[1] prune_out_channels on backbone.blocks.5.6._expand_conv (Conv2d(143, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.6._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[2] prune_out_channels on backbone.blocks.5.6._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_84(HardtanhBackward0), #idxs=164
[3] prune_out_channels on _ElementWiseOp_84(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)), #idxs=164
[4] prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)) => prune_out_channels on backbone.blocks.5.6._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[5] prune_out_channels on backbone.blocks.5.6._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_83(HardtanhBackward0), #idxs=164
[6] prune_out_channels on _ElementWiseOp_83(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.6._project_conv (Conv2d(1468, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.6._expand_conv
9
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.6._depthwise_conv
8
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
backbone.blocks.5.6._depthwise_conv
[802, 483, 432, 576, 752, 1373, 1411, 448, 170, 819, 396, 1070, 1213, 803, 1332, 473, 1233, 789, 470, 115, 1067, 100, 464, 872, 538, 572, 1336, 1185, 307, 410, 316, 27, 558, 549, 1138, 7, 436, 521, 1237, 826, 678, 948, 1170, 1388, 358, 646, 927, 577, 1040, 1050, 342, 1022, 1036, 1365, 1455, 1368, 937, 755, 1002, 179, 939, 426, 1259, 758, 636, 319, 835, 1296, 494, 654, 293, 917, 1189, 31, 82, 1312, 631, 1299, 326, 1397, 626, 1156, 828, 614, 74, 1019, 808, 309, 836, 294, 876, 1226, 1315, 520, 589, 1436, 1328, 46, 64, 940, 482, 18, 989, 1251, 280, 1248, 1435, 1268, 901, 139, 1194, 844, 1389, 147, 1091, 898, 153, 1269, 990, 1243, 134, 623, 110, 1132, 785, 1144, 321, 653, 643, 102, 887, 1105, 1440, 1134, 457, 586, 960, 107, 339, 1168, 15, 706, 516, 969, 1119, 907, 1079]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)), #idxs=147
[1] prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on _ElementWiseOp_84(HardtanhBackward0), #idxs=147
[2] prune_out_channels on backbone.blocks.5.6._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.6._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[3] prune_out_channels on backbone.blocks.5.6._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_83(HardtanhBackward0), #idxs=147
[4] prune_out_channels on _ElementWiseOp_83(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.6._project_conv (Conv2d(1321, 143, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
[5] prune_out_channels on _ElementWiseOp_84(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.6._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[6] prune_out_channels on backbone.blocks.5.6._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.6._expand_conv (Conv2d(143, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.6._depthwise_conv
8
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.6._expand_conv
9
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
backbone.blocks.5.6._project_conv
[70, 29, 30, 127, 126, 124, 44, 50, 111, 56, 57, 58, 110, 108, 67]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(1321, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(1321, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[1] prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(1321, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[2] prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_7(AddBackward0), #idxs=15
[3] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on _ElementWiseOp_8(AddBackward0), #idxs=15
[4] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on _ElementWiseOp_6(AddBackward0), #idxs=15
[5] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_in_channels on backbone.blocks.5.7._expand_conv (Conv2d(128, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[6] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[7] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_in_channels on backbone.blocks.6.0._expand_conv (Conv2d(128, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[8] prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(1632, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[9] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[10] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on _ElementWiseOp_9(AddBackward0), #idxs=15
[11] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_in_channels on backbone.blocks.5.6._expand_conv (Conv2d(128, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[12] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[13] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on _ElementWiseOp_10(AddBackward0), #idxs=15
[14] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_in_channels on backbone.blocks.5.5._expand_conv (Conv2d(128, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[15] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[16] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on _ElementWiseOp_11(AddBackward0), #idxs=15
[17] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_in_channels on backbone.blocks.5.4._expand_conv (Conv2d(128, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[18] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[19] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on _ElementWiseOp_12(AddBackward0), #idxs=15
[20] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_in_channels on backbone.blocks.5.3._expand_conv (Conv2d(128, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[21] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[22] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=15
[23] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_in_channels on backbone.blocks.5.2._expand_conv (Conv2d(128, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[24] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(777, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[25] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.5.1._expand_conv (Conv2d(128, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[26] prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(1321, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[27] prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(1321, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[28] prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(1321, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[29] prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(1321, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
[30] prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(1321, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=15
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.6._project_conv
7
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([143])
torch.Size([128])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.7._project_conv
4
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([143])
torch.Size([128])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.0._project_conv
25
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([143])
torch.Size([128])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.1._project_conv
22
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([143])
torch.Size([128])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.2._project_conv
19
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([143])
torch.Size([128])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.3._project_conv
16
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([143])
torch.Size([128])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.4._project_conv
13
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([143])
torch.Size([128])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.5._project_conv
10
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True,  True,  True, False, False, False,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True])
torch.Size([143])
torch.Size([128])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 83, 10, 10]          45,069          45,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 777, 5, 5]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 777, 5, 5]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 128, 5, 5]          99,456          99,456
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 128, 5, 5]             256             256
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1321, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 128, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 128, 5, 5]             256             256
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1321, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 128, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 128, 5, 5]             256             256
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1321, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 128, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 128, 5, 5]             256             256
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1321, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 128, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 128, 5, 5]             256             256
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1321, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 128, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 128, 5, 5]             256             256
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1321, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 128, 5, 5]         169,088         169,088
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 128, 5, 5]             256             256
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1632, 5, 5]         208,896         208,896
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1632, 5, 5]          40,800          40,800
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 128, 5, 5]         208,896         208,896
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 128, 5, 5]             256             256
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         208,896         208,896
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 5,808,426
Trainable params: 5,808,426
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.371716, Validation Loss: 0.535722, Training Accuracy: 0.924992, Validation Accuracy: 0.825770
Validation loss decreased (inf --> 0.535722).  Saving model ...
Epoch: 2, Training Loss: 0.370813, Validation Loss: 0.435176, Training Accuracy: 0.923063, Validation Accuracy: 0.874883
Validation loss decreased (0.535722 --> 0.435176).  Saving model ...
Epoch: 3, Training Loss: 0.371814, Validation Loss: 0.529388, Training Accuracy: 0.921942, Validation Accuracy: 0.836788
EarlyStopping counter: 1 out of 10
Epoch: 4, Training Loss: 0.371641, Validation Loss: 0.559621, Training Accuracy: 0.921320, Validation Accuracy: 0.820355
EarlyStopping counter: 2 out of 10
Epoch: 5, Training Loss: 0.372120, Validation Loss: 0.442194, Training Accuracy: 0.923996, Validation Accuracy: 0.869655
EarlyStopping counter: 3 out of 10
Epoch: 6, Training Loss: 0.369364, Validation Loss: 0.511503, Training Accuracy: 0.923249, Validation Accuracy: 0.843511
Epoch 00006: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 7, Training Loss: 0.357584, Validation Loss: 0.391714, Training Accuracy: 0.932088, Validation Accuracy: 0.899346
Validation loss decreased (0.435176 --> 0.391714).  Saving model ...
Epoch: 8, Training Loss: 0.347290, Validation Loss: 0.395188, Training Accuracy: 0.936197, Validation Accuracy: 0.898413
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.344559, Validation Loss: 0.384927, Training Accuracy: 0.937877, Validation Accuracy: 0.902334
Validation loss decreased (0.391714 --> 0.384927).  Saving model ...
Epoch: 10, Training Loss: 0.345543, Validation Loss: 0.384943, Training Accuracy: 0.933956, Validation Accuracy: 0.898413
EarlyStopping counter: 1 out of 10
Epoch: 11, Training Loss: 0.351822, Validation Loss: 0.393542, Training Accuracy: 0.934890, Validation Accuracy: 0.898413
Epoch 00011: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 2 out of 10
Epoch: 12, Training Loss: 0.342159, Validation Loss: 0.389574, Training Accuracy: 0.938500, Validation Accuracy: 0.899720
EarlyStopping counter: 3 out of 10
Epoch: 13, Training Loss: 0.340784, Validation Loss: 0.390323, Training Accuracy: 0.938313, Validation Accuracy: 0.899533
EarlyStopping counter: 4 out of 10
Epoch: 14, Training Loss: 0.350521, Validation Loss: 0.388134, Training Accuracy: 0.934641, Validation Accuracy: 0.898413
EarlyStopping counter: 5 out of 10
Epoch: 15, Training Loss: 0.346913, Validation Loss: 0.390674, Training Accuracy: 0.938189, Validation Accuracy: 0.899346
Epoch 00015: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 6 out of 10
Epoch: 16, Training Loss: 0.346212, Validation Loss: 0.390786, Training Accuracy: 0.938687, Validation Accuracy: 0.900280
EarlyStopping counter: 7 out of 10
Epoch: 17, Training Loss: 0.341369, Validation Loss: 0.388660, Training Accuracy: 0.938562, Validation Accuracy: 0.898599
EarlyStopping counter: 8 out of 10
Epoch: 18, Training Loss: 0.345164, Validation Loss: 0.390542, Training Accuracy: 0.937504, Validation Accuracy: 0.899533
EarlyStopping counter: 9 out of 10
Epoch: 19, Training Loss: 0.343948, Validation Loss: 0.389782, Training Accuracy: 0.936197, Validation Accuracy: 0.898786
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 19
Ended Training Cycle
backbone.blocks.5.7._expand_conv
[299, 1325, 1584, 594, 1578, 425, 1448, 20, 993, 924, 369, 1282, 94, 451, 610, 1451, 1190, 376, 1107, 1038, 572, 185, 1376, 437, 1003, 314, 1415, 1363, 973, 1549, 647, 1106, 78, 1469, 820, 1464, 1457, 825, 1367, 1181, 1317, 755, 1517, 1310, 1476, 63, 1033, 1489, 1561, 1192, 782, 954, 38, 1365, 579, 199, 107, 1467, 1388, 1374, 805, 1188, 1296, 1391, 768, 495, 203, 1103, 710, 937, 245, 799, 308, 346, 788, 796, 771, 977, 664, 718, 1341, 264, 908, 1222, 1077, 318, 1370, 1145, 1526, 1035, 903, 497, 890, 1441, 127, 1320, 354, 322, 353, 947, 674, 154, 679, 688, 1528, 1037, 818, 543, 787, 1138, 1408, 1202, 282, 1007, 362, 1087, 507, 824, 627, 481, 1381, 1405, 1250, 553, 88, 1301, 1567, 991, 623, 96, 1440, 1186, 128, 220, 32, 1151, 305, 30, 1252, 39, 1395, 989, 1439, 1157, 533, 1562, 54, 1623, 1353, 1564, 1432, 491, 1049, 930, 1399, 607, 551, 253, 366, 411, 1304, 1086, 402, 920]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.7._expand_conv (Conv2d(128, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.7._expand_conv (Conv2d(128, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
[1] prune_out_channels on backbone.blocks.5.7._expand_conv (Conv2d(128, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.7._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[2] prune_out_channels on backbone.blocks.5.7._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_86(HardtanhBackward0), #idxs=164
[3] prune_out_channels on _ElementWiseOp_86(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)), #idxs=164
[4] prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(1468, 1468, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1468, bias=False)) => prune_out_channels on backbone.blocks.5.7._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[5] prune_out_channels on backbone.blocks.5.7._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_85(HardtanhBackward0), #idxs=164
[6] prune_out_channels on _ElementWiseOp_85(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.7._project_conv (Conv2d(1468, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.7._expand_conv
6
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.7._depthwise_conv
5
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
backbone.blocks.5.7._depthwise_conv
[479, 1236, 968, 1039, 1011, 159, 542, 1304, 1450, 1163, 681, 242, 519, 257, 1277, 343, 699, 997, 384, 1458, 933, 1037, 74, 310, 1328, 218, 79, 50, 442, 81, 577, 1445, 412, 692, 428, 512, 1080, 352, 1344, 357, 126, 675, 405, 547, 209, 1214, 698, 1131, 1354, 725, 1137, 774, 992, 702, 1145, 483, 874, 432, 1409, 717, 346, 158, 784, 301, 162, 823, 441, 1290, 1193, 1142, 974, 713, 535, 13, 636, 1023, 456, 746, 232, 909, 1074, 803, 360, 1036, 1173, 1387, 1175, 89, 323, 217, 773, 1126, 860, 408, 1090, 684, 111, 288, 727, 380, 1078, 979, 388, 814, 253, 509, 1111, 658, 1424, 1095, 948, 254, 1022, 1447, 980, 656, 1462, 813, 82, 1412, 737, 203, 1451, 981, 1066, 832, 193, 1148, 710, 527, 590, 1194, 628, 865, 505, 1283, 434, 67, 570, 293, 289, 248, 1031, 1190, 1293, 1404, 685]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)), #idxs=147
[1] prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on _ElementWiseOp_86(HardtanhBackward0), #idxs=147
[2] prune_out_channels on backbone.blocks.5.7._depthwise_conv (Conv2d(1321, 1321, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.5.7._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[3] prune_out_channels on backbone.blocks.5.7._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_85(HardtanhBackward0), #idxs=147
[4] prune_out_channels on _ElementWiseOp_85(HardtanhBackward0) => prune_in_channels on backbone.blocks.5.7._project_conv (Conv2d(1321, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
[5] prune_out_channels on _ElementWiseOp_86(HardtanhBackward0) => prune_out_channels on backbone.blocks.5.7._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[6] prune_out_channels on backbone.blocks.5.7._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.7._expand_conv (Conv2d(128, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.5.7._depthwise_conv
5
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.7._expand_conv
6
tensor([True, True, True,  ..., True, True, True])
torch.Size([1468])
torch.Size([1321])
backbone.blocks.5.7._project_conv
[28, 17, 19, 106, 22, 75, 47, 45, 27, 74, 44, 94, 90]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(1321, 115, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(1321, 115, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[1] prune_out_channels on backbone.blocks.5.7._project_conv (Conv2d(1321, 115, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[2] prune_out_channels on backbone.blocks.5.7._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_6(AddBackward0), #idxs=13
[3] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_out_channels on _ElementWiseOp_7(AddBackward0), #idxs=13
[4] prune_out_channels on _ElementWiseOp_6(AddBackward0) => prune_in_channels on backbone.blocks.6.0._expand_conv (Conv2d(115, 1632, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[5] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[6] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_out_channels on _ElementWiseOp_8(AddBackward0), #idxs=13
[7] prune_out_channels on _ElementWiseOp_7(AddBackward0) => prune_in_channels on backbone.blocks.5.7._expand_conv (Conv2d(115, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[8] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[9] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_out_channels on _ElementWiseOp_9(AddBackward0), #idxs=13
[10] prune_out_channels on _ElementWiseOp_8(AddBackward0) => prune_in_channels on backbone.blocks.5.6._expand_conv (Conv2d(115, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[11] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[12] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_out_channels on _ElementWiseOp_10(AddBackward0), #idxs=13
[13] prune_out_channels on _ElementWiseOp_9(AddBackward0) => prune_in_channels on backbone.blocks.5.5._expand_conv (Conv2d(115, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[14] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[15] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_out_channels on _ElementWiseOp_11(AddBackward0), #idxs=13
[16] prune_out_channels on _ElementWiseOp_10(AddBackward0) => prune_in_channels on backbone.blocks.5.4._expand_conv (Conv2d(115, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[17] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[18] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_out_channels on _ElementWiseOp_12(AddBackward0), #idxs=13
[19] prune_out_channels on _ElementWiseOp_11(AddBackward0) => prune_in_channels on backbone.blocks.5.3._expand_conv (Conv2d(115, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[20] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[21] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=13
[22] prune_out_channels on _ElementWiseOp_12(AddBackward0) => prune_in_channels on backbone.blocks.5.2._expand_conv (Conv2d(115, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[23] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.0._project_conv (Conv2d(777, 115, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[24] prune_out_channels on backbone.blocks.5.0._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.blocks.5.1._expand_conv (Conv2d(115, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[25] prune_out_channels on backbone.blocks.5.1._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.1._project_conv (Conv2d(1321, 115, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[26] prune_out_channels on backbone.blocks.5.2._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.2._project_conv (Conv2d(1321, 115, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[27] prune_out_channels on backbone.blocks.5.3._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.3._project_conv (Conv2d(1321, 115, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[28] prune_out_channels on backbone.blocks.5.4._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.4._project_conv (Conv2d(1321, 115, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[29] prune_out_channels on backbone.blocks.5.5._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.5._project_conv (Conv2d(1321, 115, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
[30] prune_out_channels on backbone.blocks.5.6._bn2 (BatchNorm2d(115, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.5.6._project_conv (Conv2d(1321, 115, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=13
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.7._project_conv
4
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([128])
torch.Size([115])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.0._project_conv
25
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([128])
torch.Size([115])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.1._project_conv
22
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([128])
torch.Size([115])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.2._project_conv
19
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([128])
torch.Size([115])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.3._project_conv
16
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([128])
torch.Size([115])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.4._project_conv
13
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([128])
torch.Size([115])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.5._project_conv
10
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([128])
torch.Size([115])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.5.6._project_conv
7
tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True, False,  True, False,
         True,  True, False,  True,  True,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([128])
torch.Size([115])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 83, 10, 10]          45,069          45,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 777, 5, 5]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 777, 5, 5]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 115, 5, 5]          89,355          89,355
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1632, 5, 5]         187,680         187,680
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1632, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1632, 5, 5]          14,688          14,688
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1632, 5, 5]           3,264           3,264
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 448, 5, 5]         731,136         731,136
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 448, 5, 5]             896             896
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         573,440         573,440
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 5,447,844
Trainable params: 5,447,844
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.386477, Validation Loss: 0.454819, Training Accuracy: 0.921444, Validation Accuracy: 0.870588
Validation loss decreased (inf --> 0.454819).  Saving model ...
Epoch: 2, Training Loss: 0.380072, Validation Loss: 0.513258, Training Accuracy: 0.922253, Validation Accuracy: 0.835481
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.373529, Validation Loss: 0.455848, Training Accuracy: 0.922689, Validation Accuracy: 0.870588
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.370660, Validation Loss: 0.608804, Training Accuracy: 0.924805, Validation Accuracy: 0.797759
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.373317, Validation Loss: 0.512133, Training Accuracy: 0.925117, Validation Accuracy: 0.846312
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.361505, Validation Loss: 0.392497, Training Accuracy: 0.931404, Validation Accuracy: 0.899907
Validation loss decreased (0.454819 --> 0.392497).  Saving model ...
Epoch: 7, Training Loss: 0.351865, Validation Loss: 0.394843, Training Accuracy: 0.935512, Validation Accuracy: 0.899720
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.352198, Validation Loss: 0.397796, Training Accuracy: 0.934516, Validation Accuracy: 0.899346
EarlyStopping counter: 2 out of 10
Epoch: 9, Training Loss: 0.351585, Validation Loss: 0.396025, Training Accuracy: 0.934018, Validation Accuracy: 0.899160
EarlyStopping counter: 3 out of 10
Epoch: 10, Training Loss: 0.352471, Validation Loss: 0.397514, Training Accuracy: 0.935948, Validation Accuracy: 0.896359
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 4 out of 10
Epoch: 11, Training Loss: 0.352557, Validation Loss: 0.391790, Training Accuracy: 0.936881, Validation Accuracy: 0.897292
Validation loss decreased (0.392497 --> 0.391790).  Saving model ...
Epoch: 12, Training Loss: 0.350476, Validation Loss: 0.391802, Training Accuracy: 0.937068, Validation Accuracy: 0.898039
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.349795, Validation Loss: 0.391427, Training Accuracy: 0.936695, Validation Accuracy: 0.898226
Validation loss decreased (0.391790 --> 0.391427).  Saving model ...
Epoch: 14, Training Loss: 0.350800, Validation Loss: 0.392180, Training Accuracy: 0.937068, Validation Accuracy: 0.898226
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 1 out of 10
Epoch: 15, Training Loss: 0.347348, Validation Loss: 0.390971, Training Accuracy: 0.936819, Validation Accuracy: 0.898039
Validation loss decreased (0.391427 --> 0.390971).  Saving model ...
Epoch: 16, Training Loss: 0.349454, Validation Loss: 0.392289, Training Accuracy: 0.938064, Validation Accuracy: 0.898599
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.350180, Validation Loss: 0.392949, Training Accuracy: 0.938251, Validation Accuracy: 0.899720
EarlyStopping counter: 2 out of 10
Epoch: 18, Training Loss: 0.350764, Validation Loss: 0.390574, Training Accuracy: 0.939994, Validation Accuracy: 0.898973
Validation loss decreased (0.390971 --> 0.390574).  Saving model ...
Epoch: 19, Training Loss: 0.346819, Validation Loss: 0.391183, Training Accuracy: 0.936197, Validation Accuracy: 0.898973
EarlyStopping counter: 1 out of 10
Epoch: 20, Training Loss: 0.344874, Validation Loss: 0.393093, Training Accuracy: 0.938375, Validation Accuracy: 0.898786
EarlyStopping counter: 2 out of 10
Epoch: 21, Training Loss: 0.346035, Validation Loss: 0.392789, Training Accuracy: 0.937255, Validation Accuracy: 0.899533
EarlyStopping counter: 3 out of 10
Epoch: 22, Training Loss: 0.356057, Validation Loss: 0.389518, Training Accuracy: 0.933707, Validation Accuracy: 0.899346
Validation loss decreased (0.390574 --> 0.389518).  Saving model ...
Epoch: 23, Training Loss: 0.348717, Validation Loss: 0.393042, Training Accuracy: 0.937130, Validation Accuracy: 0.899907
EarlyStopping counter: 1 out of 10
Epoch: 24, Training Loss: 0.350665, Validation Loss: 0.390366, Training Accuracy: 0.934703, Validation Accuracy: 0.898973
EarlyStopping counter: 2 out of 10
Epoch: 25, Training Loss: 0.345912, Validation Loss: 0.392739, Training Accuracy: 0.937317, Validation Accuracy: 0.899160
EarlyStopping counter: 3 out of 10
Epoch: 26, Training Loss: 0.344562, Validation Loss: 0.391981, Training Accuracy: 0.938500, Validation Accuracy: 0.899160
EarlyStopping counter: 4 out of 10
Epoch: 27, Training Loss: 0.343382, Validation Loss: 0.395283, Training Accuracy: 0.938936, Validation Accuracy: 0.898786
EarlyStopping counter: 5 out of 10
Epoch: 28, Training Loss: 0.354710, Validation Loss: 0.394295, Training Accuracy: 0.934890, Validation Accuracy: 0.898786
EarlyStopping counter: 6 out of 10
Epoch: 29, Training Loss: 0.344285, Validation Loss: 0.392091, Training Accuracy: 0.939060, Validation Accuracy: 0.898599
EarlyStopping counter: 7 out of 10
Epoch: 30, Training Loss: 0.342805, Validation Loss: 0.392276, Training Accuracy: 0.938500, Validation Accuracy: 0.899160
EarlyStopping counter: 8 out of 10
Epoch: 31, Training Loss: 0.348993, Validation Loss: 0.392816, Training Accuracy: 0.933831, Validation Accuracy: 0.900093
EarlyStopping counter: 9 out of 10
Epoch: 32, Training Loss: 0.351145, Validation Loss: 0.392740, Training Accuracy: 0.936819, Validation Accuracy: 0.898226
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 32
Ended Training Cycle
backbone.blocks.6.0._expand_conv
[621, 1375, 375, 259, 868, 1429, 252, 846, 1570, 661, 1102, 1233, 322, 1494, 75, 607, 818, 483, 799, 610, 972, 238, 51, 1471, 882, 22, 928, 1258, 747, 1597, 1358, 1520, 136, 556, 485, 920, 1342, 913, 1209, 1246, 92, 800, 1216, 770, 975, 597, 1432, 1435, 663, 587, 373, 65, 1055, 501, 981, 378, 1559, 1291, 1077, 1017, 1324, 743, 100, 1328, 632, 19, 824, 672, 175, 390, 41, 1182, 200, 1474, 406, 1396, 1613, 95, 230, 1515, 1401, 496, 762, 1054, 37, 445, 1042, 130, 710, 964, 996, 889, 227, 1185, 811, 665, 793, 1356, 1203, 1552, 440, 639, 1618, 470, 1275, 273, 1286, 1133, 676, 1065, 595, 1238, 278, 1350, 1294, 1019, 630, 93, 1322, 1340, 1119, 627, 1472, 1453, 502, 1279, 658, 1466, 205, 1239, 1249, 850, 1502, 827, 1305, 1598, 826, 557, 184, 879, 409, 298, 1319, 955, 1218, 1270, 372, 540, 1002, 525, 369, 555, 1490, 228, 951, 979, 310, 678, 48, 198, 16, 1311, 319, 208]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.6.0._expand_conv (Conv2d(115, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.6.0._expand_conv (Conv2d(115, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
[1] prune_out_channels on backbone.blocks.6.0._expand_conv (Conv2d(115, 1468, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.6.0._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[2] prune_out_channels on backbone.blocks.6.0._bn0 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_5(HardtanhBackward0), #idxs=164
[3] prune_out_channels on _ElementWiseOp_5(HardtanhBackward0) => prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(1468, 1468, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1468, bias=False)), #idxs=164
[4] prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(1468, 1468, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1468, bias=False)) => prune_out_channels on backbone.blocks.6.0._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=164
[5] prune_out_channels on backbone.blocks.6.0._bn1 (BatchNorm2d(1468, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_4(HardtanhBackward0), #idxs=164
[6] prune_out_channels on _ElementWiseOp_4(HardtanhBackward0) => prune_in_channels on backbone.blocks.6.0._project_conv (Conv2d(1468, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=164
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.6.0._expand_conv
3
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.6.0._depthwise_conv
2
tensor([True, True, True,  ..., True, True, True])
torch.Size([1632])
torch.Size([1468])
backbone.blocks.6.0._depthwise_conv
[743, 408, 1157, 1027, 543, 1384, 659, 908, 1003, 1253, 330, 675, 1160, 1317, 623, 901, 789, 600, 634, 747, 689, 246, 1047, 501, 302, 1418, 860, 495, 144, 590, 763, 625, 764, 597, 1112, 18, 265, 427, 715, 255, 968, 841, 1299, 785, 1316, 1278, 227, 642, 746, 102, 506, 1189, 252, 1238, 1402, 370, 909, 997, 1329, 1054, 84, 540, 704, 1092, 1340, 960, 1163, 125, 554, 150, 831, 1094, 260, 1130, 1220, 325, 436, 46, 545, 773, 1267, 1080, 337, 205, 168, 381, 1108, 437, 517, 341, 669, 881, 316, 485, 288, 876, 1313, 858, 321, 268, 1071, 1322, 684, 416, 1361, 869, 821, 287, 649, 1261, 751, 813, 1411, 1465, 805, 712, 165, 1254, 486, 1069, 347, 307, 1180, 1073, 1303, 906, 140, 62, 391, 85, 580, 1269, 699, 1170, 742, 256, 1184, 608, 1353, 1441, 306, 1281, 129, 1144, 350, 1336, 591]
Depthwise Detected

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(1321, 1321, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(1321, 1321, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1321, bias=False)), #idxs=147
[1] prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(1321, 1321, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1321, bias=False)) => prune_out_channels on _ElementWiseOp_5(HardtanhBackward0), #idxs=147
[2] prune_out_channels on backbone.blocks.6.0._depthwise_conv (Conv2d(1321, 1321, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1321, bias=False)) => prune_out_channels on backbone.blocks.6.0._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[3] prune_out_channels on backbone.blocks.6.0._bn1 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_4(HardtanhBackward0), #idxs=147
[4] prune_out_channels on _ElementWiseOp_4(HardtanhBackward0) => prune_in_channels on backbone.blocks.6.0._project_conv (Conv2d(1321, 448, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
[5] prune_out_channels on _ElementWiseOp_5(HardtanhBackward0) => prune_out_channels on backbone.blocks.6.0._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=147
[6] prune_out_channels on backbone.blocks.6.0._bn0 (BatchNorm2d(1321, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on backbone.blocks.6.0._expand_conv (Conv2d(115, 1321, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=147
--------------------------------

<bound method DepthwiseConvPruner.prune_out_channels of <torch_pruning.pruner.function.DepthwiseConvPruner object at 0x7fd7844892a0>>
backbone.blocks.6.0._depthwise_conv
2
tensor([ True,  True,  True,  ..., False,  True,  True])
torch.Size([1468])
torch.Size([1321])
<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.6.0._expand_conv
3
tensor([ True,  True,  True,  ..., False,  True,  True])
torch.Size([1468])
torch.Size([1321])
backbone.blocks.6.0._project_conv
[234, 191, 193, 199, 200, 201, 204, 206, 207, 219, 220, 0, 226, 230, 231, 233, 189, 239, 240, 241, 242, 244, 245, 248, 250, 268, 274, 280, 284, 286, 287, 156, 125, 126, 128, 129, 130, 134, 137, 140, 142, 143, 144, 147, 148]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.blocks.6.0._project_conv (Conv2d(1321, 403, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.6.0._project_conv (Conv2d(1321, 403, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=45
[1] prune_out_channels on backbone.blocks.6.0._project_conv (Conv2d(1321, 403, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.blocks.6.0._bn2 (BatchNorm2d(403, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=45
[2] prune_out_channels on backbone.blocks.6.0._bn2 (BatchNorm2d(403, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_in_channels on backbone.head.0 (Conv2d(403, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=45
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.blocks.6.0._project_conv
1
tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True, False, False,  True, False, False,
        False,  True,  True,  True, False,  True,  True, False,  True,  True,
        False,  True, False, False, False,  True,  True, False, False,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
         True, False,  True, False,  True,  True,  True,  True,  True, False,
        False, False,  True,  True, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True, False,
        False,  True,  True,  True,  True,  True, False,  True,  True,  True,
        False, False,  True, False, False,  True,  True,  True,  True, False,
        False, False, False,  True, False, False,  True,  True, False,  True,
        False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
        False,  True,  True,  True, False,  True, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True])
torch.Size([448])
torch.Size([403])
Starting Training Cycle
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 83, 10, 10]          45,069          45,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 777, 5, 5]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 777, 5, 5]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 115, 5, 5]          89,355          89,355
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1321, 5, 5]          11,889          11,889
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 403, 5, 5]         532,363         532,363
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 403, 5, 5]             806             806
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1280, 5, 5]         515,840         515,840
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1280, 5, 5]           2,560           2,560
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1280, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1280, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1280]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           6,405           6,405
============================================================================================================================
Total params: 5,151,573
Trainable params: 5,151,573
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.387923, Validation Loss: 0.432299, Training Accuracy: 0.927856, Validation Accuracy: 0.882540
Validation loss decreased (inf --> 0.432299).  Saving model ...
Epoch: 2, Training Loss: 0.387358, Validation Loss: 0.439672, Training Accuracy: 0.922502, Validation Accuracy: 0.880112
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.387290, Validation Loss: 0.441600, Training Accuracy: 0.924370, Validation Accuracy: 0.873950
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.389571, Validation Loss: 0.516340, Training Accuracy: 0.921382, Validation Accuracy: 0.846872
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.389558, Validation Loss: 0.459098, Training Accuracy: 0.921569, Validation Accuracy: 0.870588
Epoch 00005: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 4 out of 10
Epoch: 6, Training Loss: 0.366878, Validation Loss: 0.405832, Training Accuracy: 0.933084, Validation Accuracy: 0.897106
Validation loss decreased (0.432299 --> 0.405832).  Saving model ...
Epoch: 7, Training Loss: 0.366766, Validation Loss: 0.398780, Training Accuracy: 0.933956, Validation Accuracy: 0.899533
Validation loss decreased (0.405832 --> 0.398780).  Saving model ...
Epoch: 8, Training Loss: 0.367347, Validation Loss: 0.405012, Training Accuracy: 0.935574, Validation Accuracy: 0.895425
EarlyStopping counter: 1 out of 10
Epoch: 9, Training Loss: 0.361163, Validation Loss: 0.402886, Training Accuracy: 0.936321, Validation Accuracy: 0.897666
EarlyStopping counter: 2 out of 10
Epoch: 10, Training Loss: 0.363928, Validation Loss: 0.403979, Training Accuracy: 0.935201, Validation Accuracy: 0.895985
Epoch 00010: reducing learning rate of group 0 to 1.0000e-07.
EarlyStopping counter: 3 out of 10
Epoch: 11, Training Loss: 0.368254, Validation Loss: 0.403137, Training Accuracy: 0.935512, Validation Accuracy: 0.897106
EarlyStopping counter: 4 out of 10
Epoch: 12, Training Loss: 0.363259, Validation Loss: 0.401275, Training Accuracy: 0.936321, Validation Accuracy: 0.897292
EarlyStopping counter: 5 out of 10
Epoch: 13, Training Loss: 0.362479, Validation Loss: 0.403475, Training Accuracy: 0.937193, Validation Accuracy: 0.896919
EarlyStopping counter: 6 out of 10
Epoch: 14, Training Loss: 0.368435, Validation Loss: 0.403627, Training Accuracy: 0.934267, Validation Accuracy: 0.897292
Epoch 00014: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 7 out of 10
Epoch: 15, Training Loss: 0.361758, Validation Loss: 0.402541, Training Accuracy: 0.937006, Validation Accuracy: 0.897106
EarlyStopping counter: 8 out of 10
Epoch: 16, Training Loss: 0.358963, Validation Loss: 0.403743, Training Accuracy: 0.937193, Validation Accuracy: 0.896172
EarlyStopping counter: 9 out of 10
Epoch: 17, Training Loss: 0.360185, Validation Loss: 0.403077, Training Accuracy: 0.935325, Validation Accuracy: 0.895425
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 17
Ended Training Cycle
backbone.head.0
[155, 290, 1045, 271, 268, 1197, 1048, 265, 1192, 882, 532, 1049, 246, 560, 860, 340, 812, 570, 582, 799, 57, 602, 60, 647, 791, 178, 755, 194, 706, 716, 963, 980, 334, 108, 96, 400, 319, 406, 14, 111, 892, 1272, 4, 115, 953, 1216, 1035, 341, 940, 1277, 426, 628, 438, 55, 264, 944, 302, 500, 890, 802, 507, 1140, 22, 376, 17, 1246, 1224, 204, 984, 280, 720, 330, 846, 1052, 384, 564, 1227, 1243, 250, 425, 243, 449, 517, 599, 408, 649, 665, 972, 279, 1215, 914, 427, 565, 589, 648, 1007, 900, 1257, 1226, 1056, 508, 1, 63, 469, 1254, 691, 732, 494, 1105, 957, 770, 288, 1154, 962, 1060, 11, 411, 999, 478, 375, 454, 983, 590, 493, 1184, 94, 1213, 848]

--------------------------------
          Pruning Group
--------------------------------
[0] prune_out_channels on backbone.head.0 (Conv2d(403, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.head.0 (Conv2d(403, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)), #idxs=128
[1] prune_out_channels on backbone.head.0 (Conv2d(403, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)) => prune_out_channels on backbone.head.1 (BatchNorm2d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)), #idxs=128
[2] prune_out_channels on backbone.head.1 (BatchNorm2d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)) => prune_out_channels on _ElementWiseOp_3(HardtanhBackward0), #idxs=128
[3] prune_out_channels on _ElementWiseOp_3(HardtanhBackward0) => prune_out_channels on _ElementWiseOp_2(MeanBackward1), #idxs=128
[4] prune_out_channels on _ElementWiseOp_2(MeanBackward1) => prune_out_channels on _Reshape_0(), #idxs=128
[5] prune_out_channels on _Reshape_0() => prune_in_channels on backbone.fc (Linear(in_features=1152, out_features=5, bias=True)), #idxs=128
[6] prune_in_channels on backbone.fc (Linear(in_features=1152, out_features=5, bias=True)) => prune_out_channels on _ElementWiseOp_1(TBackward0), #idxs=128
--------------------------------

<bound method ConvPruner.prune_out_channels of <torch_pruning.pruner.function.ConvPruner object at 0x7fd784489960>>
backbone.head.0
0
tensor([ True, False,  True,  ..., False,  True,  True])
torch.Size([1280])
torch.Size([1152])
----------------------------------------------------------------------------------------------------------------------------
                                 Parent Layers             Layer (type)         Output Shape         Param #     Tr. Param #
============================================================================================================================
               RecycleNetwork/EfficientNetLite                 Conv2d-1      [1, 25, 75, 75]             675             675
               RecycleNetwork/EfficientNetLite            BatchNorm2d-2      [1, 25, 75, 75]              50              50
               RecycleNetwork/EfficientNetLite                  ReLU6-3      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-4      [1, 25, 75, 75]             225             225
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-5      [1, 25, 75, 75]              50              50
   RecycleNetwork/EfficientNetLite/MBConvBlock                  ReLU6-6      [1, 25, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-7      [1, 21, 75, 75]             525             525
   RecycleNetwork/EfficientNetLite/MBConvBlock            BatchNorm2d-8      [1, 21, 75, 75]              42              42
   RecycleNetwork/EfficientNetLite/MBConvBlock                 Conv2d-9     [1, 116, 75, 75]           2,436           2,436
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-10     [1, 116, 75, 75]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-11     [1, 116, 75, 75]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-12     [1, 116, 38, 38]           1,044           1,044
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-13     [1, 116, 38, 38]             232             232
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-14      [1, 19, 38, 38]           2,204           2,204
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-15      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-16     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-17     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-18     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-19     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-20     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-21      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-22      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-23     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-24     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-25     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-26     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-27     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-28      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-29      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-30     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-31     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-32     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-33     [1, 154, 38, 38]           1,386           1,386
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-34     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-35      [1, 19, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-36      [1, 19, 38, 38]              38              38
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-37     [1, 154, 38, 38]           2,926           2,926
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-38     [1, 154, 38, 38]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-39     [1, 154, 38, 38]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-40     [1, 154, 19, 19]           3,850           3,850
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-41     [1, 154, 19, 19]             308             308
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-42      [1, 36, 19, 19]           5,544           5,544
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-43      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-44     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-45     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-46     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-47     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-48     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-49      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-50      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-51     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-52     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-53     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-54     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-55     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-56      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-57      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-58     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-59     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-60     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-61     [1, 271, 19, 19]           6,775           6,775
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-62     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-63      [1, 36, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-64      [1, 36, 19, 19]              72              72
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-65     [1, 271, 19, 19]           9,756           9,756
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-66     [1, 271, 19, 19]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-67     [1, 271, 19, 19]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-68     [1, 271, 10, 10]           2,439           2,439
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-69     [1, 271, 10, 10]             542             542
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-70      [1, 57, 10, 10]          15,447          15,447
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-71      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-72     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-73     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-74     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-75     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-76     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-77      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-78      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-79     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-80     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-81     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-82     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-83     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-84      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-85      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-86     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-87     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-88     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-89     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-90     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-91      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-92      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-93     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-94     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                 ReLU6-95     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-96     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-97     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                Conv2d-98      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock           BatchNorm2d-99      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-100     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-101     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-102     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-103     [1, 543, 10, 10]           4,887           4,887
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-104     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-105      [1, 57, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-106      [1, 57, 10, 10]             114             114
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-107     [1, 543, 10, 10]          30,951          30,951
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-108     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-109     [1, 543, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-110     [1, 543, 10, 10]          13,575          13,575
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-111     [1, 543, 10, 10]           1,086           1,086
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-112      [1, 83, 10, 10]          45,069          45,069
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-113      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-114     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-115     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-116     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-117     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-118     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-119      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-120      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-121     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-122     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-123     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-124     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-125     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-126      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-127      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-128     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-129     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-130     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-131     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-132     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-133      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-134      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-135     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-136     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-137     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-138     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-139     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-140      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-141      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-142     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-143     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-144     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-145     [1, 777, 10, 10]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-146     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-147      [1, 83, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-148      [1, 83, 10, 10]             166             166
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-149     [1, 777, 10, 10]          64,491          64,491
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-150     [1, 777, 10, 10]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-151     [1, 777, 10, 10]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-152       [1, 777, 5, 5]          19,425          19,425
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-153       [1, 777, 5, 5]           1,554           1,554
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-154       [1, 115, 5, 5]          89,355          89,355
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-155       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-156      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-157      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-158      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-159      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-160      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-161       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-162       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-163      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-164      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-165      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-166      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-167      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-168       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-169       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-170      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-171      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-172      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-173      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-174      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-175       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-176       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-177      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-178      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-179      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-180      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-181      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-182       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-183       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-184      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-185      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-186      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-187      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-188      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-189       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-190       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-191      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-192      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-193      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-194      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-195      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-196       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-197       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-198      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-199      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-200      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-201      [1, 1321, 5, 5]          33,025          33,025
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-202      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-203       [1, 115, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-204       [1, 115, 5, 5]             230             230
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-205      [1, 1321, 5, 5]         151,915         151,915
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-206      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock                ReLU6-207      [1, 1321, 5, 5]               0               0
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-208      [1, 1321, 5, 5]          11,889          11,889
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-209      [1, 1321, 5, 5]           2,642           2,642
   RecycleNetwork/EfficientNetLite/MBConvBlock               Conv2d-210       [1, 403, 5, 5]         532,363         532,363
   RecycleNetwork/EfficientNetLite/MBConvBlock          BatchNorm2d-211       [1, 403, 5, 5]             806             806
               RecycleNetwork/EfficientNetLite               Conv2d-212      [1, 1152, 5, 5]         464,256         464,256
               RecycleNetwork/EfficientNetLite          BatchNorm2d-213      [1, 1152, 5, 5]           2,304           2,304
               RecycleNetwork/EfficientNetLite                ReLU6-214      [1, 1152, 5, 5]               0               0
               RecycleNetwork/EfficientNetLite    AdaptiveAvgPool2d-215      [1, 1152, 1, 1]               0               0
               RecycleNetwork/EfficientNetLite              Dropout-216            [1, 1152]               0               0
               RecycleNetwork/EfficientNetLite               Linear-217               [1, 5]           5,765           5,765
============================================================================================================================
Total params: 5,099,093
Trainable params: 5,099,093
Non-trainable params: 0
----------------------------------------------------------------------------------------------------------------------------
Training Started
Epoch: 1, Training Loss: 0.430557, Validation Loss: 0.539964, Training Accuracy: 0.921693, Validation Accuracy: 0.849486
Validation loss decreased (inf --> 0.539964).  Saving model ...
Epoch: 2, Training Loss: 0.429877, Validation Loss: 0.554985, Training Accuracy: 0.925117, Validation Accuracy: 0.828758
EarlyStopping counter: 1 out of 10
Epoch: 3, Training Loss: 0.433761, Validation Loss: 0.547420, Training Accuracy: 0.922129, Validation Accuracy: 0.843697
EarlyStopping counter: 2 out of 10
Epoch: 4, Training Loss: 0.432053, Validation Loss: 0.582978, Training Accuracy: 0.921133, Validation Accuracy: 0.821475
EarlyStopping counter: 3 out of 10
Epoch: 5, Training Loss: 0.429282, Validation Loss: 0.519513, Training Accuracy: 0.921942, Validation Accuracy: 0.853221
Validation loss decreased (0.539964 --> 0.519513).  Saving model ...
Epoch: 6, Training Loss: 0.435835, Validation Loss: 0.495219, Training Accuracy: 0.919390, Validation Accuracy: 0.859757
Validation loss decreased (0.519513 --> 0.495219).  Saving model ...
Epoch: 7, Training Loss: 0.428267, Validation Loss: 0.549833, Training Accuracy: 0.921382, Validation Accuracy: 0.844444
EarlyStopping counter: 1 out of 10
Epoch: 8, Training Loss: 0.427654, Validation Loss: 0.499048, Training Accuracy: 0.920137, Validation Accuracy: 0.866667
EarlyStopping counter: 2 out of 10
Epoch: 9, Training Loss: 0.432238, Validation Loss: 0.537411, Training Accuracy: 0.920510, Validation Accuracy: 0.850420
EarlyStopping counter: 3 out of 10
Epoch: 10, Training Loss: 0.429080, Validation Loss: 0.460601, Training Accuracy: 0.921444, Validation Accuracy: 0.885901
Validation loss decreased (0.495219 --> 0.460601).  Saving model ...
Epoch: 11, Training Loss: 0.419257, Validation Loss: 0.460367, Training Accuracy: 0.921008, Validation Accuracy: 0.885901
Validation loss decreased (0.460601 --> 0.460367).  Saving model ...
Epoch: 12, Training Loss: 0.425158, Validation Loss: 0.506933, Training Accuracy: 0.919016, Validation Accuracy: 0.858637
EarlyStopping counter: 1 out of 10
Epoch: 13, Training Loss: 0.422225, Validation Loss: 0.594933, Training Accuracy: 0.920324, Validation Accuracy: 0.816807
EarlyStopping counter: 2 out of 10
Epoch: 14, Training Loss: 0.422210, Validation Loss: 0.488128, Training Accuracy: 0.922565, Validation Accuracy: 0.860131
Epoch 00014: reducing learning rate of group 0 to 1.0000e-06.
EarlyStopping counter: 3 out of 10
Epoch: 15, Training Loss: 0.413899, Validation Loss: 0.435533, Training Accuracy: 0.927607, Validation Accuracy: 0.893744
Validation loss decreased (0.460367 --> 0.435533).  Saving model ...
Epoch: 16, Training Loss: 0.402652, Validation Loss: 0.441446, Training Accuracy: 0.931590, Validation Accuracy: 0.895425
EarlyStopping counter: 1 out of 10
Epoch: 17, Training Loss: 0.400579, Validation Loss: 0.435517, Training Accuracy: 0.932088, Validation Accuracy: 0.899346
Validation loss decreased (0.435533 --> 0.435517).  Saving model ...
Epoch: 18, Training Loss: 0.404919, Validation Loss: 0.435845, Training Accuracy: 0.931528, Validation Accuracy: 0.897106
EarlyStopping counter: 1 out of 10
Epoch: 19, Training Loss: 0.403039, Validation Loss: 0.434632, Training Accuracy: 0.933209, Validation Accuracy: 0.898226
Epoch 00019: reducing learning rate of group 0 to 1.0000e-07.
Validation loss decreased (0.435517 --> 0.434632).  Saving model ...
Epoch: 20, Training Loss: 0.402801, Validation Loss: 0.429291, Training Accuracy: 0.934205, Validation Accuracy: 0.898599
Validation loss decreased (0.434632 --> 0.429291).  Saving model ...
Epoch: 21, Training Loss: 0.404122, Validation Loss: 0.427917, Training Accuracy: 0.931155, Validation Accuracy: 0.899720
Validation loss decreased (0.429291 --> 0.427917).  Saving model ...
Epoch: 22, Training Loss: 0.402025, Validation Loss: 0.430691, Training Accuracy: 0.932275, Validation Accuracy: 0.900093
EarlyStopping counter: 1 out of 10
Epoch: 23, Training Loss: 0.397032, Validation Loss: 0.431565, Training Accuracy: 0.936446, Validation Accuracy: 0.899346
Epoch 00023: reducing learning rate of group 0 to 1.0000e-08.
EarlyStopping counter: 2 out of 10
Epoch: 24, Training Loss: 0.398949, Validation Loss: 0.431498, Training Accuracy: 0.935885, Validation Accuracy: 0.900093
EarlyStopping counter: 3 out of 10
Epoch: 25, Training Loss: 0.393692, Validation Loss: 0.431432, Training Accuracy: 0.937504, Validation Accuracy: 0.899533
EarlyStopping counter: 4 out of 10
Epoch: 26, Training Loss: 0.400150, Validation Loss: 0.431138, Training Accuracy: 0.933956, Validation Accuracy: 0.899533
EarlyStopping counter: 5 out of 10
Epoch: 27, Training Loss: 0.400380, Validation Loss: 0.429718, Training Accuracy: 0.936134, Validation Accuracy: 0.900280
EarlyStopping counter: 6 out of 10
Epoch: 28, Training Loss: 0.399246, Validation Loss: 0.429676, Training Accuracy: 0.935761, Validation Accuracy: 0.899720
EarlyStopping counter: 7 out of 10
Epoch: 29, Training Loss: 0.398907, Validation Loss: 0.431676, Training Accuracy: 0.933894, Validation Accuracy: 0.899720
EarlyStopping counter: 8 out of 10
Epoch: 30, Training Loss: 0.403939, Validation Loss: 0.430911, Training Accuracy: 0.931528, Validation Accuracy: 0.900280
EarlyStopping counter: 9 out of 10
Epoch: 31, Training Loss: 0.397087, Validation Loss: 0.431603, Training Accuracy: 0.934703, Validation Accuracy: 0.899720
EarlyStopping counter: 10 out of 10
Early Stopping at Epoch: 31
Test Loss: 0.426417, Test Accuracy: 0.8947
